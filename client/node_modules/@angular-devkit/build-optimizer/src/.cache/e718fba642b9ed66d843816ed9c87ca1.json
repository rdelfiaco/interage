{"remainingRequest":"/home/neto/work/interage/interage-front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/neto/work/interage/interage-front-end/src/app/shared/sha1.js","dependencies":[{"path":"/home/neto/work/interage/interage-front-end/src/app/shared/sha1.js","mtime":1543269077423},{"path":"/home/neto/work/interage/interage-front-end/node_modules/cache-loader/dist/cjs.js","mtime":1537575175009},{"path":"/home/neto/work/interage/interage-front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1537575174321}],"contextDependencies":[],"result":["export default function SHA1(msg) {\n  function rotate_left(n, s) {\n    var t4 = (n << s) | (n >>> (32 - s));\n    return t4;\n  };\n\n  function lsb_hex(val) {\n    var str = \"\";\n    var i;\n    var vh;\n    var vl;\n\n    for (i = 0; i <= 6; i += 2) {\n      vh = (val >>> (i * 4 + 4)) & 0x0f;\n      vl = (val >>> (i * 4)) & 0x0f;\n      str += vh.toString(16) + vl.toString(16);\n    }\n    return str;\n  };\n\n  function cvt_hex(val) {\n    var str = \"\";\n    var i;\n    var v;\n\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f;\n      str += v.toString(16);\n    }\n    return str;\n  };\n\n  function Utf8Encode(string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n < string.length; n++) {\n\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if ((c > 127) && (c < 2048)) {\n        utftext += String.fromCharCode((c >> 6) | 192);\n        utftext += String.fromCharCode((c & 63) | 128);\n      } else {\n        utftext += String.fromCharCode((c >> 12) | 224);\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n    }\n    return utftext;\n  };\n\n  var blockstart;\n  var i, j;\n  var W = new Array(80);\n  var H0 = 0x67452301;\n  var H1 = 0xEFCDAB89;\n  var H2 = 0x98BADCFE;\n  var H3 = 0x10325476;\n  var H4 = 0xC3D2E1F0;\n  var A, B, C, D, E;\n  var temp;\n\n  msg = Utf8Encode(msg);\n\n  var msg_len = msg.length;\n\n  var word_array = new Array();\n  for (i = 0; i < msg_len - 3; i += 4) {\n    j = msg.charCodeAt(i) << 24 | msg.charCodeAt(i + 1) << 16 | msg.charCodeAt(i + 2) << 8 | msg.charCodeAt(i + 3);\n    word_array.push(j);\n  }\n\n  switch (msg_len % 4) {\n    case 0:\n      i = 0x080000000;\n      break;\n    case 1:\n      i = msg.charCodeAt(msg_len - 1) << 24 | 0x0800000;\n      break;\n\n    case 2:\n      i = msg.charCodeAt(msg_len - 2) << 24 | msg.charCodeAt(msg_len - 1) << 16 | 0x08000;\n      break;\n\n    case 3:\n      i = msg.charCodeAt(msg_len - 3) << 24 | msg.charCodeAt(msg_len - 2) << 16 | msg.charCodeAt(msg_len - 1) << 8 | 0x80;\n      break;\n  }\n\n  word_array.push(i);\n\n  while ((word_array.length % 16) != 14)\n    word_array.push(0);\n\n  word_array.push(msg_len >>> 29);\n  word_array.push((msg_len << 3) & 0x0ffffffff);\n\n  for (blockstart = 0; blockstart < word_array.length; blockstart += 16) {\n\n    for (i = 0; i < 16; i++)\n      W[i] = word_array[blockstart + i];\n    for (i = 16; i <= 79; i++)\n      W[i] = rotate_left(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n    A = H0;\n    B = H1;\n    C = H2;\n    D = H3;\n    E = H4;\n\n    for (i = 0; i <= 19; i++) {\n      temp = (rotate_left(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 20; i <= 39; i++) {\n      temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 40; i <= 59; i++) {\n      temp = (rotate_left(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    for (i = 60; i <= 79; i++) {\n      temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n\n    H0 = (H0 + A) & 0x0ffffffff;\n    H1 = (H1 + B) & 0x0ffffffff;\n    H2 = (H2 + C) & 0x0ffffffff;\n    H3 = (H3 + D) & 0x0ffffffff;\n    H4 = (H4 + E) & 0x0ffffffff;\n\n  }\n\n  var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\n\n  return temp.toLowerCase();\n\n}",null]}