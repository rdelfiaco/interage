{"version":3,"file":"ng-uikit-pro-standard.umd.js","sources":["../../../build/ng-uikit-pro-standard/mdb.module.ts","../../../build/ng-uikit-pro-standard/pro/mdb-pro.module.ts","../../../build/ng-uikit-pro-standard/free/mdb-free.module.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/bs-component-ref.class.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.module.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.directive.ts","../../../build/ng-uikit-pro-standard/free/utils/decorators.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.component.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.service.ts","../../../build/ng-uikit-pro-standard/free/waves/waves.module.ts","../../../build/ng-uikit-pro-standard/free/ripple/ripple.module.ts","../../../build/ng-uikit-pro-standard/free/ripple/ripple-effect.directive.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.module.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.directive.ts","../../../build/ng-uikit-pro-standard/free/popover/popover-container.component.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.config.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.module.ts","../../../build/ng-uikit-pro-standard/free/navbars/navlinks.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/logo.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/links.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.service.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.module.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.service.ts","../../../build/ng-uikit-pro-standard/free/modals/modalContainer.component.ts","../../../build/ng-uikit-pro-standard/free/modals/modalService.config.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.directive.ts","../../../build/ng-uikit-pro-standard/free/modals/modalBackdrop.component.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.options.ts","../../../build/ng-uikit-pro-standard/free/utils/utils.class.ts","../../../build/ng-uikit-pro-standard/free/inputs/inputs.module.ts","../../../build/ng-uikit-pro-standard/free/inputs/equal-validator.directive.ts","../../../build/ng-uikit-pro-standard/free/inputs/mdb-input.directive.ts","../../../build/ng-uikit-pro-standard/free/icons/icon.module.ts","../../../build/ng-uikit-pro-standard/free/icons/icon.component.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.module.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.directive.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/component-loader.factory.ts","../../../build/ng-uikit-pro-standard/free/utils/positioning/positioning.service.ts","../../../build/ng-uikit-pro-standard/free/utils/positioning/ng-positioning.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/component-loader.class.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/content-ref.class.ts","../../../build/ng-uikit-pro-standard/free/utils/triggers.ts","../../../build/ng-uikit-pro-standard/free/utils/trigger.class.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.config.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-toggle.directive.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-menu.directive.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-container.component.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.state.ts","../../../build/ng-uikit-pro-standard/free/collapse/collapse.module.ts","../../../build/ng-uikit-pro-standard/free/collapse/collapse.component.ts","../../../build/ng-uikit-pro-standard/free/checkbox/checkbox.module.ts","../../../build/ng-uikit-pro-standard/free/checkbox/checkbox.component.ts","../../../build/ng-uikit-pro-standard/free/charts/chart.module.ts","../../../build/ng-uikit-pro-standard/free/charts/chart.directive.ts","../../../build/ng-uikit-pro-standard/free/cards/cards.module.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-header.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-image.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-body.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-text.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-title.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-footer.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.module.ts","../../../build/ng-uikit-pro-standard/free/carousel/slide.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.config.ts","../../../build/ng-uikit-pro-standard/free/utils/linked-list.class.ts","../../../build/ng-uikit-pro-standard/free/utils/ng2-bootstrap-config.ts","../../../build/ng-uikit-pro-standard/free/utils/facade/browser.ts","../../../build/ng-uikit-pro-standard/free/buttons/buttons.module.ts","../../../build/ng-uikit-pro-standard/free/buttons/radio.directive.ts","../../../build/ng-uikit-pro-standard/free/buttons/checkbox.directive.ts","../../../build/ng-uikit-pro-standard/free/buttons/buttons.directive.ts","../../../build/ng-uikit-pro-standard/pro/time-picker/timepicker.module.ts","../../../build/ng-uikit-pro-standard/pro/time-picker/timepicker.component.ts","../../../build/ng-uikit-pro-standard/pro/tags/chips.module.ts","../../../build/ng-uikit-pro-standard/pro/tags/chips.component.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.module.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/transclude.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tab-heading.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tab.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.component.ts","../../../build/ng-uikit-pro-standard/free/waves/waves-effect.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.config.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/sticky-content.module.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/sticky-content.directive.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/computed.style.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.module.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.directive.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.instance.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.service.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.config.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll-util.service.ts","../../../build/ng-uikit-pro-standard/pro/sidenav/sidenav.module.ts","../../../build/ng-uikit-pro-standard/pro/sidenav/sidenav.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-bars-module/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner-module/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.module.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.config.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/bar.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress.directive.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner-module/progress-spinner.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-bars-module/progressbar.component.ts","../../../build/ng-uikit-pro-standard/pro/preloader/preloader.service.ts","../../../build/ng-uikit-pro-standard/pro/preloader/preloader.constants.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select.module.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select.component.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select-dropdown.component.ts","../../../build/ng-uikit-pro-standard/pro/material-select/option-list.ts","../../../build/ng-uikit-pro-standard/pro/material-select/option.ts","../../../build/ng-uikit-pro-standard/pro/material-select/diacritics.ts","../../../build/ng-uikit-pro-standard/pro/lightbox/light-box.module.ts","../../../build/ng-uikit-pro-standard/pro/lightbox/image-popup.ts","../../../build/ng-uikit-pro-standard/pro/inputs/char-counter.module.ts","../../../build/ng-uikit-pro-standard/pro/inputs/char-counter.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/module/mdb-uploader.module.ts","../../../build/ng-uikit-pro-standard/pro/file-input/directives/mdb-file-select.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/directives/mdb-file-drop.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/classes/mdb-uploader.class.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-simple.module.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-smallpie.component.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-simple.component.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/datepicker.module.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/datepicker.component.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/services/datepickerUtil.service.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/services/datepickerLocale.service.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/directives/datepickerFocus.directive.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/directives/datepickerAutofill.directive.ts","../../../build/ng-uikit-pro-standard/pro/cards/cards.module.ts","../../../build/ng-uikit-pro-standard/pro/cards/card-rotating.component.ts","../../../build/ng-uikit-pro-standard/pro/cards/card-reveal.component.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/ng2-completer.module.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/data-factory.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/row.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/list-context.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/input.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/dropdown.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/components/completer.component.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/completer.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/remote-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/local-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/base-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/globals.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/completer.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/components/completer-list-item.component.ts","../../../build/ng-uikit-pro-standard/pro/animations/animations.component.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.module.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.service.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.token.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.injector.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.directive.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.component.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.config.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay.ts","../../../build/ng-uikit-pro-standard/pro/alerts/portal/dom-portal-host.ts","../../../build/ng-uikit-pro-standard/pro/alerts/portal/portal.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay-ref.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay-container.ts","../../../build/ng-uikit-pro-standard/pro/accordion/index.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/squeezebox.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.head.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb.config.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.body.ts"],"sourcesContent":["import { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { MDBBootstrapModule } from './free/mdb-free.module';\nimport { MDBBootstrapModulePro } from './pro/mdb-pro.module';\n\nexport {\n  MDBBootstrapModule\n} from './free/mdb-free.module';\n\nexport {\n  MDBBootstrapModulePro\n} from './pro/mdb-pro.module';\n\nconst MODULES = [\n  MDBBootstrapModule,\n  MDBBootstrapModulePro\n];\n\n@NgModule({\n  imports: [\n    MDBBootstrapModule.forRoot(),\n    MDBBootstrapModulePro.forRoot(),\n  ],\n  exports: MODULES,\n  providers: [\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class MDBRootModules {\n}\n\n@NgModule({exports: MODULES})\nexport class MDBBootstrapModulesPro {\n  public static forRoot(): ModuleWithProviders {\n  return {ngModule: MDBRootModules};\n  }\n}\n","import { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { AutocompleteModule } from './autocomplete/ng2-completer.module';\nimport { CardsModule } from './cards/cards.module';\nimport { FileInputModule } from './file-input/module/mdb-uploader.module';\nimport { MaterialChipsModule } from './tags/chips.module';\nimport { ProgressBars } from './progressbars/index';\nimport { TabsModule } from './tabs-pills/tabset.module';\nimport { SelectModule } from './material-select/select.module';\nimport { DatepickerModule } from './date-picker/datepicker.module';\nimport { TimePickerModule } from './time-picker/timepicker.module';\nimport { LightBoxModule } from './lightbox/light-box.module';\nimport { SidenavModule } from './sidenav/sidenav.module';\nimport { ChartSimpleModule } from './easy-charts/chart-simple.module';\nimport { AccordionModule } from './accordion/index';\nimport { StickyContentModule } from './sticky-content/sticky-content.module';\nimport { SmoothscrollModule } from './smoothscroll/index';\nimport { CharCounterModule } from './inputs/char-counter.module';\n\n\nexport {\n  AutocompleteModule, CompleterComponent, CompleterListItemComponent, CompleterService, LocalDataFactoryProvider,\n  RemoteDataFactoryProvider, MdbCompleterDirective, MdbDropdownDirective, MdbInputCompleteDirective, MdbListDirective, MdbRowDirective\n} from './autocomplete/index';\n\n\nexport {\n  CardsModule, CardRotatingComponent, CardRevealComponent\n} from './cards/index';\n\nexport {\n  ProgressbarComponent, ProgressbarConfigComponent, ProgressbarModule, ProgressBars, ProgressDirective,\n  ProgressSpinnerComponent, BarComponent\n} from './progressbars/index';\n\nexport {\n  MaterialChipsComponent, MaterialChipsModule\n} from './tags/index';\n\nexport {\n  TabDirective, TabHeadingDirective, TabsetComponent, TabsetConfig, TabsModule, NgTranscludeDirective\n} from './tabs-pills/index';\n\nexport {\n  MDBSpinningPreloader\n} from './preloader/preloader.service';\n\n// export {\n//   ToastComponent, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastPackage, ToastRef, ToastIconClasses,\n//   ToastModule, ToastService, GlobalConfig, IndividualConfig, Overlay, OVERLAY_PROVIDERS, OverlayContainer, OverlayRef\n// } from './alerts/';\n\nexport {\n  SelectModule, Diacritics, Option, OptionList, IOption, SELECT_VALUE_ACCESSOR, SelectComponent, SelectDropdownComponent\n} from './material-select/index';\n\nexport {\n  MDBDatePickerComponent, DatepickerModule, IMyCalendarDay, IMyCalendarViewChanged, IMyDate, IMyDateModel, IMyDateRange,\n  IMyDayLabels, IMyInputAutoFill, IMyInputFieldChanged, IMyInputFocusBlur, IMyLocales, IMyMarkedDate, IMyMarkedDates,\n  IMyMonth, IMyMonthLabels, IMyOptions, IMyWeek, IMyWeekday, InputAutoFillDirective, MYDP_VALUE_ACCESSOR, UtilService,\n  LocaleService, FocusDirective\n} from './date-picker/index';\n\nexport {\n  TimePickerModule, ClockPickerComponent\n} from './time-picker/index';\n\nexport { LightBoxModule, ImageModalComponent } from './lightbox/index';\n\nexport {\n  SidenavComponent, SidenavModule\n} from './sidenav/index';\n\nexport {\n  ChartSimpleModule, EasyPieChartComponent, SimpleChartComponent\n} from './easy-charts/index';\n\nexport {\n  SBItemComponent, SBItemBodyComponent, SBItemHeadComponent, SqueezeBoxComponent, AccordionModule\n} from './accordion/index';\n\nexport {\n  MdbStickyDirective, StickyContentModule\n} from './sticky-content/index';\n\nexport {\n  SmoothscrollModule, PageScrollDirective, PageScrollConfig, PageScrollingViews, PageScrollInstance, PageScrollService,\n  PageScrollTarget, PageScrollUtilService, EasingLogic\n} from './smoothscroll/index';\n\nexport {\n  CharCounterDirective, CharCounterModule\n} from './inputs/index';\n\nexport {\n  MDBFileDropDirective, MDBFileSelectDirective, FileInputModule, MDBUploaderService, UploadFile, UploadOutput,\n  UploadInput, humanizeBytes\n} from './file-input/index';\n\nconst MODULES = [\n  AutocompleteModule,\n  CardsModule,\n  FileInputModule,\n  MaterialChipsModule,\n  ProgressBars,\n  TabsModule,\n  SelectModule,\n  DatepickerModule,\n  TimePickerModule,\n  LightBoxModule,\n  SidenavModule,\n  ChartSimpleModule,\n  AccordionModule,\n  StickyContentModule,\n  SmoothscrollModule,\n  CharCounterModule,\n];\n\n@NgModule({\n  imports: [\n    AutocompleteModule,\n    CardsModule.forRoot(),\n    MaterialChipsModule,\n    ProgressBars.forRoot(),\n    TabsModule.forRoot(),\n    SelectModule,\n    DatepickerModule,\n    TimePickerModule,\n    LightBoxModule,\n    SidenavModule,\n    ChartSimpleModule,\n    AccordionModule,\n    StickyContentModule,\n    SmoothscrollModule.forRoot(),\n    CharCounterModule.forRoot(),\n  ],\n  exports: [MODULES],\n  providers: [\n  ],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class MDBRootModulePro {\n}\n\n@NgModule({ exports: [MODULES] })\nexport class MDBBootstrapModulePro {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: MDBRootModulePro };\n  }\n}\n","\n\n// free\nimport { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { CardsFreeModule } from './cards/cards.module';\nimport { ButtonsModule } from './buttons/buttons.module';\nimport { RippleModule } from './ripple/ripple.module';\nimport { NavbarModule } from './navbars/navbar.module';\nimport { DropdownModule } from './dropdown/dropdown.module';\nimport { CarouselModule } from './carousel/carousel.module';\nimport { ChartsModule } from './charts/chart.module';\nimport { CollapseModule } from './collapse/collapse.module';\nimport { ModalModule } from './modals/modal.module';\nimport { TooltipModule } from './tooltip/tooltip.module';\nimport { PopoverModule } from './popover/popover.module';\nimport { InputsModule } from './inputs/inputs.module';\nimport { WavesModule } from './waves/waves.module';\nimport { IconsModule } from './icons/icon.module';\nimport { CheckboxModule } from './checkbox/checkbox.module';\n\nexport {\n  CHECKBOX_VALUE_ACCESSOR, CheckboxComponent, CheckboxModule \n} from './checkbox/index';\n\nexport {\n  ButtonsModule, ButtonRadioDirective, ButtonCheckboxDirective, MdbBtnDirective\n} from './buttons/index';\n\nexport {\n  CardsFreeModule,\n  MdbCardComponent,\n  MdbCardBodyComponent,\n  MdbCardImageComponent,\n  MdbCardTextComponent,\n  MdbCardTitleComponent,\n  MdbCardFooterComponent,\n  MdbCardHeaderComponent\n} from './cards/index';\n\nexport {\n  RippleModule, RippleDirective\n} from './ripple/index';\n\nexport {\n  WavesModule, WavesDirective\n} from './waves/index';\n\nexport {\n  InputsModule, MdbInputDirective\n} from './inputs/index';\n\nexport {\n  NavbarModule\n} from './navbars/index';\n\nexport {\n  BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective,\n  DropdownModule, BsDropdownState, BsDropdownToggleDirective\n} from './dropdown/index';\n\nexport {\n  CarouselComponent, CarouselConfig, CarouselModule\n} from './carousel/index';\n\nexport {\n  ChartsModule, BaseChartDirective\n} from './charts/index';\n\nexport {\n  CollapseComponent, CollapseModule\n} from './collapse/index';\n\nexport {\n  ModalBackdropComponent, ModalBackdropOptions, ModalDirective, ModalModule, ModalOptions, MDBModalService,\n  ModalContainerComponent, MDBModalRef\n} from './modals/index';\n\nexport {\n  TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule\n} from './tooltip/index';\n\nexport {\n  PopoverConfig, PopoverContainerComponent, PopoverModule, PopoverDirective\n} from './popover/index';\n\nexport {\n  IconsModule, MdbIconComponent\n} from './icons/index';\n\n\n\nconst MODULES = [\n  ButtonsModule,\n  CardsFreeModule,\n  RippleModule,\n  WavesModule,\n  InputsModule,\n  NavbarModule,\n  DropdownModule,\n  CarouselModule,\n  ChartsModule,\n  CollapseModule,\n  ModalModule,\n  TooltipModule,\n  PopoverModule,\n  IconsModule,\n  CheckboxModule\n];\n\n@NgModule({\n  imports: [\n    ButtonsModule,\n    RippleModule.forRoot(),\n    WavesModule.forRoot(),\n    InputsModule.forRoot(),\n    NavbarModule,\n    DropdownModule.forRoot(),\n    CarouselModule.forRoot(),\n    ChartsModule,\n    CollapseModule.forRoot(),\n    ModalModule.forRoot(),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    IconsModule,\n    CardsFreeModule.forRoot(),\n    CheckboxModule\n  ],\n  exports: MODULES,\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class MDBRootModule {\n}\n\n@NgModule({ exports: MODULES })\nexport class MDBBootstrapModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: MDBRootModule };\n  }\n}\n","import { TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class BsComponentRef<T> {\n  templateRef: TemplateRef<T>;\n  viewContainer: ViewContainerRef;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { PositioningService } from '../utils/positioning/positioning.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n})\nexport class TooltipModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n","import {\n  Directive, Input, TemplateRef, ViewContainerRef, Output, EventEmitter,\n  Renderer2, ElementRef, OnInit, OnDestroy, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip.component';\nimport { TooltipConfig } from './tooltip.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { OnChange } from '../utils/decorators';\n\n@Directive({\n  selector: '[mdbTooltip]',\n  exportAs: 'mdb-tooltip'\n})\nexport class TooltipDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  @Input() public mdbTooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  @Output() public tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() public placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() public triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() public container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  @Input()\n  public get isOpen(): boolean { return this._tooltip.isShown; }\n\n  public set isOpen(value: boolean) {\n    if (value) { this.show(); } else { this.hide(); }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n  @Input() public isDisabled: boolean;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() public onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() public onHidden: EventEmitter<any>;\n\n  @Input() public delay = 0;\n\n  @Input() public fadeDuration = 150;\n\n  protected _delayTimeoutId: any;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  public constructor(_viewContainerRef: ViewContainerRef,\n    _renderer: Renderer2,\n    _elementRef: ElementRef,\n    cis: ComponentLoaderFactory,\n    config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(_elementRef, _viewContainerRef, _renderer)\n      .provide({ provide: TooltipConfig, useValue: config });\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  public ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes['mdbTooltip'].isFirstChange()) {\n      this.tooltipChange.emit(this.mdbTooltip);\n    }\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public show(): void {\n    if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.mdbTooltip) {\n      return;\n    }\n\n    const showTooltip = () => this._tooltip\n      .attach(TooltipContainerComponent)\n      .to(this.container)\n      .position({ attachment: this.placement })\n      .show({\n        content: this.mdbTooltip,\n        placement: this.placement\n      });\n\n    if (this.delay) {\n      this._delayTimeoutId = setTimeout(() => { showTooltip(); }, this.delay);\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this.fadeDuration);\n  }\n\n  public dispose() {\n    this._tooltip.dispose();\n  }\n\n  public ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(): any {\n  const sufix = 'Change';\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any { return this[_key]; },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { AfterViewInit, Component, ChangeDetectionStrategy, HostBinding, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { TooltipConfig } from './tooltip.service';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Component({\n  selector: 'mdb-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]': '\"tooltip-fadeIn tooltip in tooltip-\" + placement'\n  },\n  template: `\n  <div #tooltipArrow class=\"tooltip-arrow\" [ngClass]=\"{'left': placement == 'left', 'right': placement == 'right', 'top': placement == 'top'}\"></div>\n  <div #tooltipInner class=\"tooltip-inner\"><ng-content></ng-content></div>\n  `\n})\nexport class TooltipContainerComponent implements AfterViewInit {\n  public classMap: any;\n  public placement: string;\n  public popupClass: string;\n  public animation: boolean;\n  @ViewChild('tooltipInner') tooltipInner: ElementRef;\n  @ViewChild('tooltipArrow') tooltipArrow: ElementRef;\n  @HostBinding('class.show') show = !this.isBs3;\n\n  public get isBs3(): boolean {\n    return isBs3();\n  }\n\n  public constructor(config: TooltipConfig, private r: Renderer2) {\n    Object.assign(this, config);\n  }\n\n  public ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap['tooltip-' + this.placement] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.popupClass) {\n      this.classMap[this.popupClass] = true;\n    }\n    setTimeout(() => {\n      const arrowClassList = this.tooltipArrow.nativeElement.classList;\n      const tooltipHeight = this.tooltipInner.nativeElement.clientHeight;\n      if (arrowClassList.contains('top')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top', tooltipHeight + 6 + 'px');\n      } else if (arrowClassList.contains('left')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top',  (tooltipHeight / 2) + 'px');\n      } else if (arrowClassList.contains('right')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top',  (tooltipHeight / 2) + 'px');\n      }\n    }, 0);\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n@Injectable()\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  public placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  public triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  public container: string;\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { WavesDirective } from './waves-effect.directive';\n\n@NgModule({\n  declarations: [WavesDirective],\n  exports: [WavesDirective]\n})\n\nexport class WavesModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: WavesModule, providers: []};\n  }\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { RippleDirective } from './ripple-effect.directive';\n\n@NgModule({\n  declarations: [RippleDirective],\n  exports: [RippleDirective]\n})\n\nexport class RippleModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: RippleModule, providers: []};\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[mdbRippleRadius]'\n})\nexport class RippleDirective {\n  el: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.el = el;\n  }\n\n  @HostListener('click', ['$event'])\n  public click(event: any) {\n    // event.stopPropagation();\n\n    if (!this.el.nativeElement.classList.contains('disabled')) {\n\n      const button = this.el.nativeElement;\n      if (!button.classList.contains('waves-effect')) {\n        button.className += ' waves-effect';\n      }\n\n      const xPos = event.clientX - button.getBoundingClientRect().left;\n      const yPos = event.clientY - button.getBoundingClientRect().top;\n\n\n      const tmp = document.createElement('div');\n      tmp.className += 'waves-ripple waves-rippling';\n      const ripple = button.appendChild(tmp);\n\n      const top = yPos + 'px';\n      const left = xPos + 'px';\n\n      tmp.style.top = top;\n      tmp.style.left = left;\n\n      const scale = 'scale(' + ((button.clientWidth / 100) * 3) + ') translate(0,0)';\n\n      tmp.style.webkitTransform = scale;\n      tmp.style.transform = scale;\n      tmp.style.opacity = '1';\n\n      const duration = 750;\n\n      tmp.style.webkitTransitionDuration = duration + 'ms';\n      tmp.style.transitionDuration = duration + 'ms';\n\n\n      this.removeRipple(button, ripple);\n    }\n  }\n\n  removeRipple(button: any, ripple: any) {\n    ripple.classList.remove('waves-rippling');\n\n    setTimeout(() => {\n      ripple.style.opacity = '0';\n\n      setTimeout(() => {\n        button.removeChild(ripple);\n      }, 750);\n    }, 200);\n\n\n\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n","import { Directive, Input, Output, EventEmitter, OnInit, OnDestroy, Renderer2, ElementRef, TemplateRef,\n  ViewContainerRef } from '@angular/core';\n  import { PopoverConfig } from './popover.config';\n  import { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n  import { ComponentLoader } from '../utils/component-loader/component-loader.class';\n  import { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n @Directive({selector: '[mdbPopover]', exportAs: 'bs-mdbPopover'})\n export class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   @Input() public mdbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover.\n   */\n   @Input() public mdbPopoverHeader: string;\n   @Input() public popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   @Input() public placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   @Input() public triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   @Input() public container: string;\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n   @Input()\n   public get isOpen(): boolean { return this._popover.isShown; }\n\n   public set isOpen(value: boolean) {\n     if (value) {this.show(); } else {this.hide(); }\n   }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   @Output() public onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   @Output() public onHidden: EventEmitter<any>;\n\n   private _popover: ComponentLoader<PopoverContainerComponent>;\n\n   public constructor(_elementRef: ElementRef,\n     _renderer: Renderer2,\n     _viewContainerRef: ViewContainerRef,\n     _config: PopoverConfig,\n     cis: ComponentLoaderFactory) {\n     this._popover = cis\n     .createLoader<PopoverContainerComponent>(_elementRef, _viewContainerRef, _renderer)\n     .provide({provide: PopoverConfig, useValue: _config});\n     Object.assign(this, _config);\n     this.onShown = this._popover.onShown;\n     this.onHidden = this._popover.onHidden;\n   }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public show(): void | any {\n     if (this._popover.isShown) {\n       return;\n     }\n\n     this._popover\n     .attach(PopoverContainerComponent)\n     .to(this.container)\n     .position({attachment: this.placement})\n     .show({\n       content: this.mdbPopover,\n       placement: this.placement,\n       title: this.mdbPopoverHeader || this.popoverTitle\n     });\n     this.isOpen = true;\n   }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public hide(): void {\n     if (this.isOpen) {\n       this._popover.hide();\n       this.isOpen = false;\n     }\n   }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public toggle(): void {\n     if (this.isOpen) {\n       return this.hide();\n     }\n\n     this.show();\n   }\n\n   public ngOnInit(): any {\n     this._popover.listen({\n       triggers: this.triggers,\n       show: () => this.show()\n     });\n   }\n\n   public dispose() {\n     this._popover.dispose();\n   }\n\n   public ngOnDestroy(): any {\n     this._popover.dispose();\n   }\n }\n","import { ChangeDetectionStrategy, Input, Component, HostBinding, OnInit } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Component({\n selector: 'mdb-popover-container',\n changeDetection: ChangeDetectionStrategy.OnPush,\n template: `\n <h3 class=\"popover-header\" *ngIf=\"title\">{{title}}</h3>\n <div class=\"popover-body\">\n <ng-content></ng-content>\n </div>`\n})\nexport class PopoverContainerComponent implements OnInit {\n\n@Input() public placement: string;\n @Input() public title: string;\n\n@HostBinding('class.show') show = '!isBs3';\n @HostBinding('attr.role') role = 'tooltip';\n//  @HostBinding('class') class;\n@HostBinding('class') class: any;\n\n\n\npublic get isBs3(): boolean {\n return isBs3();\n }\n\npublic constructor(config: PopoverConfig) {\n Object.assign(this, config);\n }\n\nngOnInit() {\n this.class = 'popover-fadeIn popover in popover-' + this.placement + ' ' + this.placement + ' bs-popover-' + this.placement;\n }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n @Injectable()\n export class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   public placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   public triggers = 'click';\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   public container: string;\n }\n","import { LinksComponent } from './links.component';\nimport { LogoComponent } from './logo.component';\nimport { NavbarService } from './navbar.service';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {NavbarComponent} from './navbar.component';\nimport { NavlinksComponent } from './navlinks.component';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NavbarComponent, LinksComponent, LogoComponent, NavlinksComponent],\n  exports: [NavbarComponent, LinksComponent , LogoComponent, NavlinksComponent],\n  providers: [NavbarService]\n})\nexport class NavbarModule {}\n","import { NavbarService } from './navbar.service';\nimport { AfterContentInit, Component, ContentChildren, ElementRef, QueryList, EventEmitter, Output } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\n@Component({\n  selector: 'navlinks',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class NavlinksComponent implements AfterViewInit, AfterContentInit {\n  @ContentChildren(RouterLinkWithHref, { read: ElementRef, descendants: true })\n  links: QueryList<ElementRef>;\n\n  @Output() linkClick = new EventEmitter<any>();\n  constructor( private _navbarService: NavbarService) { }\n\n  ngAfterContentInit() {\n    const that = this;\n\n\n\n    setTimeout(function () {\n      that.links.forEach(function (element) {\n        element.nativeElement.onclick = function () {\n          that._navbarService.setNavbarLinkClicks();\n        };\n      });\n\n    }, 0);\n  }\n  ngAfterViewInit() {\n\n  }\n}\n","import { NavbarService } from './navbar.service';\nimport { Component, ElementRef, ViewChild, Input, Renderer2, AfterViewInit, HostListener, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mdb-navbar',\n  template: \"<nav class=\\\"{{SideClass}}\\\" #nav> <div [ngClass]=\\\"{'container': containerInside}\\\" [ngStyle]=\\\"{'display': displayStyle}\\\" #container> <ng-content select=\\\"mdb-navbar-brand\\\"></ng-content> <ng-content select=\\\"logo\\\"></ng-content> <ng-content *ngIf=\\\"this.doubleNav == true\\\" select=\\\"navlinks\\\"></ng-content> <div *ngIf=\\\"this.doubleNav == false\\\"> <button #toggler class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggle($event)\\\" mdbWavesEffect *ngIf=\\\"this.el.nativeElement.children.length !== 0\\\"> <span class=\\\"navbar-toggler-icon\\\"> </span> </button> </div> <div #navbar [style.height]=\\\"height\\\" class=\\\"navbar-collapse collapse\\\" [ngClass]=\\\"{'collapse': collapse, 'show': showClass, 'collapsing': collapsing}\\\"> <ng-content select=\\\"links\\\"></ng-content> </div> </div> </nav>\",\n})\n\nexport class NavbarComponent implements AfterViewInit, OnInit {\n  @Input() iconBackground: string | string[];\n  @Input() SideClass: string;\n  @Input() containerInside = true;\n  subscription: Subscription;\n  navbarLinkClicks: any;\n  shown = false;\n\n  public doubleNav: boolean;\n  public height: number;\n  public duration = 350; // ms\n\n  public collapse = false;\n  public showClass = false;\n  public collapsing = false;\n  @ViewChild('navbar') el: ElementRef;\n  @ViewChild('mobile') mobile: ElementRef;\n  @ViewChild('nav') navbar: ElementRef;\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('toggler') toggler: ElementRef;\n\n  constructor(public renderer: Renderer2, private _navbarService: NavbarService) {\n    // tslint:disable-next-line:max-line-length\n    this.subscription = this._navbarService.getNavbarLinkClicks().subscribe(navbarLinkClicks => { this.closeNavbarOnClick(navbarLinkClicks); });\n  }\n\n  closeNavbarOnClick(navbarLinkClicks: any) {\n    this.navbarLinkClicks = navbarLinkClicks;\n    if (this.showClass) {\n      this.hide();\n    }\n  }\n\n  addTogglerIconClasses() {\n    if (this.iconBackground) {\n      if (Array.isArray(this.iconBackground)) {\n        this.iconBackground.forEach((iconClass) => {\n          this.renderer.addClass(this.toggler.nativeElement, iconClass);\n        });\n      } else {\n        this.renderer.addClass(this.toggler.nativeElement, this.iconBackground);\n      }\n    }\n  }\n\n  ngOnInit() {\n    const isDoubleNav = this.SideClass.split(' ');\n    if (isDoubleNav.indexOf('double-nav') !== -1) {\n      this.doubleNav = true;\n    } else {\n      this.doubleNav = false;\n    }\n  }\n\n\n  ngAfterViewInit() {\n    /* bugfix - bez tego sypie ExpressionChangedAfterItHasBeenCheckedError -\n    https://github.com/angular/angular/issues/6005#issuecomment-165951692 */\n    setTimeout(() => {\n      this.height = this.el.nativeElement.scrollHeight;\n      this.collapse = true;\n\n      if (!this.containerInside) {\n        const childrens = Array.from(this.container.nativeElement.children);\n        childrens.forEach(child => {\n          // this.navbar.nativeElement.append(child);\n          this.renderer.appendChild(this.navbar.nativeElement, child);\n\n          this.container.nativeElement.remove();\n        });\n\n      }\n      if (this.el.nativeElement.children.length === 0) {\n        this.el.nativeElement.remove();\n      }\n    });\n\n    this.addTogglerIconClasses();\n  }\n\n  toggle(event: any) {\n    event.preventDefault();\n    if (!this.collapsing) {\n      if (this.shown) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }\n\n  show() {\n    this.shown = true;\n    this.collapse = false;\n    this.collapsing = true;\n    setTimeout(() => {\n      this.renderer.setStyle(this.el.nativeElement, 'height', this.height + 'px');\n    }, 10);\n\n\n    setTimeout(() => {\n      this.collapsing = false;\n      this.collapse = true;\n      this.showClass = true;\n    }, this.duration);\n  }\n\n  hide() {\n    this.shown = false;\n    this.collapse = false;\n    this.showClass = false;\n    this.collapsing = true;\n    setTimeout(() => {\n      this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n    }, 10);\n\n\n    setTimeout(() => {\n      this.collapsing = false;\n      this.collapse = true;\n    }, this.duration);\n  }\n\n  get displayStyle() {\n     if (!this.containerInside) {\n      return 'flex';\n     } else {\n    return '';\n     }\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(event: any) {\n    let breakpoit = 0;\n\n    if (this.SideClass.includes('navbar-expand-xl')) {\n      breakpoit = 1200;\n    } else if (this.SideClass.includes('navbar-expand-lg')) {\n      breakpoit = 992;\n    } else if (this.SideClass.includes('navbar-expand-md')) {\n      breakpoit = 768;\n    } else if (this.SideClass.includes('navbar-expand-sm')) {\n      breakpoit = 576;\n    } else {\n      breakpoit = event.target.innerWidth + 1;\n    }\n\n    if (event.target.innerWidth < breakpoit) {\n      if (!this.shown) {\n        this.collapse = false;\n        this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n        this.renderer.setStyle(this.el.nativeElement, 'opacity', '0');\n        setTimeout(() => {\n          this.height = this.el.nativeElement.scrollHeight;\n          this.collapse = true;\n          this.renderer.setStyle(this.el.nativeElement, 'opacity', '');\n        }, 4);\n      }\n    } else {\n      this.collapsing = false;\n      this.shown = false;\n      this.showClass = false;\n      this.collapse = true;\n      this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    }\n  }\n\n  @HostListener('document:scroll') onScroll() {\n    if (this.navbar.nativeElement.classList.contains('scrolling-navbar')) {\n      if (window.pageYOffset > 120) {\n        this.renderer.addClass(this.navbar.nativeElement, 'top-nav-collapse');\n      } else {\n        this.renderer.removeClass(this.navbar.nativeElement, 'top-nav-collapse');\n      }\n    }\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'logo, mdb-navbar-brand',\n  template: `\n  <ng-content></ng-content>\n  `\n})\nexport class LogoComponent {\n\n}\n","import { NavbarService } from './navbar.service';\nimport { AfterContentInit, Component, ContentChildren, ElementRef, QueryList, EventEmitter, Output } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\n@Component({\n  selector: 'links',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class LinksComponent implements AfterViewInit, AfterContentInit {\n  @ContentChildren(RouterLinkWithHref, { read: ElementRef, descendants: true })\n  links: QueryList<ElementRef>;\n\n  @Output() linkClick = new EventEmitter<any>();\n  constructor( private _navbarService: NavbarService) { }\n\n  ngAfterContentInit() {\n    const that = this;\n\n\n\n    setTimeout(function () {\n      that.links.forEach(function (element) {\n        element.nativeElement.onclick = function () {\n          that._navbarService.setNavbarLinkClicks();\n        };\n      });\n\n    }, 0);\n  }\n  ngAfterViewInit() {\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport { Subject ,  Observable } from 'rxjs';\n\n@Injectable()\nexport class NavbarService {\n\n    private navbarLinkClicks = new Subject<any>();\n\n\n    getNavbarLinkClicks(): Observable<any> {\n        return this.navbarLinkClicks.asObservable();\n    }\n\n    setNavbarLinkClicks() {\n        this.navbarLinkClicks.next();\n    }\n}\n","import { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ModalContainerComponent } from './modalContainer.component';\nimport { MDBModalService } from './modal.service';\n\n@NgModule({\n  declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class ModalModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ModalModule, providers: [MDBModalService, ComponentLoaderFactory, PositioningService]};\n  }\n}\n","import { ComponentRef, Injectable, TemplateRef, EventEmitter, Renderer2, ViewContainerRef, ElementRef } from '@angular/core';\n\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ModalContainerComponent } from './modalContainer.component';\nimport { MDBModalRef, ClassName, modalConfigDefaults, ModalOptions, TransitionDurations } from './modal.options';\nimport { msConfig } from './modalService.config';\n\n\n@Injectable()\nexport class MDBModalService {\n  // constructor props\n  public config: ModalOptions = modalConfigDefaults;\n\n  public onShow: EventEmitter<any> = new EventEmitter();\n  public onShown: EventEmitter<any> = new EventEmitter();\n  public onHide: EventEmitter<any> = new EventEmitter();\n  public onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  // protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  protected backdropRef: ComponentRef<ModalBackdropComponent> | any;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  // private lastDismissReason = '';\n  private lastDismissReason: any = '';\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n  // public constructor(private clf: ComponentLoaderFactory) {\n    public constructor(private clf: ComponentLoaderFactory, private el: ElementRef, private v: ViewContainerRef, private r: Renderer2) {\n  //   this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(null, null, null);\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(this.el, this.v, this.r);\n    msConfig.serviceInstance = this;\n  }\n\n  /** Shows a modal */\n  show(content: string | TemplateRef<any> | any, config?: any): MDBModalRef {\n    this.modalsCount++;\n    this._createLoaders();\n    this.config = Object.assign({}, modalConfigDefaults, config);\n    this._showBackdrop();\n    this.lastDismissReason = null;\n    return this._showModal(content);\n  }\n\n  hide(level: number) {\n    if (this.modalsCount === 1) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(level);\n      this.removeLoaders(level);\n    }, this.config.animated ? TransitionDurations.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({isAnimated: this.config.animated});\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TransitionDurations.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n\n  _showModal(content: any): MDBModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    const mdbModalRef = new MDBModalRef();\n    const modalContainerRef = modalLoader\n    .provide({provide: ModalOptions, useValue: this.config})\n    .provide({provide: MDBModalRef, useValue: mdbModalRef})\n    .attach(ModalContainerComponent)\n    .to('body')\n    .show({content, isAnimated: this.config.animated});\n    modalContainerRef.instance.level = this.getModalsCount();\n    mdbModalRef.hide = () => {\n      modalContainerRef.instance.hide();\n    };\n    mdbModalRef.content = modalLoader.getInnerComponent() || null;\n    return mdbModalRef;\n  }\n\n  _hideModal(level: number): void {\n    const modalLoader = this.loaders[level - 1];\n    if (modalLoader) {\n      modalLoader.hide();\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  protected removeBackdrop(): void {\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE*/\n  /** Scroll bar tricks */\n  /** @internal */\n  public checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  public setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || '0', 10);\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = this.originalBodyPadding + 'px';\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n\n  }\n\n  private _createLoaders(): void {\n    // const loader = this.clf.createLoader<ModalContainerComponent>(null, null, null);\n    const loader = this.clf.createLoader<ModalContainerComponent>(this.el, this.v, this.r);\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(level: number): void {\n    this.loaders.splice(level - 1, 1);\n    this.loaders.forEach((loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n      loader.instance.level = i + 1;\n    });\n  }\n\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe(() => {\n      to.emit(this.lastDismissReason);\n    });\n  }\n}\n","import { Component, ElementRef, HostListener, OnDestroy, OnInit, Renderer2, HostBinding } from '@angular/core';\nimport { ClassName, DISMISS_REASONS, ModalOptions, TransitionDurations } from './modal.options';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { msConfig } from './modalService.config';\n\n@Component({\n  selector: 'mdb-modal-container',\n  template: `\n  <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n  <div class=\"modal-content\"><ng-content></ng-content></div>\n</div>`\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  @HostBinding('tabindex') tabindex = -1;\n  @HostBinding('role') role = 'dialog';\n  @HostBinding('class.modal') modla = true;\n\n  private mdbModalService: any;\n\n  public config: ModalOptions;\n  public isShown = false;\n  public level: number;\n  public isAnimated: boolean;\n  protected _element: ElementRef;\n  private isModalHiding = false;\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n      return;\n    }\n    this.mdbModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n  @HostListener('window:keydown.esc')\n  public onEsc(): void {\n    if (this.config.keyboard && this.level === this.mdbModalService.getModalsCount()) {\n      this.mdbModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  public constructor(options: ModalOptions, _element: ElementRef, private _renderer: Renderer2) {\n    this.mdbModalService = msConfig.serviceInstance;\n\n    this._element = _element;\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(this._element.nativeElement, ClassName.FADE);\n    }\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW);\n    }, this.isAnimated ? TransitionDurations.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.mdbModalService.getModalsCount() === 1) {\n        this.mdbModalService.checkScrollbar();\n        this.mdbModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, ClassName.OPEN);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW);\n\n    setTimeout(() => {\n      this.isShown = false;\n      if (document && document.body && this.mdbModalService.getModalsCount() === 1) {\n        this._renderer.removeClass(document.body, ClassName.OPEN);\n      }\n      this.mdbModalService.hide(this.level);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TransitionDurations.MODAL : 0);\n  }\n}\n","export const msConfig = {\n    serviceInstance: new Object()\n};\n","import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2, ViewContainerRef\n} from '@angular/core';\n\nimport { document } from '../utils/facade/browser';\n\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ClassName, modalConfigDefaults, ModalOptions, DISMISS_REASONS } from './modal.options';\n\nimport { window } from '../utils/facade/browser';\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[mdbModal]',\n  exportAs: 'mdb-modal, mdbModal'\n})\nexport class ModalDirective implements AfterViewInit, OnDestroy {\n  /** allows to set modal configuration via element property */\n  @Input()\n  // public set config(conf: ModalOptions) {\n  public set config(conf: ModalOptions | any) {\n    this._config = this.getConfig(conf);\n  }\n\n  // public get config(): ModalOptions {\n  public get config(): ModalOptions | any {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output() public onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete) */\n  @Output() public onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when the hide instance method has been called. */\n  @Output() public onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). */\n  @Output() public onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  // seems like an Options\n  public isAnimated = true;\n  /** This field contains last dismiss reason.\n  Possible values: `backdrop-click`, `esc` and `null` (if modal was closed by direct call of `.hide()`). */\n  public dismissReason: string | any;\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions | any;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal: any = 0;\n  protected timerRmBackDrop: any = 0;\n\n  // constructor props\n  protected _element: ElementRef;\n  protected _renderer: Renderer2;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n  // todo: implement _dialog\n  _dialog: any;\n\n  isNested = false;\n\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc')\n  public onEsc(): void {\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  public constructor(_element: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2, clf: ComponentLoaderFactory) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(_element, _viewContainerRef, _renderer);\n  }\n\n  public ngOnDestroy(): any {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  public ngAfterViewInit(): any {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  public toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  public show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(ClassName.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, ClassName.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  public hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, ClassName.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, ClassName.SHOW);\n    }\n\n    if (this.isAnimated) {\n      this.timerHideModal = setTimeout(() => this.hideModal(), TRANSITION_DURATION);\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, modalConfigDefaults, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (!this._element.nativeElement.parentNode ||\n      (this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE)) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n\n    if (this.isAnimated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    this._renderer.addClass(this._element.nativeElement, ClassName.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, ClassName.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n\n    if (this.isAnimated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, ClassName.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({ isAnimated: this.isAnimated });\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this.isAnimated) {\n        callback();\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n\n  protected focusOtherModal() {\n    try {\n      const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[mdbModal]');\n      if (!otherOpenedModals.length) {\n        return;\n      }\n      //  this._renderer.invokeElementMethod(otherOpenedModals[otherOpenedModals.length - 1], 'focus');\n      otherOpenedModals[otherOpenedModals.length - 1].nativeElement.focus();\n    } catch (error) { }\n\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n    this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || 0, 10);\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = this.originalBodyPadding;\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div', void 0);\n    this._renderer.appendChild(document.body, scrollDiv);\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2, HostBinding } from '@angular/core';\n\nimport { ClassName } from './modal.options';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\n\nexport class ModalBackdropOptions {\n  public animate = true;\n\n  public constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'mdb-modal-backdrop',\n  template: ``,\n})\nexport class ModalBackdropComponent implements OnInit {\n  @HostBinding('class.modal-backdrop') public classNameBackDrop = true;\n\n  public get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  public set isAnimated(value: boolean) {\n    this._isAnimated = value;\n  }\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  public set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.removeClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    }\n  }\n\n  public element: ElementRef;\n  public renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  public constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    } else {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ModalOptions {\n  /**\n   *  Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.\n   */\n  //  backdrop?: boolean | 'static';\n  backdrop?: boolean | 'static' | any;\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n   keyboard?: boolean;\n\n   focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n   show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n   ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n   class?: string;\n  /**\n   * Toggle animation\n   */\n   animated?: boolean;\n }\n\n @Injectable()\n export class MDBModalRef {\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n   content?: any | null;\n  /**\n   * Hides the modal\n   */\n   hide(): void {}\n }\n\n export const modalConfigDefaults: ModalOptions = {\n   backdrop: true,\n   keyboard: true,\n   focus: true,\n   show: false,\n   ignoreBackdropClick: false,\n   class: '',\n   animated: true\n };\n\n export const ClassName: any = {\n   SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n   BACKDROP: 'modal-backdrop',\n   OPEN: 'modal-open',\n   FADE: 'fade',\n   IN: 'in',     // bs3\n   SHOW: 'show'  // bs4\n };\n\n export const Selector: any = {\n   DIALOG: '.modal-dialog',\n   DATA_TOGGLE: '[data-toggle=\"modal\"]',\n   DATA_DISMISS: '[data-dismiss=\"modal\"]',\n   FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n };\n\n export const TransitionDurations: any = {\n   MODAL: 300,\n   BACKDROP: 150\n };\n\n export const DISMISS_REASONS = {\n   BACKRDOP: 'backdrop-click',\n   ESC: 'esc'\n };\n","import { window } from './facade/browser';\n\nexport class Utils {\n  public static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  public static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { MdbInputDirective } from './mdb-input.directive';\nimport { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA} from '@angular/core';\nimport { EqualValidatorDirective } from './equal-validator.directive';\n\n@NgModule({\n  declarations: [MdbInputDirective, EqualValidatorDirective],\n  exports: [MdbInputDirective, EqualValidatorDirective],\n  schemas: [NO_ERRORS_SCHEMA],\n})\n\nexport class InputsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: InputsModule, providers: [] };\n  }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[mdb-validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n  providers: [\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidatorDirective), multi: true }\n  ]\n})\n\nexport class EqualValidatorDirective implements Validator {\n  constructor( @Attribute('validateEqual') public validateEqual: string,\n    @Attribute('reverse') public reverse: string) {\n\n  }\n\n  private get isReverse() {\n    if (!this.reverse) {\n      return false;\n    }\n    return this.reverse === 'true' ? true : false;\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    const setToNullValue: any = null;\n    // self value (e.g. retype password)\n    const v = c.value;\n\n    // control value (e.g. password)\n    // const e: any = c.root.get(this.validateEqual);\n    const e: any = c.root.get(this.validateEqual);\n\n    // value not equal\n    if (e && v !== e.value) {\n      return { validateEqual: false };\n    }\n\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) {\n        e.setErrors(null);\n      }\n    }\n\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({\n        validateEqual: false\n      });\n    }\n\n    // return null;\n    return setToNullValue;\n  }\n}\n\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Renderer2,\n  Input,\n  AfterViewInit,\n  HostListener,\n  PLATFORM_ID,\n  Inject,\n  AfterViewChecked,\n  OnInit,\n  DoCheck,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\n@Directive({\n  selector: '[mdbInputDirective]'\n})\nexport class MdbInputDirective implements AfterViewChecked, OnInit, AfterViewInit, DoCheck, OnChanges {\n  public wrongTextContainer: any;\n  public rightTextContainer: any;\n  public el: ElementRef | any = null;\n  public elLabel: ElementRef | any = null;\n  public elIcon: Element | any = null;\n  element: any = null;\n  @Input('mdbInputDirective') mdbInputDirective: MdbInputDirective;\n  @Input('placeholder') public placeholder: string;\n  @Input('customRegex') customRegex: any;\n  @Input('mdbValidate') mdbValidate = true;\n  @Input('validateSuccess') validateSuccess = true;\n  @Input('validateError') validateError = true;\n  @Input('focusCheckbox') focusCheckbox = true;\n  @Input('focusRadio') focusRadio = true;\n  @Input() errorMessage: string;\n  @Input() successMessage: string;\n\n  isBrowser: any = false;\n  isClicked = false;\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2, @Inject(PLATFORM_ID) platformId: string) {\n    this.el = _elRef;\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  @HostListener('focus') onfocus() {\n    try {\n      this._renderer.addClass(this.elLabel, 'active');\n      this.isClicked = true;\n    } catch (error) {\n\n    }\n  }\n\n  @HostListener('blur') onblur() {\n    this.validationFunction();\n    try {\n      if (this.el.nativeElement.value === '') {\n        this._renderer.removeClass(this.elLabel, 'active');\n      }\n      this.isClicked = false;\n    } catch (error) {\n\n    }\n\n  }\n\n  @HostListener('change') onchange() {\n    try {\n      this.checkValue();\n    } catch (error) {\n\n    }\n  }\n\n  @HostListener('input') oniput() {\n    this.validationFunction();\n  }\n\n  @HostListener('keydown', ['$event']) onkeydown(event: any) {\n    try {\n      if (event.target.type === 'number') {\n        if (event.shiftKey) {\n          switch (event.keyCode) {\n            case 38:\n              event.target.value = +event.target.value + 10;\n              break;\n            case 40:\n              event.target.value = +event.target.value - 10;\n              break;\n          }\n        }\n        if (event.altKey) {\n          switch (event.keyCode) {\n            case 38:\n              event.target.value = +event.target.value + 0.1;\n              break;\n            case 40:\n              event.target.value = +event.target.value - 0.1;\n              break;\n          }\n        }\n      }\n    } catch (error) { }\n    this.delayedResize();\n  }\n  @HostListener('cut') oncut() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n  @HostListener('paste') onpaste() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n  @HostListener('drop') ondrop() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n\n  updateErrorMsg(value: string) {\n    if (this.wrongTextContainer) {\n      this.wrongTextContainer.innerHTML = value;\n    }\n  }\n\n  updateSuccessMsg(value: string) {\n    if (this.rightTextContainer) {\n      this.rightTextContainer.innerHTML = value;\n    }\n  }\n\n  ngOnInit() {\n    // Inititalise a new <span> wrong/right elements and render it below the host component.\n    if (this.mdbValidate) {\n      this.wrongTextContainer = this._renderer.createElement('span');\n      this._renderer.addClass(this.wrongTextContainer, 'inputVal');\n      this._renderer.addClass(this.wrongTextContainer, 'text-danger');\n      this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.wrongTextContainer);\n      const textWrong = this._elRef.nativeElement.getAttribute('data-error');\n      this.wrongTextContainer.innerHTML = (textWrong ? textWrong : 'wrong');\n      if (!textWrong) {\n        this.wrongTextContainer.innerHTML = (this.errorMessage ? this.errorMessage : 'wrong');\n      }\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n\n      this.rightTextContainer = this._renderer.createElement('span');\n      this._renderer.addClass(this.rightTextContainer, 'inputVal');\n      this._renderer.addClass(this.rightTextContainer, 'text-success');\n      this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.rightTextContainer);\n      const textSuccess = this._elRef.nativeElement.getAttribute('data-success');\n      this.rightTextContainer.innerHTML = (textSuccess ? textSuccess : 'success');\n      if (!textSuccess) {\n        this.rightTextContainer.innerHTML = (this.successMessage ? this.successMessage : 'success');\n      }\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('errorMessage')) {\n      const newErrorMsg = changes.errorMessage.currentValue;\n      this.updateErrorMsg(newErrorMsg);\n    }\n\n    if (changes.hasOwnProperty('successMessage')) {\n      const newSuccessMsg = changes.successMessage.currentValue;\n      this.updateSuccessMsg(newSuccessMsg);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.mdbValidate &&\n      this._elRef.nativeElement.classList.contains('ng-valid') &&\n      this._elRef.nativeElement.classList.contains('ng-dirty') &&\n      !this._elRef.nativeElement.classList.contains('counter-success')) {\n      this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n      this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n    }\n    if (this.mdbValidate &&\n      this._elRef.nativeElement.classList.contains('ng-invalid') &&\n      this._elRef.nativeElement.classList.contains('ng-dirty') &&\n      !this._elRef.nativeElement.classList.contains('counter-danger')) {\n      this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n      this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n    }\n    if (this._elRef.nativeElement.classList.contains('ng-invalid') &&\n      this._elRef.nativeElement.classList.contains('ng-pristine') &&\n      this._elRef.nativeElement.classList.contains('ng-untouched') || this._elRef.nativeElement.disabled) {\n      if (this._elRef.nativeElement.classList.contains('counter-success')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n        this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n      } else if (this._elRef.nativeElement.classList.contains('counter-danger')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n        this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n      }\n    }\n    if (!this.validateSuccess) {\n      this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n      this._renderer.setStyle(this.rightTextContainer, 'display', 'none');\n      if (this._elRef.nativeElement.classList.contains('ng-valid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      }\n    }\n\n    if (!this.validateError) {\n      this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      this._renderer.setStyle(this.wrongTextContainer, 'display', 'none');\n      if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n      }\n    }\n  }\n\n  validationFunction() {\n    setTimeout(() => {\n      if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      }\n      if (this._elRef.nativeElement.classList.contains('ng-touched') &&\n        this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        if (this.mdbValidate) {\n          this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n          this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n          this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n          this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n        }\n      } else if (this._elRef.nativeElement.classList.contains('ng-touched') &&\n        this._elRef.nativeElement.classList.contains('ng-valid')) {\n        if (this.mdbValidate) {\n          this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n          this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n          this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n          this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n        }\n      }\n    }, 0);\n  }\n  ngAfterViewInit() {\n    if (this.isBrowser) {\n      try {\n        this.element = document.querySelector('.md-textarea-auto');\n      } catch (error) { }\n\n    }\n    const type = this.el.nativeElement.type;\n    if (this.focusCheckbox && type === 'checkbox') {\n      this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n    }\n    if (this.focusRadio && type === 'radio') {\n      this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.initComponent();\n    this.checkValue();\n    // tslint:disable-next-line:max-line-length\n    /* if (this.el.nativeElement.tagName === 'MDB-COMPLETER' && this.el.nativeElement.getAttribute('ng-reflect-model') == null && !this.isClicked) {\n        this._renderer.removeClass(this.elLabel, 'active');\n    } */\n  }\n\n  resize() {\n      if (this.el.nativeElement.classList.contains('md-textarea-auto')) {\n        this._renderer.setStyle(this.el.nativeElement, 'height', 'auto');\n        this._renderer.setStyle(this.el.nativeElement, 'height', this.el.nativeElement.scrollHeight + 'px');\n      }\n\n  }\n\n  delayedResize() {\n    setTimeout(this.resize(), 0);\n  }\n\n  public initComponent(): void {\n    let inputId;\n    let inputP;\n    if (this.isBrowser) {\n      try {\n        inputId = this.el.nativeElement.id;\n      } catch (err) { }\n\n      try {\n        inputP = this.el.nativeElement.parentNode;\n      } catch (err) { }\n\n      this.elLabel = inputP.querySelector('label[for=\"' + inputId + '\"]') || inputP.querySelector('label');\n      if (this.elLabel && this.el.nativeElement.value !== '') {\n        this._renderer.addClass(this.elLabel, 'active');\n      }\n      this.elIcon = inputP.querySelector('i') || false;\n\n      if (this.elIcon) {\n        this._renderer.addClass(this.elIcon, 'active');\n      }\n    }\n  }\n\n  private checkValue(): void {\n    let value = '';\n    if (this.elLabel != null) {\n      value = this.el.nativeElement.value || '';\n      if (value === '') {\n        this._renderer.removeClass(this.elLabel, 'active');\n        if (this.elIcon) {\n          this._renderer.removeClass(this.elIcon, 'active');\n        }\n        // tslint:disable-next-line:max-line-length\n      } if (value === '' && this.isClicked ||\n        value === '' && this.el.nativeElement.placeholder ||\n        value === '' && this.el.nativeElement.attributes.placeholder\n      ) {\n        this._renderer.addClass(this.elLabel, 'active');\n      }\n      if (this.el.nativeElement.getAttribute('ng-reflect-model') != null) {\n        // tslint:disable-next-line:max-line-length\n        /* if (this.el.nativeElement.tagName === 'MDB-COMPLETER' && this.el.nativeElement.getAttribute('ng-reflect-model').length !== 0) {\n            this._renderer.addClass(this.elLabel, 'active');\n        } */\n      }\n    }\n  }\n}\n","import { MdbIconComponent } from './icon.component';\nimport { NgModule } from '@angular/core';\n\n\n@NgModule({\n  declarations: [MdbIconComponent],\n  exports: [MdbIconComponent]\n})\n\nexport class IconsModule {\n\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\n\n@Component({\n    selector: 'mdb-icon',\n    template: \"<i class=\\\"fa fa-{{icon}} fa-{{size}} {{class}} prefix\\\"></i>\"\n})\nexport class MdbIconComponent {\n    @ViewChild('iconEl') iconEl: ElementRef;\n    @Input() icon: string;\n    @Input() size: string;\n    @Input() class: string;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\nimport { BsDropdownMenuDirective } from './dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './dropdown-toggle.directive';\nimport { BsDropdownConfig } from './dropdown.config';\n\nimport { BsDropdownDirective } from './dropdown.directive';\nimport { BsDropdownState } from './dropdown.state';\n\n@NgModule({\n  declarations: [\n  BsDropdownMenuDirective,\n  BsDropdownToggleDirective,\n  BsDropdownContainerComponent,\n  BsDropdownDirective\n  ],\n  exports: [\n  BsDropdownMenuDirective,\n  BsDropdownToggleDirective,\n  BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n})\nexport class DropdownModule {\n  public static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: DropdownModule, providers: [\n      ComponentLoaderFactory,\n      PositioningService,\n      BsDropdownState,\n      {provide: BsDropdownConfig, useValue: config ? config : {autoClose: true}}\n      ]\n    };\n  }\n}\n","import {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, Renderer2,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { BsDropdownConfig } from './dropdown.config';\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\nimport { BsDropdownState } from './dropdown.state';\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './dropdown-menu.directive';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Directive({\n  selector: '[mdbDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState]\n})\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n  @HostBinding('class.dropup')\n  @Input() dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  @Input() set autoClose(value: boolean) {\n    if (typeof value === 'boolean') {\n      this._state.autoClose = value;\n    }\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  @Input() set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean { return this._isDisabled; }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @HostBinding('class.open')\n  @HostBinding('class.show')\n  @Input() get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n  @Output() isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n  // todo: move to component loader\n  _isInlineOpen = false;\n  _showInline: boolean;\n  _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  _isDisabled: boolean;\n  _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  _subscriptions: Subscription[] = [];\n  _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _viewContainerRef: ViewContainerRef,\n    private _cis: ComponentLoaderFactory,\n    private _config: BsDropdownConfig,\n    private _state: BsDropdownState) {\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(this._elementRef, this._viewContainerRef, this._renderer)\n      .provide({ provide: BsDropdownState, useValue: this._state });\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) { return; }\n    this._isInited = true;\n\n    this._showInline = !this.container;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(this._state\n      .toggleClick.subscribe((value: boolean) => this.toggle(value)));\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(this._state\n      .isDisabledChange\n      .subscribe((element: any) => {\n        if (element === true) {\n          this.hide();\n        }\n      }\n      ));\n\n    // attach dropdown menu inside of dropdown\n    if (this._showInline) {\n      this._state.dropdownMenu\n        .then((dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n          this._inlinedMenu = dropdownMenu.viewContainer.createEmbeddedView(dropdownMenu.templateRef);\n        });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    // material and dropup dropdown animation\n    // const parent = this._elementRef.nativeElement.classList;\n    const container = this._elementRef.nativeElement.lastElementChild;\n\n    setTimeout(() => { container.classList.add('fadeInDropdown'); }, 200);\n\n    if (this._showInline) {\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n      return;\n    }\n    this._state.dropdownMenu\n      .then((dropdownMenu) => {\n        // check direction in which dropdown should be opened\n        const _dropup = this.dropup === true ||\n          (typeof this.dropup !== 'undefined' && this.dropup !== false);\n        this._state.direction = _dropup ? 'up' : 'down';\n        const _placement = this.placement ||\n          (_dropup ? 'top left' : 'bottom left');\n\n        // show dropdown\n        this._dropdown\n          .attach(BsDropdownContainerComponent)\n          .to(this.container)\n          .position({ attachment: _placement })\n          .show({\n            content: dropdownMenu.templateRef,\n            placement: _placement\n          });\n\n        this._state.isOpenChange.emit(true);\n\n      });\n\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    const parent = this._elementRef.nativeElement.classList;\n    const container = this._elementRef.nativeElement.lastElementChild;\n\n\n    if ((parent.value === 'dropdown open show') || (parent.value === 'btn-group dropup open show')) {\n      container.classList.remove('fadeInDropdown');\n\n      setTimeout(() => {\n\n        if (this._showInline) {\n          this._isInlineOpen = false;\n          this.onHidden.emit(true);\n        } else {\n          this._dropdown.hide();\n        }\n\n        this._state.isOpenChange.emit(false);\n\n      }, 560);\n\n    } else {\n\n      if (this._showInline) {\n        this._isInlineOpen = false;\n        this.onHidden.emit(true);\n      } else {\n        this._dropdown.hide();\n      }\n\n      this._state.isOpenChange.emit(false);\n\n    }\n\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || value === false) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n}\n","import {\n  Injectable, NgZone, ViewContainerRef, ComponentFactoryResolver, Injector,\n  Renderer2, ElementRef, ApplicationRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/positioning.service';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n\n  public constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _injector: Injector,\n    private _posService: PositioningService,\n    private _applicationRef: ApplicationRef) {\n  }\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer2\n   */\n   public createLoader<T>(_elementRef: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2): ComponentLoader<T> {\n     return new ComponentLoader<T>(_viewContainerRef, _renderer, _elementRef,\n       this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef,\n       this._posService);\n   }\n }\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n    /**\n     * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n     * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n     * not yet supported:\n     * - vert-attachment can be any of 'top', 'middle', 'bottom'\n     * - horiz-attachment can be any of 'left', 'center', 'right'\n     */\n    //  attachment?: string;\n    attachment?: string | any;\n\n    /** A string similar to `attachment`. The one difference is that, if it's not provided,\n    `targetAttachment` will assume the mirror image of `attachment`. */\n    targetAttachment?: string;\n\n    /** A string of the form 'vert-offset horiz-offset'\n     * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n     */\n     offset?: string;\n\n     /** A string similar to `offset`, but referring to the offset of the target */\n     targetOffset?: string;\n\n     /** If true component will be attached to body */\n     appendToBody?: boolean;\n   }\n\n   @Injectable()\n   export class PositioningService {\n    //  public position(options: PositioningOptions): void {\n      public position(options: PositioningOptions | any): void {\n       const {element, target, attachment, appendToBody} = options;\n       positionElements(\n         this._getHtmlElement(target),\n         this._getHtmlElement(element),\n         attachment,\n         appendToBody);\n     }\n\n     private _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n       // it means that we got a selector\n       if (typeof element === 'string') {\n         return document.querySelector(element) as HTMLElement;\n       }\n\n       if (element instanceof ElementRef) {\n         return element.nativeElement;\n       }\n\n       return element as HTMLElement;\n     }\n   }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n // previous version:\n // https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n // tslint:disable\n export class Positioning {\n   public position(element: HTMLElement, round = true): ClientRect {\n     let elPosition: ClientRect;\n     let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n     if (this.getStyle(element, 'position') === 'fixed') {\n       const bcRect = element.getBoundingClientRect();\n       elPosition = {\n         width: bcRect.width,\n         height: bcRect.height,\n         top: bcRect.top,\n         bottom: bcRect.bottom,\n         left: bcRect.left,\n         right: bcRect.right\n       };\n     } else {\n       const offsetParentEl = this.offsetParent(element);\n\n       elPosition = this.offset(element, false);\n\n       if (offsetParentEl !== document.documentElement) {\n         parentOffset = this.offset(offsetParentEl, false);\n       }\n\n       parentOffset.top += offsetParentEl.clientTop;\n       parentOffset.left += offsetParentEl.clientLeft;\n     }\n\n     elPosition.top -= parentOffset.top;\n     elPosition.bottom -= parentOffset.top;\n     elPosition.left -= parentOffset.left;\n     elPosition.right -= parentOffset.left;\n\n     if (round) {\n       elPosition.top = Math.round(elPosition.top);\n       elPosition.bottom = Math.round(elPosition.bottom);\n       elPosition.left = Math.round(elPosition.left);\n       elPosition.right = Math.round(elPosition.right);\n     }\n\n     return elPosition;\n   }\n\n   public offset(element: HTMLElement, round = true): ClientRect {\n     const elBcr = element.getBoundingClientRect();\n     const viewportOffset = {\n       top: window.pageYOffset - document.documentElement.clientTop,\n       left: window.pageXOffset - document.documentElement.clientLeft\n     };\n\n     let elOffset = {\n       height: elBcr.height || element.offsetHeight,\n       width: elBcr.width || element.offsetWidth,\n       top: elBcr.top + viewportOffset.top,\n       bottom: elBcr.bottom + viewportOffset.top,\n       left: elBcr.left + viewportOffset.left,\n       right: elBcr.right + viewportOffset.left\n     };\n\n     if (round) {\n       elOffset.height = Math.round(elOffset.height);\n       elOffset.width = Math.round(elOffset.width);\n       elOffset.top = Math.round(elOffset.top);\n       elOffset.bottom = Math.round(elOffset.bottom);\n       elOffset.left = Math.round(elOffset.left);\n       elOffset.right = Math.round(elOffset.right);\n     }\n\n     return elOffset;\n   }\n\n   public positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n   ClientRect {\n     const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n     const shiftWidth: any = {\n       left: hostElPosition.left,\n       center: hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2,\n       right: hostElPosition.left + hostElPosition.width\n     };\n     const shiftHeight: any = {\n       top: hostElPosition.top,\n       center: hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2,\n       bottom: hostElPosition.top + hostElPosition.height\n     };\n     const targetElBCR = targetElement.getBoundingClientRect();\n     const placementPrimary = placement.split(' ')[0] || 'top';\n     const placementSecondary = placement.split(' ')[1] || 'center';\n\n     let targetElPosition: ClientRect = {\n       height: targetElBCR.height || targetElement.offsetHeight,\n       width: targetElBCR.width || targetElement.offsetWidth,\n       top: 0,\n       bottom: targetElBCR.height || targetElement.offsetHeight,\n       left: 0,\n       right: targetElBCR.width || targetElement.offsetWidth\n     };\n\n     switch (placementPrimary) {\n       case 'top':\n       targetElPosition.top = hostElPosition.top - targetElement.offsetHeight;\n       targetElPosition.bottom += hostElPosition.top - targetElement.offsetHeight;\n       targetElPosition.left = shiftWidth[placementSecondary];\n       targetElPosition.right += shiftWidth[placementSecondary];\n       break;\n       case 'bottom':\n       targetElPosition.top = shiftHeight[placementPrimary];\n       targetElPosition.bottom += shiftHeight[placementPrimary];\n       targetElPosition.left = shiftWidth[placementSecondary];\n       targetElPosition.right += shiftWidth[placementSecondary];\n       break;\n       case 'left':\n       targetElPosition.top = shiftHeight[placementSecondary];\n       targetElPosition.bottom += shiftHeight[placementSecondary];\n       targetElPosition.left = hostElPosition.left - targetElement.offsetWidth;\n       targetElPosition.right += hostElPosition.left - targetElement.offsetWidth;\n       break;\n       case 'right':\n       targetElPosition.top = shiftHeight[placementSecondary];\n       targetElPosition.bottom += shiftHeight[placementSecondary];\n       targetElPosition.left = shiftWidth[placementPrimary];\n       targetElPosition.right += shiftWidth[placementPrimary];\n       break;\n     }\n\n     targetElPosition.top = Math.round(targetElPosition.top);\n     targetElPosition.bottom = Math.round(targetElPosition.bottom);\n     targetElPosition.left = Math.round(targetElPosition.left);\n     targetElPosition.right = Math.round(targetElPosition.right);\n\n     return targetElPosition;\n   }\n\n   private getStyle(element: HTMLElement, prop: string): string { return (window.getComputedStyle(element) as any)[prop]; }\n\n   private isStaticPositioned(element: HTMLElement): boolean {\n     return (this.getStyle(element, 'position') || 'static') === 'static';\n   }\n\n   private offsetParent(element: HTMLElement): HTMLElement {\n     let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n     while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n       offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n     }\n\n     return offsetParentEl || document.documentElement;\n   }\n }\n\n const positionService = new Positioning();\n\n export function positionElements(\n   hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean): void {\n   const pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n\n   targetElement.style.top = `${pos.top}px`;\n   targetElement.style.left = `${pos.left}px`;\n }\n","// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/positioning.service';\nimport { listenToTriggers } from '../triggers';\nimport { ContentRef } from './content-ref.class';\n\nexport interface ListenOptions {\n  target?: ElementRef;\n  triggers?: string;\n  // show?: Function;\n  show?: Function | any;\n  // hide?: Function;\n  hide?: Function | any;\n  toggle?: Function;\n}\n\nexport class ComponentLoader<T> {\n  public onBeforeShow: EventEmitter<any> = new EventEmitter();\n  public onShown: EventEmitter<any> = new EventEmitter();\n  public onBeforeHide: EventEmitter<any> = new EventEmitter();\n  public onHidden: EventEmitter<any> = new EventEmitter();\n\n  public instance: T;\n  // public _componentRef: ComponentRef<T>;\n  public _componentRef: ComponentRef<T> | any;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  // private _contentRef: ContentRef;\n  private _contentRef: ContentRef | any;\n  // private _innerComponent: ComponentRef<T>;\n  private _innerComponent: ComponentRef<T> | any ;\n\n  private _unregisterListenersFn: Function;\n\n  public get isShown(): boolean {\n    return !!this._componentRef;\n  }\n\n    /**\n     * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n     private attachment: string;\n\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * Currently only supports \"body\".\n     */\n     private container: string | ElementRef | any;\n\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n     private triggers: string;\n\n    /**\n     * Do not use this directly, it should be instanced via\n     * `ComponentLoadFactory.attach`\n     * @internal\n     */\n     // tslint:disable-next-line\n     public constructor(private _viewContainerRef: ViewContainerRef,\n       private _renderer: Renderer2,\n       private _elementRef: ElementRef,\n       private _injector: Injector,\n       private _componentFactoryResolver: ComponentFactoryResolver,\n       private _ngZone: NgZone,\n       private _applicationRef: ApplicationRef,\n       private _posService: PositioningService) {\n     }\n\n     public attach(compType: Type<T>): ComponentLoader<T> {\n       this._componentFactory = this._componentFactoryResolver\n       .resolveComponentFactory<T>(compType);\n       return this;\n     }\n\n     // todo: add behaviour: to target element, `body`, custom element\n     public to(container?: string): ComponentLoader<T> {\n       this.container = container || this.container;\n       return this;\n     }\n\n     public position(opts?: PositioningOptions | any): ComponentLoader<T> {\n       this.attachment = opts.attachment || this.attachment;\n       this._elementRef = opts.target as ElementRef || this._elementRef;\n       return this;\n     }\n\n     public provide(provider: Provider): ComponentLoader<T> {\n       this._providers.push(provider);\n       return this;\n     }\n\n     // todo: appendChild to element or document.querySelector(this.container)\n     public show(opts: { content?: string | TemplateRef<any>, [key: string]: any } = {}): ComponentRef<T> {\n       this._subscribePositioning();\n       this._innerComponent = null;\n\n       if (!this._componentRef) {\n         this.onBeforeShow.emit();\n         this._contentRef = this._getContentRef(opts.content);\n         const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n         this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n         this._applicationRef.attachView(this._componentRef.hostView);\n         // this._componentRef = this._viewContainerRef\n         //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n         this.instance = this._componentRef.instance;\n\n         Object.assign(this._componentRef.instance, opts);\n\n         if (this.container instanceof ElementRef) {\n           this.container.nativeElement\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         if (this.container === 'body' && typeof document !== 'undefined') {\n          //  document.querySelector(this.container as string)\n          document.querySelector(this.container as string | any)\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n           this._elementRef.nativeElement.parentElement\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         // we need to manually invoke change detection since events registered\n         // via\n         // Renderer::listen() are not picked up by change detection with the\n         // OnPush strategy\n         if (this._contentRef.componentRef) {\n           this._innerComponent = this._contentRef.componentRef.instance;\n           this._contentRef.componentRef.changeDetectorRef.markForCheck();\n           this._contentRef.componentRef.changeDetectorRef.detectChanges();\n         }\n         this._componentRef.changeDetectorRef.markForCheck();\n         this._componentRef.changeDetectorRef.detectChanges();\n         this.onShown.emit(this._componentRef.instance);\n       }\n       return this._componentRef;\n     }\n\n     public hide(): ComponentLoader<T> {\n       if (!this._componentRef) {\n         return this;\n       }\n\n       this.onBeforeHide.emit(this._componentRef.instance);\n\n       const componentEl = this._componentRef.location.nativeElement;\n       componentEl.parentNode.removeChild(componentEl);\n       if (this._contentRef.componentRef) {\n         this._contentRef.componentRef.destroy();\n       }\n       this._componentRef.destroy();\n       if (this._viewContainerRef && this._contentRef.viewRef) {\n         this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n       }\n       // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n       //\n       // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n         //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n         // }\n\n         this._contentRef = null;\n         this._componentRef = null;\n\n         this.onHidden.emit();\n         return this;\n       }\n\n       public toggle(): void | any {\n         if (this.isShown) {\n           this.hide();\n           return;\n         }\n\n         this.show();\n       }\n\n       public dispose(): void {\n         if (this.isShown) {\n           this.hide();\n         }\n\n         this._unsubscribePositioning();\n\n         if (this._unregisterListenersFn) {\n           this._unregisterListenersFn();\n         }\n       }\n\n       public listen(listenOpts: ListenOptions): ComponentLoader<T> {\n         this.triggers = listenOpts.triggers || this.triggers;\n\n         listenOpts.target = listenOpts.target || this._elementRef;\n         listenOpts.show = listenOpts.show || (() => this.show());\n         listenOpts.hide = listenOpts.hide || (() => this.hide());\n         listenOpts.toggle = listenOpts.toggle || (() => this.isShown\n           ? listenOpts.hide()\n           : listenOpts.show());\n\n         this._unregisterListenersFn = listenToTriggers(\n           this._renderer,\n           listenOpts.target.nativeElement,\n           this.triggers,\n           listenOpts.show,\n           listenOpts.hide,\n           listenOpts.toggle);\n\n         return this;\n       }\n\n       public getInnerComponent(): ComponentRef<T> {\n         return this._innerComponent;\n       }\n\n       private _subscribePositioning(): void | any {\n         if (this._zoneSubscription || !this.attachment) {\n           return;\n         }\n\n         this._zoneSubscription = this._ngZone\n         .onStable.subscribe(() => {\n           if (!this._componentRef) {\n             return;\n           }\n           this._posService.position({\n             element: this._componentRef.location,\n             target: this._elementRef,\n             attachment: this.attachment,\n             appendToBody: this.container === 'body'\n           });\n         });\n       }\n\n       private _unsubscribePositioning(): void | any {\n         if (!this._zoneSubscription) {\n           return;\n         }\n         this._zoneSubscription.unsubscribe();\n         this._zoneSubscription = null;\n       }\n\n       private _getContentRef(content: string | TemplateRef<any> | any): ContentRef {\n         if (!content) {\n           return new ContentRef([]);\n         }\n\n         if (content instanceof TemplateRef) {\n           if (this._viewContainerRef) {\n             const viewRef = this._viewContainerRef.createEmbeddedView<TemplateRef<T>>(content);\n             return new ContentRef([viewRef.rootNodes], viewRef);\n           }\n           const viewRef = content.createEmbeddedView({});\n           this._applicationRef.attachView(viewRef);\n           return new ContentRef([viewRef.rootNodes], viewRef);\n         }\n\n         if (typeof content === 'function') {\n           const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n           const modalContentInjector = ReflectiveInjector.resolveAndCreate([...this._providers, content], this._injector);\n           const componentRef = contentCmptFactory.create(modalContentInjector);\n           this._applicationRef.attachView(componentRef.hostView);\n           return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n         }\n         return new ContentRef([[this._renderer.createText(`${content}`)]]);\n       }\n     }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n import { ComponentRef, ViewRef } from '@angular/core';\n\n export class ContentRef {\n   public nodes: any[];\n   public viewRef?: ViewRef;\n   public componentRef?: ComponentRef<any>;\n\n   public constructor( nodes: any[],  viewRef?: ViewRef,  componentRef?: ComponentRef<any>) {\n     this.nodes = nodes;\n     this.viewRef = viewRef;\n     this.componentRef = componentRef;\n   }\n }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers\n    .filter((triggerPair: Trigger) => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2, target: any, triggers: string,\n  showFn: Function, hideFn: Function, toggleFn: Function): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  //  parsedTriggers.forEach((trigger: Trigger) => {\n  parsedTriggers.forEach((trigger: Trigger | any) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, () => {\n        toggleFn();\n      }));\n      // listeners.push(renderer.listen(target, trigger.open, toggleFn));\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => {\n        showFn();\n       }),\n      // renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, () => {\n        hideFn();\n      }));\n      // renderer.listen(target, trigger.close, hideFn));\n  });\n\n  return () => { listeners.forEach((unsubscribeFn: Function) => unsubscribeFn()); };\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n export class Trigger {\n   public open: string;\n   public close?: string;\n\n   public constructor(open: string, close?: string) {\n     this.open = open;\n     this.close = close || open;\n   }\n\n   public isManual(): boolean { return this.open === 'manual' || this.close === 'manual'; }\n }\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n@Injectable()\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\n}\n","import { Directive, ElementRef, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BsDropdownState } from './dropdown.state';\n\n@Directive({\n  selector: '[mdbDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle'\n})\nexport class BsDropdownToggleDirective implements OnDestroy {\n  private _subscriptions: Subscription[] = [];\n\n  @HostBinding('attr.aria-haspopup') ariaHaspopup = true;\n  // @HostBinding('attr.disabled') isDisabled: boolean = null;\n  @HostBinding('attr.disabled') isDisabled: boolean | any = null;\n\n  // @HostBinding('class.active')\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit();\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: any): void {\n    if (this._state.autoClose && event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)) {\n      this._state.toggleClick.emit(false);\n  }\n}\n\n@HostListener('keyup.esc')\nonEsc(): void {\n  if (this._state.autoClose) {\n    this._state.toggleClick.emit(false);\n  }\n}\n\nconstructor(private _state: BsDropdownState,\n  private _element: ElementRef) {\n  // sync is open value with state\n  this._subscriptions.push(this._state\n    .isOpenChange.subscribe((value: boolean) => this.isOpen = value));\n  // populate disabled state\n  this._subscriptions.push(this._state\n    .isDisabledChange\n    // .subscribe((value: boolean) => this.isDisabled = value || null));\n    .subscribe((value: boolean | any) => this.isDisabled = value || null));\n}\n\nngOnDestroy(): void {\n  for (const sub of this._subscriptions) {\n    sub.unsubscribe();\n  }\n}\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './dropdown.state';\n\n@Directive({\n  selector: '[mdbDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n})\nexport class BsDropdownMenuDirective {\n  constructor(_state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, HostBinding } from '@angular/core';\nimport { BsDropdownState } from './dropdown.state';\n\n@Component({\n  selector: 'mdb-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <div [class.dropup]=\"direction === 'up'\"\n  [class.dropdown]=\"direction === 'down'\"\n  [class.show]=\"isOpen\"\n  [class.open]=\"isOpen\">\n    <ng-content></ng-content>\n  </div>\n  `\n})\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  @HostBinding('style.display') display = 'block';\n  @HostBinding('style.position') position = 'absolute';\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(private _state: BsDropdownState) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\n\n@Injectable()\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n   dropdownMenu: Promise<BsComponentRef<any>>;\n   resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n   constructor() {\n     this.dropdownMenu = new Promise((resolve) => {\n       this.resolveDropdownMenu = resolve;\n     });\n   }\n }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CollapseComponent } from './collapse.component';\n\n@NgModule({\n  declarations: [CollapseComponent],\n  exports: [CollapseComponent]\n})\nexport class CollapseModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CollapseModule, providers: []};\n  }\n}\n","\nimport { Component, OnInit, HostBinding, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { state, style, trigger, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: '[mdbCollapse]',\n  exportAs: 'bs-collapse',\n  template: '<ng-content></ng-content>',\n  animations: [\n    trigger('expandBody', [\n      state('collapsed', style({height: '0px', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate('500ms ease')),\n    ])\n  ],\n})\nexport class CollapseComponent implements OnInit {\n  @Input() isCollapsed = false;\n\n  @Output() showBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() shownBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() hideBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() hiddenBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() collapsed: EventEmitter<any> = new EventEmitter();\n  @Output() expanded: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  @HostBinding('@expandBody') expandAnimationState: string;\n  @HostBinding('style.overflow')\n  overflow = 'hidden';\n\n  @HostListener('@expandBody.done', ['$event'])\n  onExpandBodyDone(event: any) {\n    if (event.toState === 'expanded') {\n      this.shownBsCollapse.emit(this);\n      this.expanded.emit(this);\n    } else {\n      this.hiddenBsCollapse.emit(this);\n      this.collapsed.emit(this);\n    }\n  }\n\n  toggle() {\n    this.isCollapsed ? this.open() : this.hide();\n  }\n\n  open() {\n    this.expandAnimationState = 'expanded';\n    this.isCollapsed = false;\n\n    this.showBsCollapse.emit(this);\n  }\n\n  hide() {\n    this.expandAnimationState = 'collapsed';\n    this.isCollapsed = true;\n\n    this.hideBsCollapse.emit(this);\n  }\n\n  initializeCollapseState() {\n    this.isCollapsed ? this.hide() : this.open();\n  }\n\n  ngOnInit() {\n    this.initializeCollapseState();\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\n\nexport { CHECKBOX_VALUE_ACCESSOR, CheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  declarations: [\n    CheckboxComponent\n  ],\n  exports: [\n    CheckboxComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class CheckboxModule { }\n","import { Component, OnInit, forwardRef, ViewChild, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxComponent),\n  multi: true\n};\n\nlet defaultIdNumber = 0;\n\nexport class MdbCheckboxChange {\n  element: CheckboxComponent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'mdb-checkbox',\n  template: \"<div [ngClass]=\\\"{  'custom-control custom-checkbox': default, 'form-check': !default, 'custom-control-inline': inline, 'form-check-inline': inline && !default }\\\"> <input  #input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{  'filled-in': filledIn || rounded, 'custom-control-input': default, 'form-check-input': !default }\\\" [id]=\\\"id\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [required]=\\\"required\\\" [indeterminate]=\\\"indeterminate\\\" [attr.name]=\\\"name\\\" [attr.value]=\\\"value\\\" [tabIndex]=\\\"tabIndex\\\" (click)=\\\"onCheckboxClick($event)\\\" (change)=\\\"onCheckboxChange($event)\\\" > <label [ngClass]=\\\"{  'custom-control-label': default, 'form-check-label': !default, 'label-before': checkboxPosition === 'right',  'checkbox-rounded': rounded, 'disabled': disabled }\\\" [attr.for]=\\\"id\\\"> <ng-content></ng-content> </label> </div>\",\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n})\nexport class CheckboxComponent implements OnInit, OnChanges {\n  @ViewChild('input') inputEl: any;\n\n  private defaultId = `mdb-checkbox-${++defaultIdNumber}`;\n\n  @Input() class: string;\n  @Input() id: string = this.defaultId;\n  @Input() required: boolean;\n  @Input() name: string;\n  @Input() value: string;\n  @Input() checked = false;\n  @Input() filledIn = false;\n  @Input() indeterminate = false;\n  @Input() disabled: boolean;\n  @Input() rounded = false;\n  @Input() checkboxPosition = 'left';\n  @Input() default = false;\n  @Input() inline = false;\n  @Input() tabIndex: number;\n\n  @Output() change: EventEmitter<MdbCheckboxChange> = new EventEmitter<MdbCheckboxChange>();\n\n\n  constructor() { }\n\n\n  ngOnInit() {\n    if (this.indeterminate && !this.filledIn && !this.rounded) {\n      this.inputEl.indeterminate = true;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('checked')) {\n      this.checked = changes.checked.currentValue;\n    }\n  }\n\n  get changeEvent() {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n\n  toggle() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checked = !this.checked;\n    this.indeterminate = false;\n    this.onChange(this.checked);\n  }\n\n  onCheckboxClick(event: any) {\n    event.stopPropagation();\n    this.toggle();\n  }\n\n  onCheckboxChange(event: any) {\n    event.stopPropagation();\n    this.change.emit(this.changeEvent);\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  writeValue(value: any) {\n    this.value = value;\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { BaseChartDirective } from './chart.directive';\n\n@NgModule({\n  declarations: [\n  BaseChartDirective\n  ],\n  exports: [\n  BaseChartDirective\n  ],\n  imports: []\n})\nexport class ChartsModule {\n}\n","import {\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Output,\n  SimpleChanges,\n  Directive\n} from '@angular/core';\n\nimport { Color } from './color.service';\nimport { Colors } from './colors.service';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport * as Chart from 'chart.js';\n\n@Directive({ selector: 'canvas[mdbChart]', exportAs: 'mdb-base-chart' })\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, Colors {\n  public static defaultColors: Array<number[]> = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n  ];\n\n  @Input() public data: number[] | any[];\n  @Input() public datasets: any[];\n  @Input() public labels: Array<any> = [];\n  @Input() public options: any = {\n    legend: { display: false }\n  };\n  @Input() public chartType: string;\n  @Input() public colors: Array<any>;\n  @Input() public legend = false;\n\n  @Output() public chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<any> = new EventEmitter();\n\n  public ctx: any;\n  public chart: any;\n  cvs: any;\n  initFlag = false;\n\n  element: ElementRef;\n  isBrowser: any = false;\n  public constructor(element: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n    this.element = element;\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  public ngOnInit(): any {\n    if (this.isBrowser) {\n      this.ctx = this.element.nativeElement.getContext('2d');\n      this.cvs = this.element.nativeElement;\n      this.initFlag = true;\n      if (this.data || this.datasets) {\n        this.refresh();\n      }\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.initFlag) {\n      // Check if the changes are in the data or datasets\n      if ((changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) && !changes.hasOwnProperty('labels')) {\n        if (changes['data']) {\n          this.updateChartData(changes['data'].currentValue);\n        } else {\n          this.updateChartData(changes['datasets'].currentValue);\n        }\n\n        this.chart.update();\n      } else {\n        // otherwise rebuild the chart\n        this.refresh();\n      }\n    }\n  }\n\n  public ngOnDestroy(): any {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n  }\n\n  public getChartBuilder(ctx: any/*, data:Array<any>, options:any*/): any {\n    const datasets: any = this.getDatasets();\n\n    const options: any = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = { display: false };\n    }\n    // hock for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: any, active: Array<any>) => {\n        if (active && active.length) {\n          this.chartHover.emit({ event, active });\n        }\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event: any, active: Array<any>) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const opts = {\n      type: this.chartType,\n      data: {\n        labels: this.labels,\n        datasets: datasets\n      },\n      options: options\n    };\n\n    return new Chart(ctx, opts);\n  }\n\n  private updateChartData(newDataValues: number[] | any[]): void {\n    if (Array.isArray(newDataValues[0].data)) {\n      this.chart.data.datasets.forEach((dataset: any, i: number) => {\n        dataset.data = newDataValues[i].data;\n\n        if (newDataValues[i].label) {\n          dataset.label = newDataValues[i].label;\n        }\n      });\n    } else {\n      this.chart.data.datasets[0].data = newDataValues;\n    }\n  }\n\n  private getDatasets(): any {\n    let datasets: any = void 0;\n    // in case if datasets is not provided, but data is present\n    if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n      if (Array.isArray(this.data[0])) {\n        datasets = (this.data as Array<number[]>).map((data: number[], index: number) => {\n          return { data, label: this.labels[index] || `Label ${index}` };\n        });\n      } else {\n        datasets = [{ data: this.data, label: `Label 0` }];\n      }\n    }\n\n    if (this.datasets && this.datasets.length ||\n      (datasets && datasets.length)) {\n      datasets = (this.datasets || datasets)\n        .map((elm: number, index: number) => {\n          const newElm: any = Object.assign({}, elm);\n          if (this.colors && this.colors.length) {\n            Object.assign(newElm, this.colors[index]);\n          } else {\n            Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n          }\n          return newElm;\n        });\n    }\n\n    if (!datasets) {\n      throw new Error(`ng-charts configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n    }\n\n    return datasets;\n  }\n\n  private refresh(): any {\n    this.ngOnDestroy();\n    this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n  }\n}\n\nfunction rgba(colour: Array<number>, alpha: number): string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors: Array<number[]>): any {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor(): number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n */\nfunction generateColor(index: number): number[] {\n  return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n */\nfunction generateColors(count: number): Array<number[]> {\n  const colorsArr: Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n\n/**\n * Generate colors by chart type\n */\nfunction getColors(chartType: string, index: number, count: number): any {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n  return generateColor(index);\n}\n\n\n","import { MdbCardFooterComponent } from './mdb-card-footer.component';\nimport { MdbCardTitleComponent } from './mdb-card-title.component';\nimport { MdbCardTextComponent } from './mdb-card-text.component';\nimport { MdbCardBodyComponent } from './mdb-card-body.component';\nimport { MdbCardComponent } from './mdb-card.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MdbCardImageComponent } from './mdb-card-image.component';\nimport { MdbCardHeaderComponent } from './mdb-card-header.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        MdbCardComponent,\n        MdbCardBodyComponent,\n        MdbCardImageComponent,\n        MdbCardTextComponent,\n        MdbCardTitleComponent,\n        MdbCardFooterComponent,\n        MdbCardHeaderComponent\n    ],\n    exports: [\n        MdbCardComponent,\n        MdbCardBodyComponent,\n        MdbCardImageComponent,\n        MdbCardTextComponent,\n        MdbCardTitleComponent,\n        MdbCardFooterComponent,\n        MdbCardHeaderComponent\n    ]\n})\nexport class CardsFreeModule {\n    public static forRoot(): ModuleWithProviders {\n        return { ngModule: CardsFreeModule, providers: [] };\n    }\n}\n","import { Component, Input, OnInit, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-header',\n    template: \"<ng-content></ng-content>\",\n})\n\nexport class MdbCardHeaderComponent implements OnInit {\n    @Input() class: string;\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-header');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-img',\n    template: \"<img class=\\\"img-fluid\\\" [src]=\\\"src\\\" [alt]=\\\"alt\\\">\",\n})\n\nexport class MdbCardImageComponent {\n\n    @Input() src: string;\n    @Input() alt: string;\n\n}\n","\nimport { Component, Input, ElementRef, Renderer2, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card',\n    template: \"<div class=\\\"card\\\" [ngClass]=\\\"{'card-cascade': cascade, 'wider': wider}\\\" #card> <ng-content></ng-content> </div>\",\n})\n\nexport class MdbCardComponent implements OnInit {\n    @Input() class: string;\n    @Input() cascade: boolean;\n    @Input() wider: boolean;\n\n\n    @Input() set narrower(narrower: boolean) {\n        if (narrower) {\n            this._r.addClass(this._el.nativeElement, 'narrower');\n        }\n    }\n\n    @Input() set reverse(reverse: boolean) {\n        if (reverse) {\n            this._r.addClass(this._el.nativeElement, 'reverse');\n        }\n    }\n\n    @Input() set dark(dark: boolean) {\n        if (dark) {\n            this._r.addClass(this._el.nativeElement, 'card-dark');\n        }\n    }\n\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card');\n        if (this.cascade) {\n            this._r.addClass(this._el.nativeElement, 'card-cascade');\n        }\n        if (this.wider) {\n            this._r.addClass(this._el.nativeElement, 'wider');\n        }\n        if (this.narrower) {\n            this._r.addClass(this._el.nativeElement, 'narrower');\n        }\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","\nimport { Component, Input, ElementRef, Renderer2, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-body',\n    template: \" <ng-content></ng-content> \",\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class MdbCardBodyComponent implements OnInit {\n    @Input() class: string;\n\n    @Input() set cascade(cascade: boolean) {\n        if (cascade) {\n            this._r.addClass(this._el.nativeElement, 'card-body-cascade');\n        }\n    }\n\n    constructor(private _el: ElementRef, private _r: Renderer2) {\n\n    }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-body');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-text',\n    template: \"<p class=\\\"card-text {{class}} \\\"> <ng-content></ng-content> </p>\",\n})\n\nexport class MdbCardTextComponent {\n\n    @Input() class: string;\n}\n","\nimport { Component, OnInit, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-title',\n    template: \"<ng-content></ng-content>\",\n})\n\nexport class MdbCardTitleComponent implements OnInit {\n\n    constructor(private _el: ElementRef, private _r: Renderer2) {\n        \n    }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-title');\n    }\n}\n","import { Component, Input, ElementRef, Renderer2, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-footer',\n    template: \"<div class=\\\"card-footer\\\"> <ng-content></ng-content> </div>\",\n})\n\nexport class MdbCardFooterComponent implements OnInit {\n    @Input() class: string;\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        // this._r.addClass(this._el.nativeElement, 'card-footer');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SlideComponent, CarouselComponent],\n  exports: [SlideComponent, CarouselComponent],\n  providers: [CarouselConfig]\n})\nexport class CarouselModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CarouselModule, providers: []};\n  }\n}\n","import { Component, HostBinding, OnDestroy, Input, OnInit, ElementRef } from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\n\n@Component({\n  selector: 'mdb-slide, mdb-carousel-item',\n  template: `\n  <ng-content></ng-content>\n  `\n})\nexport class SlideComponent implements OnInit, OnDestroy {\n\n  /** Is current slide active */\n  @HostBinding('class.active')\n  @Input() public active: boolean;\n  @HostBinding('class.animated') animated = false;\n  @HostBinding('class.carousel-item-next') directionNext = false;\n  @HostBinding('class.carousel-item-left') directionLeft = false;\n  @HostBinding('class.carousel-item-prev') directionPrev = false;\n  @HostBinding('class.carousel-item-right') directionRight = false;\n  /** Wraps element by appropriate CSS classes */\n  @HostBinding('class.carousel-item')\n\n\n  /** Link to Parent(container-collection) component */\n  // public carousel: CarouselComponent;\n  // public el: ElementRef = null;\n  public el: ElementRef | any = null;\n\n  public constructor(public carousel: CarouselComponent, el: ElementRef) {\n    // this.carousel = carousel;\n    this.el = el;\n  }\n\n  /** Fires changes in container collection after adding a new slide instance */\n  public ngOnInit(): void {\n    this.carousel.addSlide(this);\n  }\n\n  /** Fires changes in container collection after removing of this slide instance */\n  public ngOnDestroy(): void {\n    this.carousel.removeSlide(this);\n  }\n}\n","\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  AfterViewInit\n} from '@angular/core';\n\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { LinkedList } from '../utils/linked-list.class';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport enum Direction { UNKNOWN, NEXT, PREV }\n\n/**\n* Base element to create carousel\n*/\n@Component({\n  selector: 'mdb-carousel',\n  template: \"<div tabindex=\\\"0\\\" (swipeleft)=\\\"swipe($event.type)\\\" (swiperight)=\\\"swipe($event.type)\\\" (mouseenter)=\\\"pause()\\\" (mouseleave)=\\\"play()\\\" (mouseup)=\\\"play()\\\" class=\\\"carousel {{ class }} {{ type }}\\\"> <div class=\\\"controls-top\\\" *ngIf=\\\"slides.length > 1 && !checkNavigation() && isControls\\\"> <a class=\\\"btn-floating\\\" [class.disabled]=\\\"activeSlide===0&&noWrap\\\" (click)=\\\"previousSlide()\\\"><i class=\\\"fa fa-chevron-left\\\"></i></a> <a class=\\\"btn-floating\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"><i class=\\\"fa fa-chevron-right\\\"></i></a> </div> <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"slides.length > 1 && checkDots() && isControls\\\"> <li *ngFor=\\\"let slidez of slides; let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"></li> </ol> <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"slides.length > 1 && !checkDots() && isControls\\\"> <li *ngFor=\\\"let slidez of slides; let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"> <img class=\\\"img-fluid\\\" src=\\\"{{ getImg(slidez) }}\\\"> </li> </ol> <div class=\\\"carousel-inner\\\"><ng-content></ng-content></div> <a class=\\\"carousel-control-prev\\\" [class.disabled]=\\\"activeSlide === 0 && noWrap\\\" (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1 && checkNavigation() && isControls\\\"> <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span> <span  class=\\\"sr-only\\\">Previous</span> </a> <a class=\\\"carousel-control-next\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\" *ngIf=\\\"slides.length > 1 && checkNavigation() && isControls\\\"> <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Next</span> </a> </div>\",\n})\n\nexport class CarouselComponent implements OnDestroy, AfterViewInit {\n  SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n\n  protected _slides: LinkedList<SlideComponent> = new LinkedList<SlideComponent>();\n  public get slides(): SlideComponent[] {\n    return this._slides.toArray();\n  }\n\n  protected currentInterval: any;\n  protected isPlaying: boolean;\n  protected destroyed = false;\n  // protected el: ElementRef = null;\n  protected el: ElementRef | any = null;\n  protected animationEnd = true;\n  isBrowser: any = false;\n  /** If `true` — carousel will not cycle continuously and will have hard stops (prevent looping) */\n  @Input() public noWrap: boolean;\n  /**  If `true` — will disable pausing on carousel mouse hover */\n  @Input() public noPause: boolean;\n\n  @Input('isControls') public isControls = true;\n  @Input() public keyboard: boolean;\n\n  @Input('class') public class: String = '';\n  @Input('type') public type: String = '';\n  @Input('animation') public animation: String = '';\n  @Input() activeSlideIndex: number;\n\n  // protected _currentActiveSlide: number;\n  protected _currentActiveSlide: number | any;\n\n  /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */\n  @Output() public activeSlideChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /** Index of currently displayed slide(started for 0) */\n  @Input()\n  public set activeSlide(index: number) {\n    if (this._slides.length && index !== this._currentActiveSlide) {\n      this._select(index);\n    }\n  }\n\n  public get activeSlide(): number {\n    return this._currentActiveSlide;\n  }\n\n\n\n  protected _interval: number;\n\n  public checkNavigation() {\n    if (this.type === 'carousel-multi-item') {\n      return false;\n    }\n    return true;\n\n  }\n\n  public checkDots() {\n    if (this.type === 'carousel-thumbnails') {\n      return false;\n    }\n\n\n    return true;\n  }\n\n  getImg(slide: any) {\n    return slide.el.nativeElement.querySelector('img').src;\n  }\n\n  /**\n   * Delay of item cycling in milliseconds. If false, carousel won't cycle automatically.\n   */\n  @Input()\n  public get interval(): number {\n    return this._interval;\n  }\n  public set interval(value: number) {\n    this._interval = value;\n    this.restartTimer();\n  }\n\n  public get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  public constructor(config: CarouselConfig, el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    Object.assign(this, config);\n    this.el = el;\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  /**\n   * Adds new slide. If this slide is first in collection - set it as active and starts auto changing\n   * @param slide\n   */\n  public addSlide(slide: SlideComponent): void {\n    this._slides.add(slide);\n    if (this._slides.length === 1) {\n      this._currentActiveSlide = void 0;\n      this.activeSlide = 0;\n      this.play();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Setting first visible slide\n    if (this.activeSlideIndex) {\n      setTimeout(() => {\n        this._select(this.activeSlideIndex);\n        this.activeSlideChange.emit({'relatedTarget': this.activeSlide });\n      }, 0);\n    }\n  }\n\n  /**\n   * Removes specified slide. If this slide is active - will roll to another slide\n   * @param slide\n   */\n  public removeSlide(slide: SlideComponent): void {\n    const remIndex = this._slides.indexOf(slide);\n\n    if (this._currentActiveSlide === remIndex) {\n\n      // removing of active slide\n      //  let nextSlideIndex: number = void 0;\n      let nextSlideIndex: number | any = void 0;\n      if (this._slides.length > 1) {\n        // if this slide last - will roll to first slide, if noWrap flag is FALSE or to previous, if noWrap is TRUE\n        // in case, if this slide in middle of collection, index of next slide is same to removed\n        nextSlideIndex = !this.isLast(remIndex) ? remIndex :\n          this.noWrap ? remIndex - 1 : 0;\n      }\n      this._slides.remove(remIndex);\n\n      // prevents exception with changing some value after checking\n      setTimeout(() => {\n        this._select(nextSlideIndex);\n      }, 0);\n    } else {\n      this._slides.remove(remIndex);\n      const currentSlideIndex = this.getCurrentSlideIndex();\n      setTimeout(() => {\n        // after removing, need to actualize index of current active slide\n        this._currentActiveSlide = currentSlideIndex;\n        this.activeSlideChange.emit(this._currentActiveSlide);\n      }, 0);\n\n    }\n  }\n  // Fixed problem while cannot swipe next / previous image while using HammerJS.\n  swipe(action = this.SWIPE_ACTION.RIGHT) {\n    if (action === this.SWIPE_ACTION.RIGHT) {\n      this.previousSlide();\n    }\n\n    if (action === this.SWIPE_ACTION.LEFT) {\n      this.nextSlide();\n    }\n  }\n\n\n  /**\n   * Rolling to next slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  public nextSlide(force: boolean = false) {\n    if (this.animation === 'slide') {\n      this.pause();\n      const direction = Direction.NEXT;\n      this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\n    } else if (this.animation === 'fade') {\n      this.pause();\n      this.fadeAnimation(this.findNextSlideIndex(Direction.NEXT, force));\n    } else {\n      this.activeSlide = this.findNextSlideIndex(Direction.NEXT, force);\n    }\n    if (!this.animation) {\n      this.activeSlideChange.emit({ 'direction': 'Next', 'relatedTarget': this.activeSlide });\n    }\n  }\n\n  /**\n   * Rolling to previous slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  public previousSlide(force: boolean = false): void {\n    if (this.animation === 'slide') {\n      this.pause();\n      const direction = Direction.PREV;\n      this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\n    } else if (this.animation === 'fade') {\n      this.pause();\n      this.fadeAnimation(this.findNextSlideIndex(Direction.PREV, force));\n    } else {\n      this.activeSlide = this.findNextSlideIndex(Direction.PREV, force);\n    }\n    if (!this.animation) {\n      this.activeSlideChange.emit({ 'direction': 'Prev', 'relatedTarget': this.activeSlide });\n    }\n  }\n\n  protected fadeAnimation(goToIndex: number) {\n    // const currentSlide = this._slides.get(this._currentActiveSlide);\n    const goToSlide = this._slides.get(goToIndex);\n\n    if (this.animationEnd) {\n      this.animationEnd = false;\n\n      goToSlide.directionNext = true;\n      if (this.isBrowser) {\n        setTimeout(() => {\n          goToSlide.directionNext = false;\n          this.animationEnd = true;\n\n          this.activeSlide = goToIndex;\n          this.activeSlideChange.emit({ 'direction': 'Next', 'relatedTarget': this.activeSlide });\n          this.play();\n        }, 100);\n      }\n    }\n  }\n\n  protected slideAnimation(goToIndex: number, direction: any) {\n\n    const currentSlide = this._slides.get(this._currentActiveSlide);\n    const goToSlide = this._slides.get(goToIndex);\n\n    if (this.animationEnd) {\n      if (direction === Direction.NEXT) {\n        this.animationEnd = false;\n        goToSlide.directionNext = true;\n        if (this.isBrowser) {\n          setTimeout(() => {\n            goToSlide.directionLeft = true;\n            currentSlide.directionLeft = true;\n          }, 100);\n        }\n      }\n\n      if (direction === Direction.PREV) {\n        this.animationEnd = false;\n\n        goToSlide.directionPrev = true;\n        if (this.isBrowser) {\n          setTimeout(() => {\n            goToSlide.directionRight = true;\n            currentSlide.directionRight = true;\n          }, 100);\n        }\n      }\n\n      if (this.isBrowser) {\n        setTimeout(() => {\n          goToSlide.directionLeft = false;\n          goToSlide.directionNext = false;\n          currentSlide.directionLeft = false;\n          currentSlide.directionNext = false;\n          goToSlide.directionRight = false;\n          goToSlide.directionPrev = false;\n          currentSlide.directionRight = false;\n          currentSlide.directionPrev = false;\n\n          this.animationEnd = true;\n\n          this.activeSlide = goToIndex;\n\n          let directionName;\n          if (direction === Direction.NEXT) {\n            directionName = 'Next';\n          } else if (direction === Direction.PREV) {\n            directionName = 'Prev';\n          }\n\n          this.activeSlideChange.emit({ 'direction': directionName, 'relatedTarget': this.activeSlide });\n          this.play();\n        }, 700);\n      }\n    }\n  }\n\n\n\n  /**\n   * Rolling to specified slide\n   * @param index: {number} index of slide, which must be shown\n   */\n  public selectSlide(index: number): void {\n    this.pause();\n    if (this.animation === 'slide') {\n\n      if (this.activeSlide < index) {\n        this.slideAnimation(index, Direction.NEXT);\n      } else if (this.activeSlide > index) {\n        this.slideAnimation(index, Direction.PREV);\n      }\n    } else if (this.animation === 'fade') {\n      if (index !== this.activeSlide) {\n        this.fadeAnimation(index);\n      }\n    }\n    this.play();\n  }\n\n  /**\n   * Starts a auto changing of slides\n   */\n  @HostListener('mouseleave') play() {\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      this.restartTimer();\n    }\n  }\n\n  /**\n   * Stops a auto changing of slides\n   */\n  @HostListener('mouseenter') pause() {\n    if (!this.noPause) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n\n  /**\n   * Finds and returns index of currently displayed slide\n   */\n  public getCurrentSlideIndex(): number {\n    return this._slides.findIndex((slide: SlideComponent) => slide.active);\n  }\n\n  /**\n   * Defines, whether the specified index is last in collection\n   */\n  public isLast(index: number): boolean {\n    return index + 1 >= this._slides.length;\n  }\n\n  /**\n   * Defines next slide index, depending of direction\n   * @param direction: Direction(UNKNOWN|PREV|NEXT)\n   * @param force: {boolean} if TRUE - will ignore noWrap flag, else will return undefined if next slide require wrapping\n\n   */\n  private findNextSlideIndex(direction: Direction, force: boolean): any {\n    let nextSlideIndex = 0;\n\n    if (!force && (this.isLast(this.activeSlide) && direction !== Direction.PREV && this.noWrap)) {\n      return void 0;\n    }\n\n    switch (direction) {\n      case Direction.NEXT:\n        // if this is last slide, not force, looping is disabled and need to going forward - select current slide, as a next\n        nextSlideIndex = (!this.isLast(this._currentActiveSlide)) ? this._currentActiveSlide + 1 :\n          (!force && this.noWrap) ? this._currentActiveSlide : 0;\n        break;\n      case Direction.PREV:\n        // if this is first slide, not force, looping is disabled and need to going backward - select current slide, as a next\n        nextSlideIndex = (this._currentActiveSlide > 0) ? this._currentActiveSlide - 1 :\n          (!force && this.noWrap) ? this._currentActiveSlide : this._slides.length - 1;\n        break;\n      default:\n        throw new Error('Unknown direction');\n    }\n    return nextSlideIndex;\n  }\n\n  /**\n   * Sets a slide, which specified through index, as active\n   * @param index\n   */\n  private _select(index: number): void {\n    if (isNaN(index)) {\n      this.pause();\n      return;\n    }\n    const currentSlide = this._slides.get(this._currentActiveSlide);\n    if (currentSlide) {\n      currentSlide.active = false;\n    }\n    const nextSlide = this._slides.get(index);\n    if (nextSlide) {\n      this._currentActiveSlide = index;\n      nextSlide.active = true;\n      this.activeSlide = index;\n      // this.activeSlideChange.emit(index);\n    }\n  }\n\n  /**\n   * Starts loop of auto changing of slides\n   */\n  private restartTimer(): any {\n    this.resetTimer();\n    if (this.isBrowser) {\n      const interval = +this.interval;\n      if (!isNaN(interval) && interval > 0) {\n        this.currentInterval = setInterval(\n          () => {\n            const nInterval = +this.interval;\n            if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {\n              this.nextSlide();\n            } else {\n              this.pause();\n            }\n          },\n          interval);\n      }\n    }\n  }\n\n  /**\n   * Stops loop of auto changing of slides\n   */\n  private resetTimer(): void {\n    if (this.isBrowser) {\n      if (this.currentInterval) {\n        clearInterval(this.currentInterval);\n        this.currentInterval = void 0;\n      }\n    }\n\n  }\n\n  protected hasClass(el: any, className: any) {\n    if (el.classList) {\n      return el.classList.contains(className);\n    } else {\n      return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n    }\n  }\n\n  protected classAdd(el: any, className: any) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else if (!this.hasClass(el, className)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  protected removeClass(el: any, className: any) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else if (this.hasClass(el, className)) {\n      const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n      el.className = el.className.replace(reg, ' ');\n    }\n  }\n\n  @HostListener('keyup', ['$event']) keyboardControl(event: KeyboardEvent) {\n    if (this.keyboard) {\n      if (event.keyCode === 39) {\n        this.nextSlide();\n      }\n\n      if (event.keyCode === 37) {\n        this.previousSlide();\n      }\n    }\n\n  }\n  @HostListener('click') focus() {\n    this.el.nativeElement.focus();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CarouselConfig {\n  /** Default interval of auto changing of slides */\n  public interval = 5000;\n\n  /** Is loop of auto changing of slides can be paused */\n  public noPause = false;\n\n  /** Is slides can wrap from the last to the first slide */\n  public noWrap = false;\n\n  public keyboard = false;\n}\n","export class LinkedList <T> {\n\n  // public length: = 0;\n  public length: any = 0;\n  protected head: any;\n  protected tail: any;\n  protected current: any;\n  protected asArray: T[] = [];\n\n  protected getNode(position: number): any {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n    return current;\n  }\n\n  protected createInternalArrayRepresentation(): void {\n    const outArray: any[] = [];\n    let current = this.head;\n\n    while (current) {\n      outArray.push(current.value);\n      current = current.next;\n    }\n    this.asArray = outArray;\n  }\n\n  // public get(position: number): T {\n    public get(position: number): T | any {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      return void 0;\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n    return current.value;\n  }\n\n  public add(value: T, position: number = this.length): void {\n    if (position < 0 || position > this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = {\n      value: value as any,\n      next: undefined as any,\n      previous: undefined as any\n    };\n\n    if (this.length === 0) {\n      this.head = node;\n      this.tail = node;\n      this.current = node;\n    } else {\n      if (position === 0) {\n        // first node\n        node.next = this.head;\n        this.head.previous = node;\n        this.head = node;\n      } else if (position === this.length) {\n        // last node\n        this.tail.next = node;\n        node.previous = this.tail;\n        this.tail = node;\n      } else {\n        // node in middle\n        const currentPreviousNode = this.getNode(position - 1);\n        const currentNextNode = currentPreviousNode.next;\n\n        currentPreviousNode.next = node;\n        currentNextNode.previous = node;\n\n        node.previous = currentPreviousNode;\n        node.next = currentNextNode;\n      }\n\n    }\n    this.length++;\n    this.createInternalArrayRepresentation();\n  }\n\n  public remove(position: number = 0): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    if (position === 0) {\n      // first node\n      this.head = this.head.next;\n\n      if (this.head) {\n        // there is no second node\n        this.head.previous = undefined;\n      } else {\n        // there is no second node\n        this.tail = undefined;\n      }\n    } else if (position === this.length - 1) {\n      // last node\n      this.tail = this.tail.previous;\n      this.tail.next = undefined;\n    } else {\n      // middle node\n      const removedNode = this.getNode(position);\n      removedNode.next.previous = removedNode.previous;\n      removedNode.previous.next = removedNode.next;\n    }\n\n    this.length--;\n    this.createInternalArrayRepresentation();\n  }\n\n  public set(position: number, value: T): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = this.getNode(position);\n    node.value = value;\n    this.createInternalArrayRepresentation();\n  }\n\n  public toArray(): T[] {\n    return this.asArray;\n  }\n\n  public findAll(fn: any): any[] {\n    let current = this.head;\n    const result: any[] = [];\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result.push({index, value: current.value});\n      }\n      current = current.next;\n    }\n    return result;\n  }\n  // Array methods overriding start\n  public push(...args: T[]): number {\n    args.forEach((arg: any) => {\n      this.add(arg);\n    });\n    return this.length;\n  }\n\n  // public pop(): T {\n    public pop(): T | any {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const last = this.tail;\n    this.remove(this.length - 1);\n    return last.value;\n  }\n\n  public unshift(...args: T[]): number {\n    args.reverse();\n    args.forEach((arg: any) => {\n      this.add(arg, 0);\n    });\n    return this.length;\n  }\n\n  // public shift(): T {\n    public shift(): T | any {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const lastItem = this.head.value;\n    this.remove();\n    return lastItem;\n  }\n\n  public forEach(fn: any): void {\n    let current = this.head;\n    for (let index = 0; index < this.length; index++) {\n      fn(current.value, index);\n      current = current.next;\n    }\n  }\n\n  public indexOf(value: T): number {\n    let current = this.head;\n    let position = 0;\n\n    for (let index = 0; index < this.length; index++) {\n      if (current.value === value) {\n\n        position = index;\n        break;\n      }\n      current = current.next;\n    }\n    return position;\n  }\n\n  public some(fn: any): boolean {\n    let current = this.head;\n    let result  = false;\n    while (current && !result) {\n      if (fn(current.value)) {\n        result = true;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public every(fn: any): boolean {\n    let current = this.head;\n    let result  = true;\n    while (current && result)  {\n      if (!fn(current.value)) {\n        result = false;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public toString(): string {\n    return '[Linked List]';\n  }\n\n  // public find(fn: any): T {\n    public find(fn: any): T | any {\n    let current = this.head;\n    // let result: T;\n    let result: T | any;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = current.value;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public findIndex(fn: any): number {\n    let current = this.head;\n    // let result: number;\n    let result: number | any;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = index;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  // Array methods overriding END\n}\n","import { window } from './facade/browser';\n\nexport function isBs3(): boolean {\n  return window.__theme === 'bs4';\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\n var win = typeof window !== 'undefined' && window || <any>{};\n\n export {win as window};\n export var document = win.document;\n export var location = win.location;\n export var gc = win['gc'] ? () => win['gc']() : (): any => null;\n export var performance = win['performance'] ? win['performance'] : null;\n export const Event = win['Event'];\n export const MouseEvent = win['MouseEvent'];\n export const KeyboardEvent = win['KeyboardEvent'];\n export const EventTarget = win['EventTarget'];\n export const History = win['History'];\n export const Location = win['Location'];\n export const EventListener = win['EventListener'];\n","import { MdbBtnDirective } from './buttons.directive';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './checkbox.directive';\nimport { ButtonRadioDirective } from './radio.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective]\n})\nexport class ButtonsModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ButtonsModule, providers: []};\n  }\n}\n","import { Directive, ElementRef, HostBinding, forwardRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n* Create radio buttons or groups of buttons.\n* A value of a selected button is bound to a variable specified via ngModel.\n*/\n@Directive({ selector: '[mdbRadio]', providers: [RADIO_CONTROL_VALUE_ACCESSOR] })\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  public onChange: any = Function.prototype;\n  public onTouched: any = Function.prototype;\n\n  radioElementsArray: Array<any> = [];\n  /** Radio button value, will be set to `ngModel` */\n  @Input() public mdbRadio: any;\n  /** If `true` — radio button can be unchecked */\n  @Input() public uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input() public value: any;\n\n  protected el: ElementRef;\n\n  @HostBinding('class.active')\n  public get isActive(): boolean {\n    return this.mdbRadio === this.value;\n  }\n\n  // @HostBinding('class.active')\n  @HostListener('click', ['$event'])\n  public onClick(event?: any): void {\n    try {\n      this.el.nativeElement.parentElement.childNodes.forEach((element: any) => {\n        this.radioElementsArray.push(element);\n      });\n      this.radioElementsArray.forEach(element => {\n        this.renderer.removeClass(element, 'active');\n      });\n      this.renderer.addClass(event.target, 'active');\n    } catch (error) {\n\n    }\n    if (this.el.nativeElement.attributes.disabled) {\n      return;\n    }\n\n    if (this.uncheckable && this.mdbRadio === this.value) {\n      this.value = undefined;\n    } else {\n      this.value = this.mdbRadio;\n    }\n\n    this.onTouched();\n    this.onChange(this.value);\n  }\n\n  public constructor(el: ElementRef, private renderer: Renderer2) {\n    this.el = el;\n  }\n\n  public ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  public onBlur(): void {\n    this.onTouched();\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  public writeValue(value: any): void {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","import { Directive, HostBinding, HostListener, Input, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n* Add checkbox functionality to any element\n*/\n@Directive({selector: '[mdbCheckbox]', providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() public btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() public btnCheckboxFalse: any = false;\n\n  @HostBinding('class.active') public state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  public onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  public ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n    ? this.btnCheckboxTrue\n    : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n    ? this.btnCheckboxFalse\n    : false;\n  }\n\n  public toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  public writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  public registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import { Directive, Renderer2, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[mdbBtn]'\n})\nexport class MdbBtnDirective implements OnInit {\n\n  @Input() color: string = '';\n  @Input() rounded: boolean = false;\n  @Input() gradient: string = '';\n  @Input() outline: boolean = false;\n  @Input() flat: boolean = false;\n  @Input() size: string = '';\n  @Input() block: boolean = false;\n  @Input() floating: boolean = false;\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const colorClass = 'btn-' + this.color;\n    const gradientClass = this.gradient + '-gradient';\n    const outlineClass = 'btn-outline-' + this.color;\n    const flatClass = 'btn-flat';\n    const roundedClass = 'btn-rounded';\n    const sizeClass = 'btn-' + this.size;\n    const blockClass = 'btn-block';\n    const floatingClass = 'btn-floating';\n\n    this.renderer.addClass(this.el.nativeElement, 'btn');\n\n    if (this.color !== '') {\n      this.renderer.addClass(this.el.nativeElement, colorClass);\n    }\n\n    if (this.rounded) {\n      this.renderer.addClass(this.el.nativeElement, roundedClass);\n    }\n\n    if (this.gradient) {\n      if (this.color !== '') {\n        this.renderer.removeClass(this.el.nativeElement, colorClass);\n      }\n      this.renderer.addClass(this.el.nativeElement, gradientClass);\n    }\n\n    if (this.outline) {\n      this.renderer.removeClass(this.el.nativeElement, colorClass);\n      this.renderer.addClass(this.el.nativeElement, outlineClass);\n    }\n\n    if (this.flat) {\n      if (this.color) {\n        this.renderer.removeClass(this.el.nativeElement, colorClass);\n      }\n      if (this.gradient) {\n        this.renderer.removeClass(this.el.nativeElement, gradientClass);\n      }\n      if (this.outline) {\n        this.renderer.removeClass(this.el.nativeElement, outlineClass);\n      }\n      if (this.rounded) {\n        this.renderer.removeClass(this.el.nativeElement, roundedClass);\n      }\n      this.renderer.addClass(this.el.nativeElement, flatClass);\n    }\n\n    if (this.size) {\n      this.renderer.addClass(this.el.nativeElement, sizeClass);\n    }\n\n    if (this.block) {\n      this.renderer.addClass(this.el.nativeElement, blockClass);\n    }\n\n    if (this.floating) {\n      this.renderer.removeClass(this.el.nativeElement, 'btn');\n      this.renderer.addClass(this.el.nativeElement, floatingClass);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ClockPickerComponent } from './timepicker.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [ClockPickerComponent],\n  exports: [ClockPickerComponent]\n})\nexport class TimePickerModule {\n}\n","import {\r\n    Component,\r\n    ViewChild,\r\n    Input,\r\n    ElementRef,\r\n    Renderer2,\r\n    OnInit,\r\n    AfterViewInit,\r\n    forwardRef,\r\n    Inject,\r\n    PLATFORM_ID,\r\n    AfterContentChecked,\r\n    HostListener } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nexport const TIME_PIRCKER_VALUE_ACCESSOT: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ClockPickerComponent),\r\n    multi: true\r\n};\r\n\r\n\r\n@Component({\r\n    selector: 'mdb-time-picker',\r\n    template: \"<div> <div class=\\\"md-form\\\"> <label class=\\\"active\\\">{{ label }}</label> <input [placeholder]=\\\"placeholder\\\" [value]=\\\"endHours\\\" type=\\\"text\\\" class=\\\"form-control timepicker\\\" (click)=\\\"openBtnClicked()\\\" [(ngModel)]=\\\"endHours\\\"> </div> <div class=\\\"clockpicker picker\\\" [hidden]=\\\"!showClock\\\" [ngClass]=\\\"{'picker--opened': showClock, 'darktheme': darktheme}\\\"> <div class=\\\"picker__holder\\\"> <div class=\\\"picker__frame\\\"> <div class=\\\"picker__wrap\\\"> <div class=\\\"picker__box\\\"> <div class=\\\"picker__date-display\\\"> <div class=\\\"clockpicker-display\\\"> <div class=\\\"clockpicker-display-column\\\"> <span class=\\\"clockpicker-span-hours text-primary\\\" [ngClass]=\\\"{'text-primary': showHours}\\\" (click)=\\\"showHoursClock()\\\"> {{ selectedHours.h }}</span>:<span class=\\\"clockpicker-span-minutes\\\" [ngClass]=\\\"{'text-primary': !showHours}\\\" (click)=\\\"showMinutesClock()\\\">{{selectedHours.m }}</span> </div> <div class=\\\"clockpicker-display-column clockpicker-display-am-pm\\\" *ngIf=\\\"twelvehour\\\"> <div class=\\\"clockpicker-span-am-pm\\\">{{ selectedHours.ampm }}</div> </div> </div> </div> <div class=\\\"picker__calendar-container\\\"> <div class=\\\"clockpicker-plate\\\" #plate> <div class=\\\"clockpicker-canvas\\\"> <svg class=\\\"clockpicker-svg\\\" width=\\\"270\\\" height=\\\"270\\\" #svg> <g transform=\\\"translate(135,135)\\\" #g> <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"77.94228634059948\\\" y2=\\\"-45.00000000000001\\\" #hand></line> <circle class=\\\"clockpicker-canvas-fg\\\" r=\\\"5\\\" cx=\\\"95.26279441628824\\\" cy=\\\"-55.000000000000014\\\" #fg></circle> <circle class=\\\"clockpicker-canvas-bg\\\" r=\\\"20\\\" cx=\\\"95.26279441628824\\\" cy=\\\"-55.000000000000014\\\" #bg></circle> <circle class=\\\"clockpicker-canvas-bearing\\\" cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"2\\\" #bearing></circle> </g> </svg> </div> <div class=\\\"clockpicker-dial clockpicker-hours\\\" #hoursPlate [ngClass]=\\\"{'clockpicker-dial-out': !showHours}\\\" [ngStyle]=\\\"{'visibility': !showHours ? 'hidden' : 'visible'}\\\"> <div *ngFor=\\\"let tick of hoursTicks\\\" class=\\\"clockpicker-tick\\\" style=\\\"font-size: 140%;\\\" [ngStyle]=\\\"{'left': tick.left+'px', 'top': tick.top+'px'}\\\" id=\\\"{{ tick.hour }}\\\"> {{ tick.hour }} </div> </div> <div class=\\\"clockpicker-dial clockpicker-minutes\\\" #minutesPlate [ngClass]=\\\"{'clockpicker-dial-out': showHours}\\\" [ngStyle]=\\\"{'visibility': showHours ? 'hidden' : 'visible'}\\\"> <div *ngFor=\\\"let tick of minutesTicks\\\" class=\\\"clockpicker-tick\\\" style=\\\"font-size: 120%;\\\" [ngStyle]=\\\"{'left': tick.left+'px', 'top': tick.top+'px'}\\\"> {{ tick.min }} </div> </div> </div> <div class=\\\"clockpicker-am-pm-block\\\" *ngIf=\\\"twelvehour\\\"> <button type=\\\"button\\\" class=\\\"btn-floating btn-flat clockpicker-button am-button\\\" [ngClass]=\\\"{'active': selectedHours.ampm=='AM'}\\\" (click)=\\\"setAmPm('AM')\\\"> AM </button> <button type=\\\"button\\\" class=\\\"btn-floating btn-flat clockpicker-button pm-button\\\" [ngClass]=\\\"{'active': selectedHours.ampm=='PM'}\\\" (click)=\\\"setAmPm('PM')\\\"> PM </button> </div> </div> <div class=\\\"picker__footer\\\"> <button type=\\\"button\\\" *ngIf=\\\"buttonLabel\\\" class=\\\"btn-flat clockpicker-button\\\" (click)=\\\"closeBtnClicked()\\\"> {{buttonLabel}} </button> <button type=\\\"button\\\" *ngIf=\\\"!buttonLabel\\\" class=\\\"btn-flat clockpicker-button\\\" (click)=\\\"closeBtnClicked()\\\"> Done </button> </div> </div> </div> </div> </div> </div> </div>\",\r\n    providers: [TIME_PIRCKER_VALUE_ACCESSOT]\r\n})\r\n\r\nexport class ClockPickerComponent implements OnInit, AfterViewInit, ControlValueAccessor, AfterContentChecked {\r\n    @ViewChild('hoursPlate') public hoursPlate: ElementRef;\r\n    @ViewChild('minutesPlate') public minutesPlate: ElementRef;\r\n\r\n    @ViewChild('plate') public plate: ElementRef;\r\n    @ViewChild('svg') public svg: ElementRef;\r\n    @ViewChild('g') public g: ElementRef;\r\n    @ViewChild('hand') public hand: ElementRef;\r\n    @ViewChild('fg') public fg: ElementRef;\r\n    @ViewChild('bg') public bg: ElementRef;\r\n    @ViewChild('bearing') public bearing: ElementRef;\r\n\r\n    @Input('twelvehour') public twelvehour = false;\r\n    @Input('darktheme') public darktheme = false;\r\n    @Input('placeholder') public placeholder: String = '';\r\n    @Input('label') public label = '';\r\n    @Input('duration') public duration = 300;\r\n    @Input('showClock') public showClock = false;\r\n    @Input() public buttonLabel: string;\r\n\r\n    isMobile: any = null;\r\n    touchDevice = ('ontouchstart' in document.documentElement);\r\n    showHours = false;\r\n\r\n    public elements = document.getElementsByClassName('clockpicker');\r\n    public elementNumber: any;\r\n\r\n    dialRadius = 135;\r\n    outerRadius = 110;\r\n    innerRadius = 80;\r\n    tickRadius = 20;\r\n    diameter = this.dialRadius * 2;\r\n    isBrowser: any = false;\r\n\r\n    hoursTicks: any = [];\r\n    minutesTicks: any = [];\r\n    selectedHours: any = { 'h': '12', 'm': '00', 'ampm': 'AM' };\r\n    endHours = '';\r\n\r\n\r\n    touchSupported: any = 'ontouchstart' in window;\r\n    mousedownEvent: any = 'mousedown' + (this.touchSupported ? ' touchstart' : '');\r\n    mousemoveEvent: any = 'mousemove' + (this.touchSupported ? ' touchmove' : '');\r\n    mouseupEvent: any = 'mouseup' + (this.touchSupported ? ' touchend' : '');\r\n\r\n    constructor(public elem: ElementRef, public renderer: Renderer2, @Inject(PLATFORM_ID) platformId: string) {\r\n        this.isBrowser = isPlatformBrowser(platformId);\r\n        renderer.listen(this.elem.nativeElement, 'click', (event: any) => {\r\n\r\n            if (this.showClock &&\r\n                event.target &&\r\n                this.elem.nativeElement !== event.target &&\r\n                !this.elem.nativeElement.contains(event.target)\r\n            ) {\r\n                this.showClock = false;\r\n            }\r\n            if (event.target.classList.contains('picker__holder')) {\r\n                this.showClock = false;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @HostListener('touchmove', ['$event']) ontouchmove(event: any) {\r\n        // Rotating Time Picker on mobile\r\n        if (event.target.parentElement.classList.contains('clockpicker-dial')) {\r\n            (this.elem.nativeElement.querySelectorAll('.clockpicker-tick') as any).forEach((element: any) => {\r\n                this.renderer.setStyle(element, 'background-color', 'rgba(0, 150, 136, 0');\r\n            });\r\n            this.mousedown(event);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.generateTick();\r\n        if (this.isBrowser) {\r\n            this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderer.listen(this.elem.nativeElement.querySelector('.clockpicker-plate'), 'mousedown', (event: any) => {\r\n            this.mousedown(event, false);\r\n        });\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        if (this.isBrowser) {\r\n            // Fix for visible date / time picker input when picker plate is visible.\r\n            try {\r\n                const openedPicker: any = document.querySelector('.picker--opened');\r\n                const allPickers: any = document.querySelectorAll('.picker');\r\n                allPickers.forEach((element: any) => {\r\n                    this.renderer.setStyle(element, 'z-index', '0');\r\n                });\r\n                this.renderer.setStyle(openedPicker, 'z-index', '1');\r\n            } catch (error) { }\r\n        }\r\n    }\r\n\r\n    checkDraw() {\r\n        let value;\r\n        const isHours = this.showHours;\r\n        if (isHours) {\r\n            value = parseInt(this.selectedHours.h, 0);\r\n        } else {\r\n            value = parseInt(this.selectedHours.m, 0);\r\n        }\r\n\r\n\r\n        const unit = Math.PI / (isHours ? 6 : 30),\r\n            radian = value * unit,\r\n            radius = isHours && value > 0 && value < 13 ? this.innerRadius : this.outerRadius,\r\n            xd = Math.sin(radian) * radius,\r\n            yd = - Math.cos(radian) * radius;\r\n        this.setHand(xd, yd, false);\r\n\r\n    }\r\n\r\n    mousedown(e: any, space?: any) {\r\n        const offset = this.plate.nativeElement.getBoundingClientRect(),\r\n            isTouch = /^touch/.test(e.type),\r\n            x0 = offset.left + this.dialRadius,\r\n            y0 = offset.top + this.dialRadius,\r\n            dx = (isTouch ? e.touches[0] : e).clientX - x0,\r\n            dy = (isTouch ? e.touches[0] : e).clientY - y0,\r\n            z = Math.sqrt(dx * dx + dy * dy);\r\n        let moved = false;\r\n\r\n        if (space && (z < this.outerRadius - this.tickRadius || z > this.outerRadius + this.tickRadius)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n\r\n        if (this.showHours) {\r\n            this.setHand(dx, dy, true);\r\n        } else {\r\n            this.setHand(dx, dy, false);\r\n        }\r\n\r\n        const mousemoveEventMethod = (event: any) => {\r\n\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            const x = event.clientX - x0,\r\n                y = event.clientY - y0;\r\n            if (!moved && x === dx && y === dy) {\r\n                return;\r\n            }\r\n            moved = true;\r\n\r\n            this.setHand(x, y, false);\r\n        };\r\n\r\n        const mouseupEventMethod = (event: any) => {\r\n            document.removeEventListener(this.mousemoveEvent, mousemoveEventMethod);\r\n            e.preventDefault();\r\n            const x = event.clientX - x0,\r\n                y = event.clientX - y0;\r\n            if ((space || moved) && x === dx && y === dy) {\r\n                this.setHand(x, y, false);\r\n            }\r\n            this.showMinutesClock();\r\n            document.removeEventListener(this.mouseupEvent, mouseupEventMethod);\r\n        };\r\n        document.addEventListener(this.mousemoveEvent, mousemoveEventMethod);\r\n        document.addEventListener('mouseup', mouseupEventMethod);\r\n    }\r\n    hideKeyboard() {\r\n        // this set timeout needed for case when hideKeyborad\r\n        // is called inside of 'onfocus' event handler\r\n        try {\r\n            setTimeout(() => {\r\n                // creating temp field\r\n                // const field = document.createElement('input');\r\n                const field = this.renderer.createElement('input');\r\n                this.renderer.appendChild(this.elem.nativeElement, field);\r\n                const inputReference = this.elem.nativeElement.lastElementChild;\r\n                this.renderer.setAttribute(inputReference, 'type', 'text');\r\n                this.renderer.setAttribute(inputReference, 'type', 'text');\r\n                this.renderer.setStyle(inputReference, 'opacity', '0');\r\n                this.renderer.setStyle(inputReference, '-webkit-user-modify', 'read-write-plaintext-only');\r\n                // // hiding temp field from peoples eyes\r\n                // // -webkit-user-modify is nessesary for Android 4.x\r\n                // adding onfocus event handler for out temp field\r\n                field.onfocus = () => {\r\n                    // this timeout of 200ms is nessasary for Android 2.3.x\r\n                    setTimeout(() => {\r\n\r\n                        this.renderer.setStyle(field, 'display', 'none');\r\n                        setTimeout(() => {\r\n                            this.renderer.removeChild(this.elem.nativeElement, field);\r\n                            document.body.focus();\r\n                        }, 0);\r\n\r\n                    }, 0);\r\n                };\r\n                // focusing it\r\n                field.focus();\r\n\r\n            }, 0);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    openBtnClicked(): void {\r\n        this.showClock = true;\r\n        this.showHours = true;\r\n        this.checkDraw();\r\n        if (this.isMobile) {\r\n            this.hideKeyboard();\r\n        }\r\n\r\n    }\r\n\r\n    closeBtnClicked() {\r\n        const h = this.selectedHours.h;\r\n        const m = this.selectedHours.m;\r\n        const ampm = this.selectedHours.ampm;\r\n\r\n        if (this.twelvehour) {\r\n            this.endHours = h + ':' + m + ampm;\r\n        } else {\r\n            this.endHours = h + ':' + m;\r\n        }\r\n        this.onChangeCb(this.endHours);\r\n        this.onTouchedCb();\r\n        this.showClock = false;\r\n    }\r\n\r\n    setHour(hour: String) {\r\n        this.selectedHours.h = hour;\r\n    }\r\n\r\n    setMinute(min: String) {\r\n        // event.stopPropagation();\r\n        this.selectedHours.m = min;\r\n    }\r\n\r\n    setAmPm(ampm: String) {\r\n        // event.stopPropagation();\r\n        this.selectedHours.ampm = ampm;\r\n    }\r\n\r\n    showHoursClock() {\r\n        this.showHours = true;\r\n        this.checkDraw();\r\n    }\r\n\r\n    showMinutesClock() {\r\n        this.showHours = false;\r\n        this.checkDraw();\r\n    }\r\n\r\n\r\n    generateTick() {\r\n        if (this.twelvehour) {\r\n            for (let i = 1; i < 13; i++) {\r\n                const radian = i / 6 * Math.PI;\r\n                const radius = this.outerRadius;\r\n\r\n                const tick = {\r\n                    'hour': i,\r\n                    'left': this.dialRadius + Math.sin(radian) * radius - this.tickRadius,\r\n                    'top': this.dialRadius - Math.cos(radian) * radius - this.tickRadius,\r\n                };\r\n                this.hoursTicks.push(tick);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 24; i++) {\r\n                const radian = i / 6 * Math.PI;\r\n                const inner = i > 0 && i < 13;\r\n                const radius = inner ? this.innerRadius : this.outerRadius;\r\n                let h;\r\n\r\n                if (i === 0) {\r\n                    h = '0' + i.toString();\r\n                } else {\r\n                    h = i;\r\n                }\r\n\r\n                const tick = {\r\n                    'hour': h,\r\n                    'left': this.dialRadius + Math.sin(radian) * radius - this.tickRadius,\r\n                    'top': this.dialRadius - Math.cos(radian) * radius - this.tickRadius,\r\n                };\r\n                this.hoursTicks.push(tick);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 60; i += 5) {\r\n            const radian = i / 30 * Math.PI;\r\n            let min = i.toString();\r\n            if (i < 10) {\r\n                min = '0' + i.toString();\r\n            }\r\n            const tick = {\r\n                'min': min,\r\n                'left': this.dialRadius + Math.sin(radian) * this.outerRadius - this.tickRadius,\r\n                'top': this.dialRadius - Math.cos(radian) * this.outerRadius - this.tickRadius,\r\n            };\r\n            this.minutesTicks.push(tick);\r\n        }\r\n\r\n    }\r\n\r\n    setHand(x: any, y: any, roundBy5: any) {\r\n        let radian = Math.atan2(x, - y);\r\n        const isHours = this.showHours;\r\n        const unit = Math.PI / (isHours || roundBy5 ? 6 : 30);\r\n        const z = Math.sqrt(x * x + y * y);\r\n        const inner = isHours && z < (this.outerRadius + this.innerRadius) / 2;\r\n        let radius = inner ? this.innerRadius : this.outerRadius;\r\n        let value;\r\n\r\n\r\n        if (this.showHours) {\r\n            value = parseInt(this.selectedHours.h, 0);\r\n        } else {\r\n            value = parseInt(this.selectedHours.m, 0);\r\n        }\r\n\r\n        if (this.twelvehour) {\r\n            radius = this.outerRadius;\r\n        }\r\n\r\n        if (radian < 0) {\r\n            radian = Math.PI * 2 + radian;\r\n        }\r\n\r\n        value = Math.round(radian / unit);\r\n        radian = value * unit;\r\n\r\n        if (this.twelvehour) {\r\n            if (isHours) {\r\n                if (value === 0) {\r\n                    value = 12;\r\n                }\r\n            } else {\r\n                if (roundBy5) {\r\n                    value *= 5;\r\n                }\r\n                if (value === 60) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        } else {\r\n            if (isHours) {\r\n                value = !inner ? value + 12 : value;\r\n                value = value === 24 ? 0 : value;\r\n                value = (inner && value === 0) ? 12 : value;\r\n                value = (!inner && value === 12) ? 0 : value;\r\n            } else {\r\n                if (roundBy5) {\r\n                    value *= 5;\r\n                }\r\n                if (value === 60) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isHours) {\r\n            this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg');\r\n        } else {\r\n            if (value % 5 === 0) {\r\n                this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg');\r\n            } else {\r\n                this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg active');\r\n            }\r\n        }\r\n\r\n        const cx1 = Math.sin(radian) * (radius - this.tickRadius),\r\n            cy1 = - Math.cos(radian) * (radius - this.tickRadius),\r\n            cx2 = Math.sin(radian) * radius,\r\n            cy2 = - Math.cos(radian) * radius;\r\n\r\n        this.hand.nativeElement.setAttribute('x2', cx1);\r\n        this.hand.nativeElement.setAttribute('y2', cy1);\r\n        this.bg.nativeElement.setAttribute('cx', cx2);\r\n        this.bg.nativeElement.setAttribute('cy', cy2);\r\n        this.fg.nativeElement.setAttribute('cx', cx2);\r\n        this.fg.nativeElement.setAttribute('cy', cy2);\r\n\r\n        if (this.showHours) {\r\n            if (value < 10) {\r\n                this.setHour('0' + value.toString());\r\n            } else {\r\n                this.setHour(value.toString());\r\n            }\r\n        } else {\r\n            if (value < 10) {\r\n                this.setMinute('0' + value.toString());\r\n            } else {\r\n                this.setMinute(value.toString());\r\n            }\r\n        }\r\n    }\r\n\r\n    offset(obj: any) {\r\n        let left = 0,\r\n            top = 0;\r\n\r\n        if (obj.offsetParent) {\r\n            do {\r\n                left += obj.offsetLeft;\r\n                top += obj.offsetTop;\r\n            } while (obj = obj.offsetParent);\r\n        }\r\n        return { left, top };\r\n    }\r\n\r\n\r\n\r\n    onChangeCb: (_: any) => void = () => { };\r\n    onTouchedCb: () => void = () => { };\r\n\r\n    writeValue(value: any): void {\r\n        this.endHours = value;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCb = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCb = fn;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {FormsModule} from '@angular/forms';\nimport {MaterialChipsComponent} from './chips.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MaterialChipsComponent],\n  exports: [MaterialChipsComponent]\n})\nexport class MaterialChipsModule {\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MaterialChipsComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'mdb-material-chips',\n  template: \"<div *ngIf=\\\"values && values.length\\\" class=\\\"md-chip-list\\\"  [ngClass]=\\\"focused\\\"> <span *ngFor=\\\"let value of values\\\" class=\\\"md-chip\\\" selected >          {{value}} <i class=\\\"close fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeValue(value)\\\" ></i> </span> <span> <input  [(ngModel)]=\\\"labelToAdd\\\"  (keyup.enter)=\\\"addValue(box.value, $event)\\\" (focus)=\\\"onFocus()\\\"  (focusout)=\\\"focusOutFunction()\\\"   #box /> </span> </div> <div *ngIf=\\\"!values || !values.length\\\"> <input class=\\\"md-chips-input\\\" placeholder=\\\"{{ placeholder }}\\\" #tbox  (keyup.enter)=\\\"addValue(tbox.value, $event)\\\"/> </div>\",\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\n\nexport class MaterialChipsComponent {\n\n  @Input('placeholder') public placeholder = '';\n\n  addAreaDisplayed: boolean;\n  isTagsFocused = false;\n  values: string[];\n  labelToAdd: string;\n  focused: string;\n  selected: string;\n  noop: any;\n\n  @Output() tagsfocusedChange = new EventEmitter();\n  @Output() labelsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Input()\n  get tagsfocused() {\n    return this.isTagsFocused;\n  }\n\n  private onTouchedCallback: () => void = this.noop;\n  private onChangeCallback: (_: any) => void = this.noop;\n  registerOnChange(fn: any) { this.onChangeCallback = fn; }\n  registerOnTouched(fn: any) { this.onTouchedCallback = fn; }\n  constructor() {\n    this.onTouchedCallback = this.onTouchedCallback === undefined ? this.noop : this.onTouchedCallback;\n    this.onChangeCallback = this.onChangeCallback === undefined ? this.noop : this.onChangeCallback;\n  }\n\n  removeValue(value: string) {\n    const index = this.values.indexOf(value, 0);\n    if (index !== undefined) {\n      this.values.splice(index, 1);\n      this.labelsChange.emit(this.values);\n    }\n  }\n\n  addValue(value: string, event: any) {\n    event.preventDefault();\n    if (!value || value.trim() === '') { return; }\n    this.values.push(value);\n    this.labelsChange.emit(this.values);\n    this.labelToAdd = '';\n  }\n\n  writeValue(value: string[]) {\n    if (value !== this.values) {\n      this.values = value;\n    }\n  }\n\n  onFocus() {\n    this.focused = 'md-focused';\n    this.isTagsFocused = true;\n    this.tagsfocusedChange.emit(this.isTagsFocused);\n  }\n  focusOutFunction() {\n    this.focused = '';\n    this.isTagsFocused = false;\n    this.tagsfocusedChange.emit(this.isTagsFocused);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetConfig } from './tabset.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective],\n  exports: [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective]\n})\nexport class TabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: [TabsetConfig]\n    };\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[mdbNgTransclude]'\n})\nexport class NgTranscludeDirective {\n  public viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  public set mdbNgTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  public get mdbNgTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  public constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <template> element as a template for tab heading */\n@Directive({selector: '[mdbTabHeading]'})\nexport class TabHeadingDirective {\n  public templateRef: TemplateRef<any>;\n\n  public constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { Directive, EventEmitter, HostBinding, Input, Output, TemplateRef, ElementRef, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({selector: 'mdb-tab, [mdbTab]'})\nexport class TabDirective implements OnInit {\n  /** tab header text */\n  @Input() public heading: string;\n  /** if true tab can not be activated */\n  @Input() public disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() public removable: boolean;\n  /** if set, will be added to the tab's class atribute */\n  @Input() public customClass: string;\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(active: boolean) {\n\n    if (this.disabled && active || !active) {\n      if (!active) {\n        this.removeClass(this.el.nativeElement, 'show');\n        setTimeout(() => {\n          this._active = active;\n          this.deselect.emit(this);\n        }, 0);\n      }\n      return;\n    }\n\n    setTimeout(() => {\n      this._active = active;\n      this.classAdd(this.el.nativeElement, 'show');\n    }, 0);\n    this.select.emit(this);\n\n    this.tabset.tabs.forEach((mdbTab: TabDirective) => {\n      if (mdbTab !== this) {\n        mdbTab.active = false;\n      }\n    });\n\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() public select: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() public deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed */\n  @Output() public removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') public addClass = true;\n  @HostBinding('class.fade') public test = true;\n\n\n  public headingRef: TemplateRef<any>;\n  public tabset: TabsetComponent;\n  // public el: ElementRef = null;\n  public el: ElementRef | any = null;\n  thus: this;\n  protected _active: boolean;\n\n\n  isBrowser: any = null;\n  public constructor(@Inject(PLATFORM_ID) platformId: string, tabset: TabsetComponent, el: ElementRef) {\n    this.isBrowser = isPlatformBrowser(platformId);\n\n    this.el = el;\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n\n  }\n\n  public ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  protected hasClass(el: any, className: any) {\n    if (el.classList) {\n      return el.classList.contains(className);\n    } else {\n      return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n    }\n  }\n\n  protected classAdd(el: any, className: any) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else if (!this.hasClass(el, className)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  protected removeClass(el: any, className: any) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else if (this.hasClass(el, className)) {\n      const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n      el.className = el.className.replace(reg, ' ');\n    }\n  }\n\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  ViewChildren,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n\nimport { WavesDirective } from './../../free/waves/waves-effect.directive';\nimport { isPlatformBrowser } from '@angular/common';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'mdb-tabset',\n  template: \"<div class=\\\"container-fluid\\\">  <div class=\\\"row\\\"> <div class=\\\"{{ listGetClass }}\\\"> <ul class=\\\"nav {{ buttonClass }}\\\" [ngClass]=\\\"classMap\\\" (click)=\\\"$event.preventDefault()\\\"> <li *ngFor=\\\"let tabz of tabs;let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\" [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (click)=\\\"click($event, i)\\\"> <a #tabEl href=\\\"javascript:void(0);\\\" class=\\\"nav-link waves-light\\\" [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"> <span [mdbNgTransclude]=\\\"tabz.headingRef\\\" [innerHTML]=\\\"tabz.heading\\\"></span> <span *ngIf=\\\"tabz.removable\\\"> <span (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"fa fa-remove ml-2\\\"> </span> </span> </a> </li> </ul> </div> <div class=\\\"{{ tabsGetClass }}\\\"> <div class=\\\"tab-content {{ contentClass }}\\\"> <ng-content></ng-content> </div> </div> </div> </div> \",\n  providers: [WavesDirective]\n})\n\nexport class TabsetComponent implements OnDestroy, OnInit {\n  public tabs: TabDirective[] = [];\n  public classMap: any = {};\n\n  protected isDestroyed: boolean;\n  protected _vertical: boolean;\n  protected _justified: boolean;\n  protected _type: string;\n\n  public listGetClass: String;\n  public tabsGetClass: String;\n\n  isBrowser: any = null;\n  @HostBinding('class.tab-container') public clazz = true;\n\n\n  @Input() buttonClass: String;\n  @Input() contentClass: String;\n  /** if true tabs will be placed vertically */\n\n  @ViewChildren('tabEl', { read: ElementRef }) tabEl: any;\n\n  @Output()\n  showBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  shownBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  hideBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  hiddenBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  getActiveTab: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  public get vertical(): boolean {\n    return this._vertical;\n  }\n  public set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n  public setActiveTab(index: number): void {\n    this.tabs[index - 1].active = true;\n    this.getActiveTab.emit({\n      el: this.tabs[index - 1],\n      activeTabIndex: index - 1\n    });\n  }\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  public get justified(): boolean {\n    return this._justified;\n  }\n  public set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  public get type(): string {\n    return this._type;\n  }\n  public set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  public constructor(@Inject(PLATFORM_ID) platformId: string, config: TabsetConfig, public ripple: WavesDirective) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    Object.assign(this, config);\n  }\n\n  public click(event: any, index: any) {\n    const prev = this.tabEl.toArray()[this.getActive()];\n    const clicked = this.tabEl.toArray()[index];\n\n    this.hideBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n    this.showBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n\n    this.setActiveTab(index + 1);\n    if (this.contentClass !== 'vertical') {\n      this.ripple.el = clicked;\n      this.ripple.click(event);\n    }\n\n    this.hiddenBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n    this.shownBsTab.emit({\n      target: clicked,\n      relatedTarget: prev,\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  // public getActive() {\n  public getActive(): any {\n    const tabs = this.tabs.map((object, index) => {\n      return {\n        index: index,\n        object: object\n      };\n    });\n\n    for (const tab of tabs) {\n      if (tab.object.active) {\n        return tab.index;\n      }\n    }\n  }\n\n  public addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && tab.active !== false;\n  }\n\n  public removeTab(tab: TabDirective): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n\n    tab.removed.emit(tab);\n    this.tabs.splice(index, 1);\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'nav-justified': this.justified,\n      // [`nav-${this.type}`]: true\n    };\n  }\n\n  public listGet() {\n    if (this.vertical) {\n      this.listGetClass = 'col-md-3';\n    } else {\n      this.listGetClass = 'col-md-12';\n    }\n  }\n\n  public tabsGet() {\n    if (this.vertical) {\n      this.tabsGetClass = 'col-md-9';\n    } else {\n      this.tabsGetClass = 'col-md-12';\n    }\n  }\n\n  public getActiveElement(): any {\n    const tabs = this.tabs.map((object, index) => {\n      return {\n        index: index,\n        object: object\n      };\n    });\n\n    for (const tab of tabs) {\n      if (tab.object.active) {\n        return {\n          el: tab.object,\n          activeTabIndex: tab.index\n        };\n      }\n    }\n  }\n\n  public showActiveIndex() {\n    setTimeout(() => {\n      const activeElement = this.getActiveElement();\n      this.getActiveTab.emit(activeElement);\n    }, 0);\n  }\n\n  ngOnInit() {\n    this.listGet();\n    this.tabsGet();\n    this.showActiveIndex();\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[mdbWavesEffect]'\n})\nexport class WavesDirective {\n  el: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.el = el;\n  }\n\n  @HostListener('click', ['$event'])\n  public click(event: any) {\n    // event.stopPropagation();\n\n    if (!this.el.nativeElement.classList.contains('disabled')) {\n\n      const button = this.el.nativeElement;\n      if (!button.classList.contains('waves-effect')) {\n        button.className += ' waves-effect';\n      }\n\n      const xPos = event.clientX - button.getBoundingClientRect().left;\n      const yPos = event.clientY - button.getBoundingClientRect().top;\n\n\n      const tmp = document.createElement('div');\n      tmp.className += 'waves-ripple waves-rippling';\n      const ripple = button.appendChild(tmp);\n\n      const top = yPos + 'px';\n      const left = xPos + 'px';\n\n      tmp.style.top = top;\n      tmp.style.left = left;\n\n      const scale = 'scale(' + ((button.clientWidth / 100) * 3) + ') translate(0,0)';\n\n      tmp.style.webkitTransform = scale;\n      tmp.style.transform = scale;\n      tmp.style.opacity = '1';\n\n      const duration = 750;\n\n      tmp.style.webkitTransitionDuration = duration + 'ms';\n      tmp.style.transitionDuration = duration + 'ms';\n\n\n      this.removeRipple(button, ripple);\n    }\n  }\n\n  removeRipple(button: any, ripple: any) {\n    ripple.classList.remove('waves-rippling');\n\n    setTimeout(() => {\n      ripple.style.opacity = '0';\n\n      setTimeout(() => {\n        button.removeChild(ripple);\n      }, 750);\n    }, 200);\n\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  public type = 'tabs';\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule  } from '@angular/common';\n\nimport { MdbStickyDirective } from './sticky-content.directive';\n\nexport { MdbStickyDirective };\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [MdbStickyDirective],\n  exports: [ MdbStickyDirective ]\n})\n\nexport class StickyContentModule {}\n","'use strict';\n\nimport { Directive, ElementRef, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { computedStyle } from './computed.style';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n@Directive({\n    selector: '[mdbSticky]'\n})\n\nexport class MdbStickyDirective implements OnDestroy, AfterViewInit {\n    @Input() stickyAfter: string;  // css selector to be sticky after\n    isBrowser = false;\n\n    //   el: HTMLElement;\n    el: HTMLElement | any;\n    //   parentEl: HTMLElement;\n    parentEl: HTMLElement | any;\n    // fillerEl: HTMLElement;\n    fillerEl: HTMLElement | any;\n    stickyOffsetTop = 0;\n\n    diff: any;\n    original: any;\n\n    constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n        this.el = this.el = el.nativeElement;\n        this.parentEl = this.el.parentElement;\n        this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n    ngAfterViewInit(): void {\n        this.el.style.boxSizing = 'border-box';\n\n        if (this.stickyAfter) {\n            const cetStickyAfterEl = document.querySelector(this.stickyAfter);\n            if (cetStickyAfterEl) {\n                this.stickyOffsetTop = cetStickyAfterEl.getBoundingClientRect().bottom;\n            }\n        }\n\n        // set the parent relatively positioned\n        const allowedPositions = ['absolute', 'fixed', 'relative'];\n        const parentElPosition = computedStyle(this.parentEl, 'position');\n        if (allowedPositions.indexOf(parentElPosition) === -1) { // inherit, initial, unset\n            this.parentEl.style.position = 'relative';\n        }\n\n        this.diff = {\n            top: this.el.offsetTop - this.parentEl.offsetTop,\n            left: this.el.offsetLeft - this.parentEl.offsetLeft\n        };\n\n        if (this.isBrowser) {\n            const elRect = this.el.getBoundingClientRect();\n            this.el.getBoundingClientRect();\n            this.original = {\n                boundingClientRect: elRect,\n                position: computedStyle(this.el, 'position'),\n                float: computedStyle(this.el, 'float'),\n                top: computedStyle(this.el, 'top'),\n                bottom: computedStyle(this.el, 'bottom'),\n                left: computedStyle(this.el, 'left'),\n                width: computedStyle(this.el, 'width'),\n                offsetTop: this.el.offsetTop,\n                offsetLeft: this.el.offsetLeft,\n                marginTop: parseInt(computedStyle(this.el, 'marginTop'), 10),\n                marginBottom: parseInt(computedStyle(this.el, 'marginBottom'), 10),\n                marginLeft: parseInt(computedStyle(this.el, 'marginLeft'), 10),\n                marginRight: parseInt(computedStyle(this.el, 'marginLeft'), 10)\n            };\n        }\n\n\n        this.attach();\n    }\n\n    ngOnDestroy(): void {\n        this.detach();\n    }\n\n    attach(): void {\n        window.addEventListener('scroll', this.scrollHandler);\n        window.addEventListener('resize', this.scrollHandler);\n    }\n\n    detach(): void {\n        window.removeEventListener('scroll', this.scrollHandler);\n        window.removeEventListener('resize', this.scrollHandler);\n    }\n\n    scrollHandler = () => {\n        // let elRect: ClientRect = this.el.getBoundingClientRect();\n        const parentRect: ClientRect = this.el.parentElement.getBoundingClientRect();\n        const bodyRect: ClientRect = document.body.getBoundingClientRect();\n        let dynProps;\n\n        if (this.original.float === 'right') {\n            const right = bodyRect.right - parentRect.right + this.original.marginRight;\n            dynProps = { right: right + 'px' };\n        } else if (this.original.float === 'left') {\n            const left = parentRect.left - bodyRect.left + this.original.marginLeft;\n            dynProps = { left: left + 'px' };\n        } else {\n            // console.log('parentRect..............', parentRect.width);\n            dynProps = { width: parentRect.width + 'px' };\n        }\n        // console.log('dynProps', dynProps);\n\n        if (this.original.marginTop + this.original.marginBottom +\n            this.original.boundingClientRect.height + this.stickyOffsetTop >= parentRect.bottom) {\n            /**\n            * stikcy element reached to the bottom of the container\n            */\n            // console.log('case 1 (absolute)', parentRect.bottom, this.original.marginBottom);\n            const floatAdjustment =\n                this.original.float === 'right' ? { right: 0 } :\n                    this.original.float === 'left' ? { left: 0 } : {};\n            Object.assign(this.el.style, {\n                position: 'absolute',\n                float: 'none',\n                top: 'inherit',\n                bottom: 0\n            }, dynProps, floatAdjustment);\n        } else if (parentRect.top * -1 + this.original.marginTop + this.stickyOffsetTop > this.original.offsetTop) {\n            /**\n            * stikcy element is in the middle of container\n            */\n            // console.log('case 2 (fixed)', parentRect.top * -1, this.original.marginTop, this.original.offsetTop);\n\n            // if not floating, add an empty filler element, since the original elements becames 'fixed'\n            if (this.original.float !== 'left' && this.original.float !== 'right' && !this.fillerEl) {\n                this.fillerEl = document.createElement('div');\n                this.fillerEl.style.height = this.el.offsetHeight + 'px';\n                this.parentEl.insertBefore(this.fillerEl, this.el);\n            }\n\n            Object.assign(this.el.style, {\n                position: 'fixed', // fixed is a lot smoother than absolute\n                float: 'none',\n                top: this.stickyOffsetTop + 'px',\n                bottom: 'inherit'\n            }, dynProps);\n        } else {\n            /**\n            * stikcy element is in the original position\n            */\n            // console.log('case 3 (original)');\n            if (this.fillerEl) {\n                this.parentEl.removeChild(this.fillerEl); // IE11 does not work with el.remove()\n                this.fillerEl = undefined;\n            }\n            Object.assign(this.el.style, {\n                position: this.original.position,\n                float: this.original.float,\n                top: this.original.top,\n                bottom: this.original.bottom,\n                width: this.original.width,\n                left: this.original.left\n            }, dynProps);\n        }\n    }\n}\n","/**\n * returns coumputed style of given element\n\n */\n// export function computedStyle(element: string | HTMLElement, styleProp: string): string {\n  export function computedStyle(element: string | HTMLElement, styleProp: string): string | any {\n  let el: any;\n  el =  (typeof element === 'string') ? (<HTMLElement>document.querySelector(<string>element)) : element;\n\n  let value: any;\n  const defaultView: any = (el.ownerDocument || document).defaultView;\n\n  // W3C standard way:\n  if (defaultView && defaultView.getComputedStyle) {\n    // sanitize property name to css notation\n    // (hypen separated words eg. font-Size)\n    styleProp = styleProp.replace(/([A-Z])/g, '-$1').toLowerCase();\n    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n  } else if (el['currentStyle']) { // IE\n    // sanitize property name to camelCase\n    styleProp = styleProp.replace(/\\-(\\w)/g, function( letter) {\n      return letter.toUpperCase();\n    });\n    value = el['currentStyle'][styleProp];\n    // convert other units to pixels on IE\n    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n      return (function(val: any) {\n        const oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n        el['runtimeStyle'].left = el['currentStyle'].left;\n        el.style.left = val || 0;\n        val = el.style['pixelLeft'] + 'px';\n        el.style.left = oldLeft;\n        el['runtimeStyle'].left = oldRsLeft;\n        return val;\n      })(value);\n    }\n    return value;\n  }\n}\n","/**\n* Created by sebastianfuss on 03.09.16.\n*/\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {PageScrollService} from './mdb-page-scroll.service';\nimport {PageScrollDirective} from './mdb-page-scroll.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PageScrollDirective],\n  exports: [PageScrollDirective]\n})\nexport class SmoothscrollModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n        ngModule: SmoothscrollModule,\n        providers: [\n            {provide: PageScrollService, useClass: PageScrollService}\n        ]\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Inject,\n  Optional,\n  OnChanges,\n  HostListener\n} from '@angular/core';\nimport {\n  Router,\n  NavigationEnd,\n  NavigationError,\n  NavigationCancel,\n  UrlTree\n} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\n\nimport {Subscription} from 'rxjs';\n\nimport {PageScrollService} from './mdb-page-scroll.service';\nimport {PageScrollInstance} from './mdb-page-scroll.instance';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\nimport {EasingLogic} from './mdb-page-scroll.config';\n\n@Directive({\n  selector: '[mdbPageScroll]'\n})\nexport class PageScrollDirective implements OnChanges, OnDestroy {\n\n  @Input()\n  public routerLink: any;\n\n  @Input()\n  public href: string;\n\n  @Input()\n  // public pageScrollHorizontal: boolean = null;\n  public pageScrollHorizontal: boolean | any = null;\n\n  @Input()\n  // public pageScrollOffset: number = null;\n  public pageScrollOffset: number | any = null;\n\n  @Input()\n  // public pageScrollDuration: number = null;\n  public pageScrollDuration: number | any = null;\n\n  @Input()\n  // public pageScrollSpeed: number = null;\n  public pageScrollSpeed: number | any = null;\n\n  @Input()\n  // public pageScrollEasing: EasingLogic = null;\n  public pageScrollEasing: EasingLogic | any = null;\n\n  @Input()\n  public pageScrollInterruptible: boolean;\n\n  @Input()\n  public pageScrollAdjustHash = false;\n\n  @Input()\n  // public pageScroll: string = null;\n  public pageScroll: string | any = null;\n\n  @Output()\n  pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // private pageScrollInstance: PageScrollInstance;\n  private pageScrollInstance: PageScrollInstance | any;\n  private document: Document;\n\n  constructor(private pageScrollService: PageScrollService, @Optional() private router: Router, @Inject(DOCUMENT) document: any) {\n    this.document = <Document> document;\n  }\n\n  ngOnChanges(): void {\n    // Some inputs changed, reset the pageScrollInstance\n    this.pageScrollInstance = undefined;\n  }\n\n  ngOnDestroy(): void {\n    if (this.pageScrollInstance) {\n        this.pageScrollService.stop(this.pageScrollInstance);\n    }\n    return undefined;\n  }\n\n  // private generatePageScrollInstance(): PageScrollInstance {\n    private generatePageScrollInstance(): PageScrollInstance | any {\n    if (Util.isUndefinedOrNull(this.pageScrollInstance)) {\n      this.pageScrollInstance = PageScrollInstance.newInstance({\n          document: this.document,\n          scrollTarget: this.href,\n          scrollingViews: null,\n          namespace: this.pageScroll,\n          verticalScrolling: !this.pageScrollHorizontal,\n          pageScrollOffset: this.pageScrollOffset,\n          pageScrollInterruptible: this.pageScrollInterruptible,\n          pageScrollEasingLogic: this.pageScrollEasing,\n          pageScrollDuration: this.pageScrollDuration,\n          pageScrollSpeed: this.pageScrollSpeed,\n          pageScrollFinishListener: this.pageScrollFinish\n      });\n    }\n    return this.pageScrollInstance;\n  }\n\n  private pushRouterState() {\n    if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.scrollTarget === 'string'\n        && this.pageScrollInstance.scrollTarget.substr(0, 1) === '#') {\n        // \"Navigate\" to the current route again and this time set the fragment/hash\n        this.router.navigate([], {\n          fragment: <string>this.pageScrollInstance.scrollTarget.substr(1),\n          preserveQueryParams: true\n        });\n    }\n  }\n\n  private scroll(): void {\n    const pageScrollInstance = this.generatePageScrollInstance();\n    this.pushRouterState();\n    this.pageScrollService.start(pageScrollInstance);\n  }\n\n  @HostListener('click') public handleClick(): boolean {\n    if (this.routerLink && this.router !== null && this.router !== undefined) {\n        let urlTree: UrlTree;\n        if (typeof this.routerLink === 'string') {\n            urlTree = this.router.parseUrl(this.routerLink);\n        } else {\n            urlTree = this.router.createUrlTree(this.routerLink);\n        }\n        if (!this.router.isActive(urlTree, true)) {\n            // We need to navigate their first.\n            // Navigation is handled by the routerLink directive\n            // so we only need to listen for route change\n            const subscription: Subscription = <Subscription>this.router.events.subscribe((routerEvent) => {\n                if (routerEvent instanceof NavigationEnd) {\n                    subscription.unsubscribe();\n                    this.scroll();\n                } else if (routerEvent instanceof NavigationError || routerEvent instanceof NavigationCancel) {\n                    subscription.unsubscribe();\n                }\n            });\n            return false; // to preventDefault()\n        }\n    }\n    this.scroll();\n    return false; // to preventDefault()\n  }\n\n}\n","/**\n* Created by sebastianfuss on 29.08.16.\n*/\n\nimport {EventEmitter} from '@angular/core';\n\nimport {EasingLogic, PageScrollConfig, PageScrollTarget, PageScrollingViews} from './mdb-page-scroll.config';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\n\n/**\n* An Interface specifying the possible options to be passed into the newInstance() factory method\n*/\n\nexport interface PageScrollOptions {\n  /**\n   * The document object of the current app\n   */\n  document: Document;\n\n  /**\n   * A specification of the DOM element to scroll to. Either a string referring to an\n   * object id (`#target`) or a HTMLElement that is attached to the document's DOM tree.\n   */\n  scrollTarget: PageScrollTarget;\n\n  /**\n   * Array of HTMLElements or the body object that should be manipulated while performing\n   * the scroll animation.\n   */\n  scrollingViews?: PageScrollingViews[];\n\n  /**\n   * Namespace of the scroll animation\n   */\n  namespace?: string;\n\n  /**\n   * Whether that scroll animation scrolls in vertical direction (true) or\n   * horizontal (false, default value)\n   */\n  verticalScrolling?: boolean;\n\n  /**\n   * Whether the an advanced offset calculation for inline scrollings should be applied\n   */\n  advancedInlineOffsetCalculation?: boolean;\n\n  /**\n   * Offset of target elements location and scroll location\n   */\n  pageScrollOffset?: number;\n\n  /**\n   * Whether the scroll animation should be interruptible\n   */\n  pageScrollInterruptible?: boolean;\n\n  /**\n   * The easing logic to be used\n   */\n  pageScrollEasingLogic?: EasingLogic;\n\n  /**\n   * Duration in milliseconds the scroll animation should last\n   */\n  pageScrollDuration?: number;\n\n  /**\n   * Maximum speed to be used for the scroll animation. Only taken\n   * into account of no pageScrollDuration is provided\n   */\n  pageScrollSpeed?: number;\n\n  /**\n   * A listener to be called whenever the scroll animation stops\n   */\n  pageScrollFinishListener?: EventEmitter<boolean>;\n}\n\n/**\n* Represents a scrolling action\n*/\n\nexport class PageScrollInstance {\n\n  /**\n   * These properties will be set during instance construction and default to their defaults from PageScrollConfig\n   */\n\n  /* A namespace to \"group\" scroll animations together and stopping some does not stop others */\n  private _namespace: string = PageScrollConfig._defaultNamespace;\n  /* The document all the scrolling takes place and scroll targets are located in */\n  private document: Document;\n  /* The DOM elements or similar nodes whose scrollTop/scrollLeft property will be manipulated during scrolling */\n  private _scrollingViews: PageScrollingViews[];\n  private _isInlineScrolling: boolean;\n  /* The target element that should be scrolled into the viewport */\n  private _scrollTarget: PageScrollTarget;\n\n  /* Whether we scroll vertically (true) or horizontally (false) */\n  private _verticalScrolling = PageScrollConfig.defaultIsVerticalScrolling;\n  /* Offset in px that the animation should stop above that target element */\n  private _offset: number = PageScrollConfig.defaultScrollOffset;\n  /* Duration in milliseconds the scroll animation should last */\n  private _duration: number = PageScrollConfig.defaultDuration;\n  /* Speed in \"pixels/second\" to be used when scrolling to the target element */\n  private _speed: number;\n  /* Easing function to manipulate the scrollTop/scrollLeft value over time */\n  private _easingLogic: EasingLogic = PageScrollConfig.defaultEasingLogic;\n  /* Boolean whether the scroll animation should stop on user interruption or not */\n  private _interruptible: boolean = PageScrollConfig.defaultInterruptible;\n  /* The listener that this scroll instance attaches to the body to listen for interrupt events\n   We're keeping a reference to it so we can properly remove it when the animation finishes */\n  private _interruptListener: EventListenerOrEventListenerObject;\n  /* Whether the advanded offset calculation for inline scrolling should be used */\n  private _advancedInlineOffsetCalculation: boolean = PageScrollConfig.defaultAdvancedInlineOffsetCalculation;\n  /* Event emitter to notify the world about the scrolling */\n  private _pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * These properties will be set/manipulated if the scroll animation starts\n   */\n  /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n  private _startScrollPosition = 0;\n  /* The target value of the scrollTop or scrollLeft position for the animation (aka \"the final destination\") */\n  private _targetScrollPosition: number;\n  /* Difference between startScrollPosition and targetScrollPosition. Pre-calculated to minimize computations during animation */\n  private _distanceToScroll: number;\n  /* The timestamp when the animation starts/got started */\n  private _startTime: number;\n  /* The estimate end time of the animation, calculated by startTime + duration */\n  private _endTime: number;\n  /* The duration a started animation takes. This may match the _duration or be adjusted due to the _speed option */\n  private _executionDuration: number;\n  /* Whether an interrupt listener is attached to the body or not */\n  private _interruptListenersAttached = false;\n\n  /* References to the timer instance that is used to perform the scroll animation to be\n   able to clear it on animation end*/\n  private _timer: any = null;\n\n  /*\n   * Factory methods for instance creation\n   */\n  public static simpleInstance(document: Document,\n                               scrollTarget: PageScrollTarget,\n                               namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        namespace\n    });\n  }\n\n//   public static newInstance(options: PageScrollOptions) {\n    public static newInstance(options: PageScrollOptions | any) {\n\n    if (Util.isUndefinedOrNull(options.namespace) || options.namespace.length <= 0) {\n        options.namespace = PageScrollConfig._defaultNamespace;\n    }\n    // const pageScrollInstance: PageScrollInstance = new PageScrollInstance(options.namespace, document);\n    const pageScrollInstance: PageScrollInstance | any = new PageScrollInstance(options.namespace, document);\n\n    if (Util.isUndefinedOrNull(options.scrollingViews) || options.scrollingViews.length === 0) {\n        pageScrollInstance._isInlineScrolling = false;\n        pageScrollInstance._scrollingViews = [document.documentElement, document.body, document.body.parentNode];\n    } else {\n        pageScrollInstance._isInlineScrolling = true;\n        pageScrollInstance._scrollingViews = options.scrollingViews;\n    }\n\n    pageScrollInstance._scrollTarget = options.scrollTarget;\n\n    if (!Util.isUndefinedOrNull(options.verticalScrolling)) {\n        pageScrollInstance._verticalScrolling = options.verticalScrolling;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollOffset)) {\n        pageScrollInstance._offset = options.pageScrollOffset;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollEasingLogic)) {\n        pageScrollInstance._easingLogic = options.pageScrollEasingLogic;\n    }\n\n    if (Util.isUndefinedOrNull(options.pageScrollDuration) && !Util.isUndefinedOrNull(options.pageScrollSpeed)) {\n        // No duration specified in the options, only in this case we use the speed option when present\n        pageScrollInstance._speed = options.pageScrollSpeed;\n        pageScrollInstance._duration = undefined;\n    } else if (!Util.isUndefinedOrNull(options.pageScrollDuration)) {\n        pageScrollInstance._duration = options.pageScrollDuration;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollFinishListener)) {\n        pageScrollInstance._pageScrollFinish = options.pageScrollFinishListener;\n    }\n\n    pageScrollInstance._interruptible = options.pageScrollInterruptible ||\n        (Util.isUndefinedOrNull(options.pageScrollInterruptible) && PageScrollConfig.defaultInterruptible);\n\n    pageScrollInstance._advancedInlineOffsetCalculation = options.advancedInlineOffsetCalculation ||\n        (Util.isUndefinedOrNull(options.advancedInlineOffsetCalculation) &&\n        PageScrollConfig.defaultAdvancedInlineOffsetCalculation);\n\n    return pageScrollInstance;\n  }\n\n  /**\n   * Create a PageScrollInstance representing a scroll animation on the documents body.\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param verticalScrolling\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   **/\n  public static simpleDirectionInstance(document: Document,\n                                        scrollTarget: PageScrollTarget,\n                                        verticalScrolling: boolean,\n                                        namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        namespace,\n        verticalScrolling,\n    });\n  }\n\n  /**\n   * Create a PageScrollInstance representing a scroll animation to the target element where the scrollingView\n   * elements get scrolled (like a div container with fixed height, resulting in scrollbars in it).\n   *\n   * Make sure that the scrollTarget is located inside the scrollingView in the DOM hierarchy, otherwise the\n   * scrollingView will be scrolled to an apparently arbitrary position.\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingView The element that should be scrolled\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   */\n  public static simpleInlineInstance(document: Document,\n                                     scrollTarget: PageScrollTarget,\n                                     scrollingView: PageScrollingViews,\n                                     namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews: [scrollingView],\n        verticalScrolling: true,\n        namespace\n    });\n  }\n\n  /**\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingView The element that should be scrolled\n   * @param verticalScrolling whether the scrolling should be performed in vertical direction (true, default) or horizontal (false)\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   * @deprecated Use {@link newInstance(options: PageScrollOptions)}\n   */\n  public static simpleInlineDirectionInstance(document: Document,\n                                              scrollTarget: PageScrollTarget,\n                                              scrollingView: PageScrollingViews,\n                                              verticalScrolling: boolean,\n                                              namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews: [scrollingView],\n        namespace,\n        verticalScrolling,\n    });\n  }\n\n  /**\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingViews The elements that should be scrolled. Null to use the default elements of document and body.\n   * @param namespace Optional namespace to group scroll animations logically\n   * @param verticalScrolling whether the scrolling should be performed in vertical direction (true, default) or horizontal (false)\n   * @param pageScrollOffset The offset to be attached to the top of the target element or\n   *                          null/undefined to use application default\n   * @param pageScrollInterruptible Whether this scroll animation should be interruptible.\n   *                                 Null/undefined for application default\n   * @param pageScrollEasingLogic Easing function to be used for manipulating the scroll position\n   *                          over time. Null/undefined for application default\n   * @param pageScrollDuration The duration in milliseconds the animation should last.\n   *                            Null/undefined for application default\n   * @param pageScrollFinishListener Listener to be called to notify other parts of the application\n   *                                  that the scroll animation has finishe\n   *\n   */\n  public static advancedInstance(document: Document,\n                                 scrollTarget: PageScrollTarget,\n                                 scrollingViews?: PageScrollingViews[],\n                                 namespace?: string,\n                                 verticalScrolling?: boolean,\n                                 pageScrollOffset?: number,\n                                 pageScrollInterruptible?: boolean,\n                                 pageScrollEasingLogic?: EasingLogic,\n                                 pageScrollDuration?: number,\n                                 pageScrollFinishListener?: EventEmitter<boolean>): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews,\n        namespace,\n        verticalScrolling,\n        pageScrollOffset,\n        pageScrollInterruptible,\n        pageScrollEasingLogic,\n        pageScrollDuration,\n        pageScrollFinishListener\n    });\n  }\n\n  /**\n   * Private constructor, requires the properties assumed to be the bare minimum.\n   * Use the factory methods to create instances:\n   *      {@link PageScrollInstance#simpleInstance}\n   *      {@link PageScrollInstance#newInstance}\n   * @param namespace\n   * @param document\n   */\n  constructor(namespace: string, document: Document) {\n      this._namespace = namespace;\n      this.document = document;\n  }\n\n  public getScrollPropertyValue(scrollingView: any): number {\n    if (!this.verticalScrolling) {\n        return scrollingView.scrollLeft;\n    }\n    return scrollingView.scrollTop;\n  }\n\n  /**\n   * Extract the exact location of the scrollTarget element.\n   *\n   * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n   * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n   *\n   */\n  public extractScrollTargetPosition(): {top: number, left: number} {\n    // let scrollTargetElement: HTMLElement;\n    let scrollTargetElement: HTMLElement | any;\n    if (typeof this._scrollTarget === 'string') {\n        scrollTargetElement = this.document.getElementById((<string>this._scrollTarget).substr(1));\n    } else {\n        scrollTargetElement = <HTMLElement>this._scrollTarget;\n    }\n\n    if (scrollTargetElement === null || scrollTargetElement === undefined) {\n        // Scroll target not found\n        return {top: NaN, left: NaN};\n    }\n\n    if (this._isInlineScrolling) {\n        const position = {top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft};\n        if (this._advancedInlineOffsetCalculation && this.scrollingViews.length === 1) {\n            const accumulatedParentsPos = {top: 0, left: 0};\n            // not named window to make sure we're not getting the global window variable by accident\n            const theWindow = scrollTargetElement.ownerDocument.defaultView;\n            let parentFound = false;\n\n            // Start parent is the immediate parent\n            // let parent = scrollTargetElement.parentElement;\n            let parent: any = scrollTargetElement.parentElement;\n\n            // Iterate upwards all parents\n            while (!parentFound && !Util.isUndefinedOrNull(parent)) {\n                if (theWindow.getComputedStyle(parent).getPropertyValue('position') === 'relative') {\n                    accumulatedParentsPos.top += parent.offsetTop;\n                    accumulatedParentsPos.left += parent.offsetLeft;\n                }\n                // Next iteration\n                parent = parent.parentElement;\n                parentFound = parent === this.scrollingViews[0];\n            }\n            if (parentFound) {\n                // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                position.top += accumulatedParentsPos.top;\n                position.left += accumulatedParentsPos.left;\n            } else {\n                if (PageScrollConfig._logLevel >= 2) {\n                    console.warn('Unable to find nested scrolling targets parent!');\n                }\n            }\n        }\n        return position;\n    }\n\n    return Util.extractElementPosition(this.document, scrollTargetElement);\n  }\n\n  /**\n   * Get the top offset of the scroll animation.\n   * This automatically takes the offset location of the scrolling container/scrolling view\n   * into account (for nested/inline scrolling).\n   *\n   */\n  public getCurrentOffset(): number {\n    return this._offset;\n  }\n\n  /**\n   * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollingViews to the provided value\n   * @param position\n   * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n   *          false if it failed for all ScrollingViews, meaning that we should stop the animation\n   *          (probably because we're at the end of the scrolling region)\n   */\n  public setScrollPosition(position: number): boolean {\n    if (PageScrollConfig._logLevel >= 5) {\n        console.warn('Scroll Position: ' + position);\n    }\n    // Set the new scrollTop/scrollLeft to all scrollingViews elements\n    return this.scrollingViews.reduce((oneAlreadyWorked: any, scrollingView: any) => {\n        const startScrollPropertyValue = this.getScrollPropertyValue(scrollingView);\n        if (scrollingView && !Util.isUndefinedOrNull(startScrollPropertyValue)) {\n            const scrollDistance = Math.abs(startScrollPropertyValue - position);\n\n            // The movement we need to perform is less than 2px\n            // This we consider a small movement which some browser may not perform when\n            // changing the scrollTop/scrollLeft property\n            // Thus in this cases we do not stop the scroll animation, although setting the\n            // scrollTop/scrollLeft value \"fails\"\n            const isSmallMovement = scrollDistance < PageScrollConfig._minScrollDistance;\n\n            if (!this.verticalScrolling) {\n                scrollingView.scrollLeft = position;\n            } else {\n                scrollingView.scrollTop = position;\n            }\n\n            // Return true of setting the new scrollTop/scrollLeft value worked\n            // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n            // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n            // set due to dpi or rounding irregularities)\n            if (isSmallMovement || scrollDistance > Math.abs(this.getScrollPropertyValue(scrollingView) - position)) {\n                return true;\n            }\n        }\n        return oneAlreadyWorked;\n    }, false);\n  }\n\n  /**\n   * Trigger firing a animation finish event\n   * @param value Whether the animation finished at the target (true) or got interrupted (false)\n   */\n  public fireEvent(value: boolean): void {\n    if (this._pageScrollFinish) {\n      this._pageScrollFinish.emit(value);\n    }\n  }\n\n  /**\n   * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n   * will be called if any of the attached events is fired.\n   *\n   * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n   *\n   * @param interruptReporter\n   */\n  public attachInterruptListeners(interruptReporter: InterruptReporter): void {\n    if (this._interruptListenersAttached) {\n        // Detach possibly existing listeners first\n        this.detachInterruptListeners();\n    }\n    this._interruptListener = (event: Event): any => {\n        interruptReporter.report(event, this);\n    };\n    PageScrollConfig._interruptEvents.forEach(\n        (event: string) => this.document.body.addEventListener(event, this._interruptListener)\n    );\n    this._interruptListenersAttached = true;\n  }\n\n  /**\n   * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n   * interrupt\" events.\n   */\n  public detachInterruptListeners(): void {\n    PageScrollConfig._interruptEvents.forEach(\n        (event: string) => this.document.body.removeEventListener(event, this._interruptListener)\n    );\n    this._interruptListenersAttached = false;\n  }\n\n  public get namespace(): string {\n      return this._namespace;\n  }\n\n  get scrollTarget(): PageScrollTarget {\n      return this._scrollTarget;\n  }\n\n  get verticalScrolling(): boolean {\n      return this._verticalScrolling;\n  }\n\n  public get scrollingViews(): any[] {\n      return this._scrollingViews;\n  }\n\n  public set startScrollPosition(value: number) {\n      this._startScrollPosition = value;\n  }\n\n  public get startScrollPosition(): number {\n      return this._startScrollPosition;\n  }\n\n  public set targetScrollPosition(value: number) {\n      this._targetScrollPosition = value;\n  }\n\n  public get targetScrollPosition(): number {\n      return this._targetScrollPosition;\n  }\n\n  public set distanceToScroll(value: number) {\n      this._distanceToScroll = value;\n  }\n\n  public get distanceToScroll(): number {\n      return this._distanceToScroll;\n  }\n\n  get executionDuration(): number {\n      return this._executionDuration;\n  }\n\n  set executionDuration(value: number) {\n      this._executionDuration = value;\n  }\n\n  public get duration(): number {\n      return this._duration;\n  }\n\n  public get speed(): number {\n      return this._speed;\n  }\n\n  public get easingLogic(): EasingLogic {\n      return this._easingLogic;\n  }\n\n  public get interruptible(): boolean {\n      return this._interruptible;\n  }\n\n  public set startTime(value: number) {\n      this._startTime = value;\n  }\n\n  public get startTime(): number {\n      return this._startTime;\n  }\n\n  public set endTime(value: number) {\n      this._endTime = value;\n  }\n\n  public get endTime(): number {\n      return this._endTime;\n  }\n\n  public set timer(value: any) {\n      this._timer = value;\n  }\n\n  public get timer(): any {\n      return this._timer;\n  }\n\n  public get interruptListenersAttached(): boolean {\n      return this._interruptListenersAttached;\n  }\n}\n\n/**\n* An Interface a listener should implement to be notified about possible interrupt events\n* that happened due to user interaction while a scroll animation takes place.\n*\n* The PageScrollService provides an implementation to a PageScrollInstance to be notified\n* about scroll animation interrupts and stop related animations.\n*/\n\nexport interface InterruptReporter {\n  report: (event: Event, pageScrollInstance: PageScrollInstance) => any;\n}\n","import {Injectable, isDevMode} from '@angular/core';\n\nimport {PageScrollConfig} from './mdb-page-scroll.config';\nimport {PageScrollInstance, InterruptReporter} from './mdb-page-scroll.instance';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\n\n@Injectable()\nexport class PageScrollService {\n\n  private static instanceCounter = 0;\n\n  private runningInstances: PageScrollInstance[] = [];\n\n  private onInterrupted: InterruptReporter = {\n    report: (event: Event, pageScrollInstance: PageScrollInstance): void => {\n      if (!pageScrollInstance.interruptible) {\n          // Non-interruptible anyway, so do not stop anything\n          return;\n      }\n\n      let shouldStop = true;\n\n      if (event.type === 'keyup') {\n          // Only stop if specific keys have been pressed, for all others don't stop anything\n          if (PageScrollConfig._interruptKeys.indexOf((<KeyboardEvent>event).keyCode) === -1) {\n              // The pressed key is not in the list of interrupting keys\n              shouldStop = false;\n          }\n      } else if (event.type === 'mousedown') {\n          // For mousedown events we only stop the scroll animation of the mouse has\n          // been clicked inside the scrolling container\n          if (!pageScrollInstance.scrollingViews.some(scrollingView => scrollingView.contains(event.target))) {\n              // Mouse clicked an element which is not inside any of the the scrolling containers\n              shouldStop = false;\n          }\n      }\n\n      if (shouldStop) {\n          this.stopAll(pageScrollInstance.namespace);\n      }\n    }\n  };\n\n  private stopInternal(interrupted: boolean, pageScrollInstance: PageScrollInstance): boolean {\n    const index: number = this.runningInstances.indexOf(pageScrollInstance);\n    if (index >= 0) {\n        this.runningInstances.splice(index, 1);\n    }\n\n    if (pageScrollInstance.interruptListenersAttached) {\n        pageScrollInstance.detachInterruptListeners();\n    }\n\n    if (pageScrollInstance.timer) {\n        // Clear/Stop the timer\n        clearInterval(pageScrollInstance.timer);\n        // Clear the reference to this timer\n        pageScrollInstance.timer = undefined;\n        pageScrollInstance.fireEvent(!interrupted);\n        return true;\n    }\n    return false;\n  }\n\n  /**\n   * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n   *\n   * This is the core functionality of the whole library.\n   *\n   * @param pageScrollInstance\n   */\n  public start(pageScrollInstance: PageScrollInstance): void {\n      // Stop all possibly running scroll animations in the same namespace\n      this.stopAll(pageScrollInstance.namespace);\n\n      if (pageScrollInstance.scrollingViews === null || pageScrollInstance.scrollingViews.length === 0) {\n          // No scrollingViews specified, thus we can't animate anything\n          if (isDevMode()) {\n              console.warn('No scrollingViews specified, this ng2-page-scroll does not know which DOM elements to scroll');\n          }\n          return;\n      }\n\n      let startScrollPositionFound = false;\n      // Reset start scroll position to 0. If any of the scrollingViews has a different one, it will be extracted next\n      pageScrollInstance.startScrollPosition = 0;\n\n      // Get the start scroll position from the scrollingViews (e.g. if the user already scrolled down the content)\n      pageScrollInstance.scrollingViews.forEach((scrollingView: any) => {\n          if (Util.isUndefinedOrNull(scrollingView)) {\n              return;\n          }\n          // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n          // or \"scrollLeft\" property that is not undefined and unequal to 0\n\n          const scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n          if (!startScrollPositionFound && scrollPosition) {\n              // We found a scrollingView that does not have scrollTop or scrollLeft 0\n\n              // Return the scroll position value, as this will be our startScrollPosition\n              pageScrollInstance.startScrollPosition = scrollPosition;\n              startScrollPositionFound = true;\n          }\n      });\n\n      const pageScrollOffset = pageScrollInstance.getCurrentOffset();\n\n      // Calculate the target position that the scroll animation should go to\n\n      const scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n      pageScrollInstance.targetScrollPosition = Math.round(\n          (pageScrollInstance.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n\n      // Calculate the distance we need to go in total\n      pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n\n      if (isNaN(pageScrollInstance.distanceToScroll)) {\n          // We weren't able to find the target position, maybe the element does not exist?\n\n          if (isDevMode()) {\n              // console.log('Scrolling not possible, as we can\\'t find the specified target');\n          }\n          pageScrollInstance.fireEvent(false);\n          return;\n      }\n\n      // We're at the final destination already\n      // OR we need to scroll down but are already at the end\n      // OR we need to scroll up but are at the top already\n      const allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < PageScrollConfig._minScrollDistance;\n\n      // Check how long we need to scroll if a speed option is given\n      // Default executionDuration is the specified duration\n      pageScrollInstance.executionDuration = pageScrollInstance.duration;\n      // Maybe we need to pay attention to the speed option?\n      if (!Util.isUndefinedOrNull(pageScrollInstance.speed) && Util.isUndefinedOrNull(pageScrollInstance.duration)) {\n          // Speed option is set and no duration => calculate duration based on speed and scroll distance\n          pageScrollInstance.executionDuration = pageScrollInstance.distanceToScroll / pageScrollInstance.speed * 1000;\n      }\n\n      // We should go there directly, as our \"animation\" would have one big step\n      // only anyway and this way we save the interval stuff\n      const tooShortInterval = pageScrollInstance.executionDuration <= PageScrollConfig._interval;\n\n      if (allReadyAtDestination || tooShortInterval) {\n          if (isDevMode()) {\n              if (allReadyAtDestination) {\n                  // console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n              } else {\n                  // console.log('Scroll duration shorter that interval length, jumping to target');\n              }\n          }\n          pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n          pageScrollInstance.fireEvent(true);\n          return;\n      }\n\n      // Register the interrupt listeners if we want an interruptible scroll animation\n      if (pageScrollInstance.interruptible ||\n          (Util.isUndefinedOrNull(pageScrollInstance.interruptible) && PageScrollConfig.defaultInterruptible)) {\n          pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n      }\n\n      // Let's get started, get the start time...\n      pageScrollInstance.startTime = new Date().getTime();\n      // .. and calculate the end time (when we need to finish at last)\n      pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n\n      pageScrollInstance.timer = setInterval((_pageScrollInstance: PageScrollInstance) => {\n          // Take the current time\n          const currentTime: number = new Date().getTime();\n\n          // Determine the new scroll position\n          let newScrollPosition: number;\n          let stopNow = false;\n          if (_pageScrollInstance.endTime <= currentTime) {\n              // We're over the time already, so go the targetScrollPosition (aka destination)\n              newScrollPosition = _pageScrollInstance.targetScrollPosition;\n              stopNow = true;\n          } else {\n              // Calculate the scroll position based on the current time using the easing function\n              newScrollPosition = Math.round(_pageScrollInstance.easingLogic.ease(\n                  currentTime - _pageScrollInstance.startTime,\n                  _pageScrollInstance.startScrollPosition,\n                  _pageScrollInstance.distanceToScroll,\n                  _pageScrollInstance.executionDuration));\n          }\n          // Set the new scrollPosition to all scrollingViews elements\n          if (!_pageScrollInstance.setScrollPosition(newScrollPosition)) {\n              // Setting the new scrollTop/scrollLeft value failed for all ScrollingViews\n              // early stop the scroll animation to save resources\n              stopNow = true;\n          }\n\n          // At the end do the internal stop maintenance and fire the pageScrollFinish event\n          // (otherwise the event might arrive at \"too early\")\n          if (stopNow) {\n              this.stopInternal(false, _pageScrollInstance);\n          }\n\n      }, PageScrollConfig._interval, pageScrollInstance);\n\n      // Register the instance as running one\n      this.runningInstances.push(pageScrollInstance);\n  }\n\n  /**\n   * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n   *\n   * @param namespace\n   */\n//   public stopAll(namespace?: string): boolean {\n    public stopAll(namespace?: string | any): boolean {\n    if (this.runningInstances.length > 0) {\n        let stoppedSome = false;\n\n        for (let i = 0; i < this.runningInstances.length; ++i) {\n            const pageScrollInstance = this.runningInstances[i];\n            if (Util.isUndefinedOrNull(namespace) || namespace.length === 0 ||\n                pageScrollInstance.namespace === namespace) {\n                stoppedSome = true;\n                this.stopInternal(true, pageScrollInstance);\n                // Decrease the counter, as we removed an item from the array we iterate over\n                i--;\n            }\n        }\n        return stoppedSome;\n    }\n    return false;\n  }\n\n  public stop(pageScrollInstance: PageScrollInstance): boolean {\n      return this.stopInternal(true, pageScrollInstance);\n  }\n\n  constructor() {\n      if (PageScrollService.instanceCounter > 0 && isDevMode()) {\n          console.warn('An instance of PageScrollService already exists, usually ' +\n              'including one provider should be enough, so double check.');\n      }\n      PageScrollService.instanceCounter++;\n  }\n}\n","export abstract class EasingLogic {\n  /**\n  * Examples may be found at https://github.com/gdsmith/jquery.easing/blob/master/jquery.easing.js\n  * or http://gizma.com/easing/\n  * @param t current time\n  * @param b beginning value\n  * @param c change In value\n  * @param d duration\n  */\n  public abstract ease(t: number, b: number, c: number, d: number): number;\n}\n\n\nexport declare type PageScrollTarget = HTMLElement | string;\n\nexport declare type PageScrollingViews = HTMLElement | Document | HTMLBodyElement | Node;\n// @dynamic\nexport class PageScrollConfig {\n\n  /**\n  * The number of milliseconds to wait till updating the scroll position again.\n  * Small amounts may produce smoother animations but require more processing power.\n  */\n  public static _interval = 10;\n\n  /**\n  * The amount of pixels that need to be between the current scrollTop/scrollLeft position\n  * and the target position the cause a scroll animation. In case distance is below\n  * this threshold, an immediate jump will be performed.\n  * Due to dpi or rounding irregularities in browsers floating point numbers for scrollTop/scrollLeft values\n  * are possible, making a === comparison of current scrollTop or scrollLeft and target scrollPosition error-prone.\n  */\n  public static _minScrollDistance = 2;\n\n  /**\n  * Name of the default namespace.\n  */\n  public static _defaultNamespace = 'default';\n\n  /**\n  * Whether by default the scrolling should happen in vertical direction (by manipulating the scrollTop property)\n  * (= true; default) or in horizontal direction (by manipulating the scrollLeft property) (= false\n  */\n  public static defaultIsVerticalScrolling = true;\n\n  /**\n  * How many console logs should be emitted.\n  * 0: None\n  * 2: If animation could not be started due to missing target, \"already at destination\" or similar reasons\n  * 5: All scroll position values that get set\n  */\n  public static _logLevel = 2;\n\n  /**\n  * The duration how long a scrollTo animation should last by default.\n  * May be overridden using the page-scroll-duration attribute on a single ng2PageScroll instance.\n  */\n  public static defaultDuration = 1250;\n\n  /**\n  * The distance in pixels above scroll target where the animation should stop. Setting a positive number results in\n  * the scroll target being more in the middle of the screen, negative numbers will produce scrolling \"too far\"\n  */\n  public static defaultScrollOffset = 0;\n\n  /**\n  * Whether by default for inline scroll animations the advanced offset calculation should take place (true) or\n  * not (false). Default is false.\n  * The advanced offset calculation will traverse the DOM tree upwards, starting at the scrollTarget, until it finds\n  * the scrollingView container element. Along the way the offset positions of the relative positioned\n  * (position: relative) elements will be taken into account for calculating the target elements position.\n  */\n  public static defaultAdvancedInlineOffsetCalculation = false;\n\n  /**\n  * The events that are listened to on the body to decide whether a scroll animation has been interfered/interrupted by the user\n  */\n  public static _interruptEvents: string[] = ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'];\n\n  /**\n  * The keys that are considered to interrupt a scroll animation (mainly the arrow keys). All other key presses will not stop the\n  * scroll animation.\n  */\n  public static _interruptKeys: number[] = [33, 34, 35, 36, 38, 40];\n\n  /**\n  * Whether a scroll animation should be interruptible by user interaction (true) or not (false). If the user performs an\n  * interrupting event while a scroll animation takes place, the scroll animation stops.\n  */\n  public static defaultInterruptible = true;\n\n  private static _easingLogic: EasingLogic = {\n    ease: (t: number, b: number, c: number, d: number): number => {\n      // Linear easing\n      return c * t / d + b;\n    }\n  };\n\n  // Getter and setter to avoid auto completion to suggest calling the method\n  public static get defaultEasingLogic(): EasingLogic {\n    return PageScrollConfig._easingLogic;\n  }\n\n  public static set defaultEasingLogic(easingLogic: EasingLogic) {\n    PageScrollConfig._easingLogic = easingLogic;\n  }\n\n}\n","/**\n * Created by sebastianfuss on 02.09.16.\n */\n\nexport class PageScrollUtilService {\n\n  /**\n   * Util method to check whether a given variable is either undefined or null\n   * @param variable\ntrue the variable is undefined or null\n   */\n  public static isUndefinedOrNull(variable: any): boolean {\n    return (typeof variable === 'undefined') || variable === undefined || variable === null;\n  }\n\n  public static extractElementPosition(document: Document, scrollTargetElement: HTMLElement): { top: number, left: number } {\n\n    const body = document.body;\n    const docEl = document.documentElement;\n\n    // const windowPageYOffset: number = document.defaultView && document.defaultView.pageYOffset || undefined;\n    const windowPageYOffset: number | any = document.defaultView && document.defaultView.pageYOffset as any || undefined;\n    // const windowPageXOffset: number = document.defaultView && document.defaultView.pageXOffset || undefined;\n    const windowPageXOffset: number | any = document.defaultView && document.defaultView.pageXOffset as any || undefined;\n\n    const scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n\n    if (PageScrollUtilService.isUndefinedOrNull(scrollTargetElement)) {\n      // No element found, so return the current position to not cause any change in scroll position\n      return { top: scrollTop, left: scrollLeft };\n    }\n    const box = scrollTargetElement.getBoundingClientRect();\n\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n\n    return { top: Math.round(top), left: Math.round(left) };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidenavComponent } from './sidenav.component';\n\n@NgModule({\n  declarations: [\n    SidenavComponent,\n  ],\n  exports: [\n    SidenavComponent\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class SidenavModule { }\n","import {\n  Component,\n  ViewChild,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  HostListener,\n  PLATFORM_ID,\n  Inject,\n  OnDestroy\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'mdb-sidenav, mdb-side-nav',\n  template: \"<ul #sidenav id=\\\"slide-out\\\" class=\\\"{{ class }} side-nav\\\" > <ng-content></ng-content> <!-- <div class=\\\"sidenav-bg mask-strong\\\"></div>     --> </ul> <div (click)=\\\"hide()\\\" (touchstart)=\\\"hide()\\\" #overlay id=\\\"sidenav-overlay\\\" style=\\\"display: none;\\\"></div>\"\n})\n\nexport class SidenavComponent implements AfterViewInit, OnDestroy {\n  public windwosWidth: number;\n  public shown: boolean;\n\n  public isBrowser: any = false;\n  @Input() public class: string;\n  @Input() public fixed = true;\n  @Input() sidenavBreakpoint: any;\n  @ViewChild('sidenav') public sideNav: ElementRef;\n  @ViewChild('overlay') public overlay: any;\n\n  constructor(@Inject(PLATFORM_ID) platformId: string, public el: ElementRef,\n    public renderer: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngAfterViewInit() {\n    if (this.isBrowser) {\n      // pobraneie szerokosci okna po init\n      this.windwosWidth = window.innerWidth;\n\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          this.renderer.addClass(document.body, 'fixed-sn');\n\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.addClass(document.body, 'hidden-sn');\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n        }\n      } else {\n        if (this.fixed) {\n          this.renderer.addClass(document.body, 'fixed-sn');\n\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.addClass(document.body, 'hidden-sn');\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n        }\n      }\n\n    }\n  }\n\n  @HostListener('window:resize')\n  windwosResize() {\n    if (this.isBrowser) {\n      this.windwosWidth = window.innerWidth;\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n\n          if (this.windwosWidth > +this.sidenavBreakpoint && this.shown) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          } else if (this.windwosWidth > +this.sidenavBreakpoint) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          }\n        } else {\n          if (this.windwosWidth > +this.sidenavBreakpoint) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.hideOverlay();\n            this.setShown(false);\n          }\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n\n          if (this.windwosWidth > 1440 && this.shown) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          } else if (this.windwosWidth > 1440) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          }\n        } else {\n          if (this.windwosWidth > 1440) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.hideOverlay();\n            this.setShown(false);\n          }\n        }\n      }\n\n    }\n  }\n\n  show() {\n    if (this.isBrowser) {\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n            this.showOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n          this.setShown(true);\n          this.showOverlay();\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n            this.showOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n          this.setShown(true);\n          this.showOverlay();\n        }\n      }\n    }\n\n  }\n\n  hide() {\n    if (this.isBrowser) {\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n            this.hideOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n          this.hideOverlay();\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n            this.hideOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n          this.hideOverlay();\n        }\n      }\n\n    }\n  }\n\n  toggle() {\n    if (this.shown) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  showOverlay() {\n    this.renderer.setStyle(this.overlay.nativeElement, 'display', 'block');\n    setTimeout(() => {\n      this.renderer.setStyle(this.overlay.nativeElement, 'opacity', '1');\n    }, 0);\n  }\n\n  hideOverlay() {\n    this.renderer.setStyle(this.overlay.nativeElement, 'opacity', '0');\n    setTimeout(() => {\n      this.renderer.setStyle(this.overlay.nativeElement, 'display', 'none');\n    }, 200);\n  }\n\n  setShown(value: boolean) {\n    setTimeout(() => {\n      this.shown = value;\n    }, 510);\n  }\n\n  ngOnDestroy() {\n    if (document.body.classList.contains('hidden-sn')) {\n      this.renderer.removeClass(document.body, 'hidden-sn');\n    } else if (document.body.classList.contains('fixed-sn')) {\n      this.renderer.removeClass(document.body, 'fixed-sn');\n    }\n  }\n\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nexport { BarComponent } from './bar.component';\nexport { ProgressDirective } from './progress.directive';\nexport { ProgressbarComponent } from './progressbar.component';\nexport { ProgressbarModule } from './progressbar.module';\nexport { ProgressbarConfigComponent } from './progressbar.config.component';\nexport { ProgressSpinnerComponent } from './progress-spinner.component';\nimport { ProgressbarModule } from './progressbar.module';\n\nimport { MdProgressSpinnerModule } from './progress-spinner-module/index';\nimport { MdProgressBarModule } from './progress-bars-module/index';\n\n\nconst MATERIAL_MODULES = [\n  MdProgressBarModule,\n  MdProgressSpinnerModule,\n  ProgressbarModule\n];\n\n@NgModule({\n  imports: [\n  MdProgressBarModule.forRoot(),\n  MdProgressSpinnerModule.forRoot(),\n  ProgressbarModule.forRoot()\n  ],\n  exports: MATERIAL_MODULES,\n})\n\nexport class PreloadersModule { }\n\n/** @deprecated */\n@NgModule({\n  imports: MATERIAL_MODULES,\n  exports: MATERIAL_MODULES,\n})\nexport class ProgressBars {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {ngModule: PreloadersModule};\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressBarComponent } from './progressbar.component';\n\nexport { ProgressBarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ProgressBarComponent],\n  declarations: [ProgressBarComponent],\n})\nexport class MdProgressBarModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdProgressBarModule,\n      providers: []\n    };\n  }\n}\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  MdProgressSpinnerComponent,\n  MdSpinnerComponent,\n  MdProgressSpinnerCssMatStylerDirective,\n} from './progress-spinner.component';\n\nimport { ProgressSpinnerComponent } from '../progress-spinner.component';\n\n\n@NgModule({\n  exports: [\n    MdProgressSpinnerComponent,\n    MdSpinnerComponent,\n    MdProgressSpinnerCssMatStylerDirective,\n    ProgressSpinnerComponent\n  ],\n  declarations: [\n    MdProgressSpinnerComponent,\n    MdSpinnerComponent,\n    MdProgressSpinnerCssMatStylerDirective,\n    ProgressSpinnerComponent\n  ],\n})\n\nclass MdProgressSpinnerModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdProgressSpinnerModule,\n      providers: []\n    };\n  }\n}\n\nexport { MdProgressSpinnerModule };\nexport {\n  ProgressSpinnerMode,\n  MdProgressSpinnerCssMatStylerDirective,\n  MdProgressSpinnerComponent,\n  MdSpinnerComponent\n} from './progress-spinner.component';\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressDirective } from './progress.directive';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfigComponent } from './progressbar.config.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ProgressDirective, BarComponent, ProgressbarComponent],\n  exports: [ProgressDirective, BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ProgressbarModule, providers: [ProgressbarConfigComponent]};\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ProgressbarConfigComponent } from './progressbar.config.component';\n\n@Component({\n  selector: 'mdb-progressbar, mdb-progress',\n  template: \"<div mdbProgress [animate]=\\\"animate\\\" [max]=\\\"max\\\"> <mdb-bar [type]=\\\"type\\\" [value]=\\\"value\\\"> <ng-content></ng-content> </mdb-bar> </div> \"\n})\nexport class ProgressbarComponent {\n    /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  @Input() public animate: boolean;\n  /** maximum total value of progress element */\n  @Input() public max: number;\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() public type: string;\n  /** current value of progress bar */\n  @Input() public value: number;\n\n  public constructor(config: ProgressbarConfigComponent) {\n    Object.assign(this, config);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfigComponent {\n  /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  public animate: Boolean = true;\n  /** maximum total value of progress element */\n  public max = 100;\n}\n","import { Component, Input, ElementRef, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n    selector: 'mdb-spinner',\n    template: \"<div class=\\\"preloader-wrapper active  {{spinnerType}}\\\"> <mdb-Spinners mdbSpinners mode=\\\"indeterminate\\\"></mdb-Spinners> </div>\"\n})\nexport class ProgressSpinnerComponent implements AfterViewInit {\n    el: ElementRef;\n    addClass: String = 'spinner-blue-only';\n    isBrowser = false;\n    @Input() spinnerType = '';\n    @Input() spinnerColor = 'rainbow';\n\n    constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.el = el;\n    }\n\n    ngAfterViewInit() {\n        const hostElem = this.el.nativeElement;\n        const colorClass = this.spinnerColor;\n        this.addClass = 'spinner-rainbow';\n\n        switch (colorClass) {\n            case 'green':\n                this.addClass = 'spinner-green-only';\n                break;\n            case 'blue':\n                this.addClass = 'spinner-blue-only';\n                break;\n            case 'yellow':\n                this.addClass = 'spinner-yellow-only';\n                break;\n            case 'red':\n                this.addClass = 'spinner-red-only';\n                break;\n            case 'rainbow':\n                this.addClass = 'spinner-rainbow spinner-blue-only mat-progress-spinner';\n                this.spinerRun();\n                break;\n        }\n        hostElem.children[0].children[0].className += ' ' + this.addClass;\n    }\n\n    spinerRun() {\n        let counter = 0;\n        const hostElem = this.el.nativeElement;\n        if (this.isBrowser) {\n            setInterval(() => {\n                switch (counter) {\n                    case 0:\n                        this.addClass = 'spinner-red-only mat-progress-spinner ';\n                        break;\n                    case 1:\n                        this.addClass = 'spinner-yellow-only mat-progress-spinner';\n                        break;\n                    case 2:\n                        this.addClass = 'spinner-blue-only mat-progress-spinner';\n                        break;\n                    case 3:\n                        this.addClass = 'spinner-green-only mat-progress-spinner';\n                        break;\n                }\n\n                hostElem.children[0].children[0].className = ' ' + this.addClass;\n                if (counter < 3) {\n                    counter++;\n                } else {\n                    counter = 0;\n                }\n            }, 1333);\n        }\n    }\n}\n","import { Component, Host, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { ProgressDirective } from './progress.directive';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'mdb-bar',\n  template: \"<div class=\\\"progress-bar\\\" style=\\\"min-width: 0;\\\" role=\\\"progressbar\\\" [ngClass]=\\\"type && 'progress-bar-' + type\\\" [ngStyle]=\\\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuenow]=\\\"value\\\" [attr.aria-valuetext]=\\\"percent.toFixed(0) + '%'\\\" [attr.aria-valuemax]=\\\"max\\\"> <ng-content></ng-content> </div> \"\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  public max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() public type: string;\n  /** current value of progress bar */\n  @Input()\n  public get value(): number {\n    return this._value;\n  }\n\n  public set value(v: number) {\n    if (!v && v !== 0) {\n        return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  public percent = 0;\n  public transition: string;\n  public progress: ProgressDirective;\n\n  protected _value: number;\n\n  public constructor(@Host() progress: ProgressDirective) {\n    this.progress = progress;\n  }\n\n  public ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  public ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  public recalculatePercentage(): void {\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\n\n    const totalPercentage = this.progress.bars.reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n    }, 0);\n\n    if (totalPercentage > 100) {\n        this.percent -= totalPercentage - 100;\n    }\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\n\n// todo: progress element conflict with bootstrap.css\n// todo: need hack: replace host element with div\n@Directive({selector: 'mdbProgress, [mdbProgress]'})\nexport class ProgressDirective  {\n    /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  @Input() public animate: boolean;\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  public get max(): number {\n    return this._max;\n  }\n\n  public set max(v: number) {\n  this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n        bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') public addClass = true;\n\n  public bars: any[] = [];\n\n  protected _max = 100;\n\n  public addBar(bar: BarComponent): void {\n    if (!this.animate) {\n    bar.transition = 'none';\n    }\n    this.bars.push(bar);\n  }\n\n  public removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n    Component,\n    HostBinding,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    Input,\n    ElementRef,\n    NgZone,\n    Renderer2, Directive\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n// TODO(josephperrott): Benchpress tests.\n\n/** A single degree in radians. */\nconst DEGREE_IN_RADIANS = Math.PI / 180;\n/** Duration of the indeterminate animation. */\nconst DURATION_INDETERMINATE = 667;\n/** Duration of the indeterminate animation. */\nconst DURATION_DETERMINATE = 225;\n/** Start animation value of the indeterminate animation */\nconst startIndeterminate = 3;\n/** End animation value of the indeterminate animation */\nconst endIndeterminate = 80;\n/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\nconst MAX_ANGLE = 359.99 / 100;\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\n\ntype EasingFn = (currentTime: number, startValue: number,\n    changeInValue: number, duration: number) => number;\n\n/**\n* Directive whose purpose is to add the mat- CSS styling to this selector.\n* @docs-private\n*/\n@Directive({\n    selector: '[mdbSpinners], mat-progress-spinner'\n})\nexport class MdProgressSpinnerCssMatStylerDirective {\n    @HostBinding('class.mat-progress-spinner') true: any;\n}\n\n\n/**\n* <md-progress-spinner> component.\n*/\n@Component({\n    selector: 'mdb-Spinners, mat-progress-spinner',\n    template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg>\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MdProgressSpinnerComponent implements OnDestroy {\n    /** The id of the last requested animation. */\n    private _lastAnimationId = 0;\n\n    /** The id of the indeterminate interval. */\n    private _interdeterminateInterval: any;\n\n    /** The SVG <path> node that is used to draw the circle. */\n    private _path: SVGPathElement;\n\n    private _mode: ProgressSpinnerMode = 'determinate';\n    private _value: number;\n    private _color = 'primary';\n\n    isBrowser: any = false;\n    @Inject(PLATFORM_ID) platformId: string;\n    /**\n    * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n    * because voiceover does not report the progress indicator as indeterminate if the aria min\n    * and/or max value are number values.\n    */\n    get _ariaValueMin() {\n        return this.mode === 'determinate' ? 0 : null;\n    }\n\n    get _ariaValueMax() {\n        return this.mode === 'determinate' ? 100 : null;\n    }\n\n    /** @docs-private */\n    get interdeterminateInterval() {\n        return this._interdeterminateInterval;\n    }\n    /** @docs-private */\n    set interdeterminateInterval(interval) {\n        clearInterval(this._interdeterminateInterval);\n        this._interdeterminateInterval = interval;\n    }\n\n    /**\n    * Clean up any animations that were running.\n    */\n    ngOnDestroy() {\n        this._cleanupIndeterminateAnimation();\n    }\n\n    /** The color of the progress-spinner. Can be primary, accent, or warn. */\n    @Input()\n    get color(): string { return this._color; }\n    set color(value: string) {\n        this._updateColor(value);\n    }\n\n    /** Value of the progress circle. It is bound to the host as the attribute aria-valuenow. */\n    @Input()\n    @HostBinding('attr.aria-valuenow')\n    get value(): any {\n        if (this.mode === 'determinate') {\n            return this._value;\n        }\n        return;\n    }\n    set value(v: number | any) {\n        if (v != null && this.mode === 'determinate') {\n            const newValue = clamp(v);\n            this._animateCircle(this.value || 0, newValue);\n            this._value = newValue;\n        }\n    }\n\n    /**\n    * Mode of the progress circle\n    *\n    * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n    * mode is bound to the host as the attribute host.\n    */\n    @HostBinding('attr.mode')\n    @Input()\n    get mode() {\n        return this._mode;\n    }\n    set mode(mode: ProgressSpinnerMode) {\n        if (mode !== this._mode) {\n            if (mode === 'indeterminate') {\n                this._startIndeterminateAnimation();\n            } else {\n                this._cleanupIndeterminateAnimation();\n                this._animateCircle(0, this._value);\n            }\n            this._mode = mode;\n        }\n    }\n\n    constructor(\n        private _ngZone: NgZone,\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2,\n        @Inject(PLATFORM_ID) platformId?: string | any\n    ) {\n        this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n\n    /**\n    * Animates the circle from one percentage value to another.\n    *\n    * @param animateFrom The percentage of the circle filled starting the animation.\n    * @param animateTo The percentage of the circle filled ending the animation.\n    * @param ease The easing function to manage the pace of change in the animation.\n    * @param duration The length of time to show the animation, in milliseconds.\n    * @param rotation The starting angle of the circle fill, with 0° represented at the top center\n    *    of the circle.\n    */\n    private _animateCircle(animateFrom: number, animateTo: number, ease: EasingFn = linearEase,\n        duration = DURATION_DETERMINATE, rotation = 0): void {\n\n        const id = ++this._lastAnimationId;\n        const startTime = Date.now();\n        const changeInValue = animateTo - animateFrom;\n\n        // No need to animate it if the values are the same\n        if (animateTo === animateFrom) {\n            this._renderArc(animateTo, rotation);\n        } else {\n            const animation = () => {\n                const elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n\n                this._renderArc(\n                    ease(elapsedTime, animateFrom, changeInValue, duration),\n                    rotation\n                );\n\n                // Prevent overlapping animations by checking if a new animation has been called for and\n                // if the animation has lasted longer than the animation duration.\n                if (id === this._lastAnimationId && elapsedTime < duration) {\n                    requestAnimationFrame(animation);\n                }\n            };\n\n            // Run the animation outside of Angular's zone, in order to avoid\n            // hitting ZoneJS and change detection on each frame.\n            this._ngZone.runOutsideAngular(animation);\n        }\n    }\n\n\n    /**\n    * Starts the indeterminate animation interval, if it is not already running.\n    */\n    private _startIndeterminateAnimation(): void {\n        let rotationStartPoint = 0;\n        let start = startIndeterminate;\n        let end = endIndeterminate;\n        const duration = DURATION_INDETERMINATE;\n        const animate = () => {\n            this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n            rotationStartPoint = (rotationStartPoint + end) % 100;\n            const temp = start;\n            start = -end;\n            end = -temp;\n        };\n\n        if (this.isBrowser) {\n            if (!this.interdeterminateInterval) {\n                this._ngZone.runOutsideAngular(() => {\n                    this.interdeterminateInterval = setInterval(animate, duration + 50, 0, false);\n                    animate();\n                });\n            }\n        }\n\n    }\n\n\n    /**\n    * Removes interval, ending the animation.\n    */\n    private _cleanupIndeterminateAnimation(): void {\n        this.interdeterminateInterval = null;\n    }\n\n    /**\n    * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n    * DOM attribute on the `<path>`.\n    */\n    private _renderArc(currentValue: number, rotation = 0): void {\n        // Caches the path reference so it doesn't have to be looked up every time.\n        const path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n\n        // Ensure that the path was found. This may not be the case if the\n        // animation function fires too early.\n        if (path) {\n            path.setAttribute('d', getSvgArc(currentValue, rotation));\n        }\n    }\n\n    /**\n    * Updates the color of the progress-spinner by adding the new palette class to the element\n    * and removing the old one.\n    */\n    private _updateColor(newColor: string): void {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    }\n\n    /** Sets the given palette class on the component element. */\n    private _setElementColor(color: string, isAdd: boolean) {\n        if (color != null && color !== '') {\n            // this._renderer.setElementClass(this._elementRef.nativeElement, `mat-${color}`, isAdd);\n            if (isAdd) {\n                this._renderer.addClass(this._elementRef.nativeElement, `mat-${color}`);\n            }\n        }\n    }\n}\n\n\n/**\n * <md-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-spinner> instance.\n */\n@Component({\n    selector: 'mdb-spinners, mat-spinner, mdb-progress-spinner',\n    template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg>\",\n    styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; transition: stroke .3s cubic-bezier(.35, 0, .25, 1); } :host[mode=indeterminate] svg { animation-duration: 5.25s, 2.887s; animation-name: mat-progress-spinner-sporadic-rotate, mat-progress-spinner-linear-rotate; animation-timing-function: cubic-bezier(.35, 0, .25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes mat-progress-spinner-linear-rotate { 0% { transform: rotate(0) } 100% { transform: rotate(360deg) } } @keyframes mat-progress-spinner-sporadic-rotate { 12.5% { transform: rotate(135deg) } 25% { transform: rotate(270deg) } 37.5% { transform: rotate(405deg) } 50% { transform: rotate(540deg) } 62.5% { transform: rotate(675deg) } 75% { transform: rotate(810deg) } 87.5% { transform: rotate(945deg) } 100% { transform: rotate(1080deg) } }\"],\n})\n\nexport class MdSpinnerComponent extends MdProgressSpinnerComponent implements OnDestroy {\n\n    @HostBinding('class.mat-spinner') true: any;\n\n    constructor(elementRef: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n        super(ngZone, elementRef, renderer);\n        this.mode = 'indeterminate';\n    }\n\n    ngOnDestroy() {\n        // The `ngOnDestroy` from `MdProgressSpinner` should be called explicitly, because\n        // in certain cases Angular won't call it (e.g. when using AoT and in unit tests).\n        super.ngOnDestroy();\n    }\n}\n\n\n/**\n* Module functions.\n*/\n\n/** Clamps a value to be between 0 and 100. */\nfunction clamp(v: number) {\n    return Math.max(0, Math.min(100, v));\n}\n\n\n/**\n* Converts Polar coordinates to Cartesian.\n*/\nfunction polarToCartesian(radius: number, pathRadius: number, angleInDegrees: number) {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n\n    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n\n\n/**\n* Easing function for linear animation.\n*/\nfunction linearEase(currentTime: number, startValue: number,\n    changeInValue: number, duration: number) {\n    return changeInValue * currentTime / duration + startValue;\n}\n\n\n/**\n * Easing function to match material design indeterminate animation.\n */\nfunction materialEase(currentTime: number, startValue: number,\n    changeInValue: number, duration: number) {\n    const time = currentTime / duration;\n    const timeCubed = Math.pow(time, 3);\n    const timeQuad = Math.pow(time, 4);\n    const timeQuint = Math.pow(time, 5);\n    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n\n\n/**\n* Determines the path value to define the arc.  Converting percentage values to to polar\n* coordinates on the circle, and then to cartesian coordinates in the viewport.\n*\n* @param currentValue The current percentage value of the progress circle, the percentage of the\n*    circle to fill.\n* @param rotation The starting point of the circle with 0 being the 0 degree point.\n* @return A string for an SVG path representing a circle filled from the starting point to the\n*    percentage value provided.\n*/\nfunction getSvgArc(currentValue: number, rotation: number) {\n    const startPoint = rotation || 0;\n    const radius = 50;\n    const pathRadius = 40;\n\n    const startAngle = startPoint * MAX_ANGLE;\n    const endAngle = currentValue * MAX_ANGLE;\n    const start = polarToCartesian(radius, pathRadius, startAngle);\n    const end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n    const arcSweep = endAngle < 0 ? 0 : 1;\n    let largeArcFlag: number;\n\n    if (endAngle < 0) {\n        largeArcFlag = endAngle >= -180 ? 0 : 1;\n    } else {\n        largeArcFlag = endAngle <= 180 ? 0 : 1;\n    }\n\n    return `M${start}A${pathRadius},${pathRadius} 0 ${largeArcFlag},${arcSweep} ${end}`;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  HostBinding,\n  Input,\n} from '@angular/core';\n\n// TODO(josephperrott): Benchpress tests.\n// TODO(josephperrott): Add ARIA attributes for progressbar \"for\".\n\n\n/**\n * <md-progress-bar> component.\n */\n@Component({\n    selector: 'mdb-progress-bar, mat-progress-bar',\n    template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"></div> <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div> \",\n    styles: [\":host { display:block; height:5px; overflow:hidden; position:relative; transform:translateZ(0); transition:opacity 250ms linear; width:100%; } :host .mat-progress-bar-element,:host .mat-progress-bar-fill::after { height:100%; position:absolute; width:100%; } :host .mat-progress-bar-background { background-repeat:repeat-x; background-size:10px 4px; display:none; } :host .mat-progress-bar-buffer { transform-origin:top left; transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1); } :host .mat-progress-bar-secondary { display:none; }  :host .mat-progress-bar-fill { animation:none; transform-origin:top left; transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1); } :host .mat-progress-bar-fill::after { animation:none; content:''; display:inline-block; left:0; } :host[mode=query] { transform:rotateZ(180deg); } :host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill { transition:none; } :host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary { animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear; left:-145.166611%; } :host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query]  .mat-progress-bar-primary.mat-progress-bar-fill::after { animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear; } :host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary { animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear; left:-54.888891%; display:block; } :host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query]  .mat-progress-bar-secondary.mat-progress-bar-fill::after { animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear; } :host[mode=buffer] .mat-progress-bar-background { animation:mat-progress-bar-background-scroll 250ms infinite linear; display:block; } :host-context([dir=rtl]) { transform:rotateY(180deg); } @keyframes mat-progress-bar-primary-indeterminate-translate { 0% { transform:translateX(0); } 20% { animation-timing-function:cubic-bezier(.5,0,.70173,.49582); transform:translateX(0); } 59.15% { animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635); transform:translateX(83.67142%); } 100% { transform:translateX(200.61106%); } } @keyframes mat-progress-bar-primary-indeterminate-scale { 0% { transform:scaleX(.08); } 36.65% { animation-timing-function:cubic-bezier(.33473,.12482,.78584,1); transform:scaleX(.08); } 69.15% { animation-timing-function:cubic-bezier(.06,.11,.6,1); transform:scaleX(.66148); }  100% { transform:scaleX(.08); } } @keyframes mat-progress-bar-secondary-indeterminate-translate { 0% { animation-timing-function:cubic-bezier(.15,0,.51506,.40969); transform:translateX(0); } 25% { animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371); transform:translateX(37.65191%); } 48.35% { animation-timing-function:cubic-bezier(.4,.62704,.6,.90203); transform:translateX(84.38617%); } 100% { transform:translateX(160.27778%); } } @keyframes mat-progress-bar-secondary-indeterminate-scale { 0% { animation-timing-function:cubic-bezier(.15,0,.51506,.40969); transform:scaleX(.08); } 19.15% { animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371); transform:scaleX(.4571) }  44.15% { animation-timing-function:cubic-bezier(.4,.62704,.6,.90203); transform:scaleX(.72796); } 100% { transform:scaleX(.08); } } @keyframes mat-progress-bar-background-scroll { to { transform:translateX(-10px) } }  \"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class ProgressBarComponent {\n    /** Color of the progress bar. */\n    @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n\n    private _value = 0;\n\n    /** Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow. */\n    @Input()\n\n    @HostBinding('attr.aria-valuenow')\n    get value() { return this._value; }\n    set value(v: number) { this._value = clamp(v || 0); }\n\n    private _bufferValue = 0;\n\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue() { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n\n    /**\n    * Mode of the progress bar.\n    *\n    * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n    * 'determinate'.\n    * Mirrored to mode attribute.\n    */\n    @Input()\n    @HostBinding('attr.mode')\n    mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\n\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        const scale = this.value / 100;\n        return {transform: `scaleX(${scale})`};\n    }\n\n    /**\n    * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n    * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n    */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            const scale = this.bufferValue / 100;\n            return {transform: `scaleX(${scale})`};\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import {\n  Injectable,\n  Inject\n} from '@angular/core';\n\nimport {\n  DOCUMENT\n} from '@angular/common';\n\nimport {\n  CONTAINER_QUERY,\n  COMPLETE_CLASS_NAME,\n  TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE,\n  EMULATE_ELEMENT_NAME\n} from './preloader.constants';\n\nimport {MDB_SPINNING_PRELOADER_TYPE} from './preloader.types';\n\n@Injectable()\nexport class MDBSpinningPreloader {\n  public _container: MDB_SPINNING_PRELOADER_TYPE;\n\n  public static errorHandler() {\n    throw new TypeError(TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE);\n  }\n\n  constructor(@Inject(DOCUMENT) public document: any) {\n    this.container = this.document.querySelector(CONTAINER_QUERY);\n  }\n\n  public start() {\n    this.container.classList.remove(COMPLETE_CLASS_NAME);\n  }\n\n  public stop() {\n    this.container.classList.add(COMPLETE_CLASS_NAME);\n  }\n\n  public get container(): MDB_SPINNING_PRELOADER_TYPE {\n    return this._container;\n  }\n\n  public set container(element) {\n    if (!element) {\n      // NgSpinningPreloader.errorHandler();\n    }\n\n    this._container = element || this.document.createElement(EMULATE_ELEMENT_NAME);\n  }\n\n}\n","\nconst CONTAINER_CLASS_NAME = 'spinning-preloader-container';\nconst COMPLETE_CLASS_NAME = 'complete';\nconst CONTAINER_QUERY = `.${CONTAINER_CLASS_NAME}`;\n\nconst CONTAINER_NAME: string = CONTAINER_CLASS_NAME.split('-').join(' ');\n\nexport const TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE =\n  `The ${CONTAINER_NAME} was not found`;\n\nexport const EMULATE_ELEMENT_NAME = 'div';\n\nexport {\n  CONTAINER_QUERY,\n  COMPLETE_CLASS_NAME,\n  CONTAINER_CLASS_NAME,\n  CONTAINER_NAME\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { SelectComponent } from './select.component';\nimport { SelectDropdownComponent } from './select-dropdown.component';\n\nexport { IOption } from './option-interface';\nexport { SELECT_VALUE_ACCESSOR, SelectComponent } from './select.component';\n\n@NgModule({\n  declarations: [\n    SelectComponent,\n    SelectDropdownComponent\n  ],\n  exports: [\n    SelectComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SelectModule { }\n","import {\n  Component, Input, OnChanges, OnInit, Output, EventEmitter, ExistingProvider, ViewChild,\n  ViewEncapsulation, forwardRef, ElementRef, HostListener, Renderer2, AfterViewInit, SimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { SelectDropdownComponent } from './select-dropdown.component';\nimport { IOption } from './option-interface';\nimport { Option } from './option';\nimport { OptionList } from './option-list';\n\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectComponent),\n  multi: true\n};\n\n\n@Component({\n  selector: 'mdb-select',\n  template: \"<label *ngIf=\\\"label !== ''\\\"> {{label}} </label> <div #selection [attr.tabindex]=\\\"disabled ? null : 0\\\" [ngClass]=\\\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\\\" (mousedown)=\\\"onSelectContainerClick($event)\\\" (focus)=\\\"onSelectContainerFocus()\\\" (blur)=\\\"onSelectContainerBlur()\\\" (keydown)=\\\"onSelectContainerKeydown($event)\\\" (window:click)=\\\"onWindowClick()\\\" (window:resize)=\\\"onWindowResize()\\\"> <div class=\\\"single\\\" *ngIf=\\\"!multiple\\\"> <div class=\\\"value\\\" *ngIf=\\\"optionList.hasSelected()\\\"> {{optionList.selection[0].label}} </div> <div class=\\\"placeholder\\\" *ngIf=\\\"!optionList.hasSelected()\\\"> {{placeholderView}} </div> <div #clear class=\\\"clear\\\" *ngIf=\\\"allowClear && hasSelected\\\" (mousedown)=\\\"onClearSelectionClick($event)\\\"> &#x2715; </div> </div> <div class=\\\"multiple\\\" *ngIf=\\\"multiple\\\"> <div class=\\\"placeholder\\\" *ngIf=\\\"!optionList.hasSelected()\\\"> {{placeholderView}} </div> <div class=\\\"option\\\"  *ngFor=\\\"let option of optionList.selection\\\"> <span class=\\\"deselect-option\\\">, </span>{{option.label}} </div> </div> </div> <mdb-select-dropdown *ngIf=\\\"isOpen\\\" #dropdown [multiple]=\\\"multiple\\\" [optionList]=\\\"optionList\\\" [notFoundMsg]=\\\"notFoundMsg\\\" [highlightColor]=\\\"highlightColor\\\" [highlightTextColor]=\\\"highlightTextColor\\\" [filterEnabled]=\\\"filterEnabled\\\" [placeholder]=\\\"filterPlaceholder\\\" [top]=\\\"top\\\" [left]=\\\"left\\\" (close)=\\\"onDropdownClose($event)\\\" (optionClicked)=\\\"onDropdownOptionClicked($event)\\\" (singleFilterClick)=\\\"onSingleFilterClick()\\\" (singleFilterInput)=\\\"onSingleFilterInput($event)\\\" (singleFilterKeydown)=\\\"onSingleFilterKeydown($event)\\\"> </mdb-select-dropdown>\",\n  providers: [SELECT_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectComponent implements ControlValueAccessor, OnChanges, OnInit, AfterViewInit {\n\n  @Input() options: Array<IOption>;\n  @Input() public customClass = '';\n  @Input() allowClear = false;\n  @Input() disabled = false;\n  @Input() highlightColor: string;\n  @Input() highlightTextColor: string;\n  @Input() multiple = false;\n  @Input() noFilter = 0;\n  @Input() notFoundMsg = 'No results found';\n  @Input() placeholder = '';\n  @Input() filterPlaceholder = '';\n  @Input() label = '';\n  @Input() filterEnabled = false;\n\n  @Output() opened: EventEmitter<any> = new EventEmitter<any>();\n  @Output() closed: EventEmitter<any> = new EventEmitter<any>();\n  @Output() selected: EventEmitter<IOption> = new EventEmitter<IOption>();\n  @Output() deselected: EventEmitter<IOption | IOption[]> =\n    new EventEmitter<IOption | IOption[]>();\n  @Output() noOptionsFound: EventEmitter<string> =\n    new EventEmitter<string>();\n  @Output() changed = new EventEmitter();\n  @ViewChild('selection') selectionSpan: any;\n  @ViewChild('dropdown') dropdown: SelectDropdownComponent;\n  @ViewChild('filterInput') filterInput: any;\n  @ViewChild('clear') clearButton: any;\n\n  // Angular lifecycle hooks.\n  KEYS: any = {\n    BACKSPACE: 8,\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    UP: 38,\n    DOWN: 40\n  };\n\n  _value: Array<any> = [];\n  optionList: OptionList;\n\n  // Selection state variables.\n  hasSelected = false;\n\n  // View state variables.\n  hasFocus = false;\n  isOpen = false;\n  isBelow = true;\n  filterInputWidth = 1;\n  isDisabled = false;\n  placeholderView = '';\n\n  clearClicked = false;\n  selectContainerClicked = false;\n\n  // Width and position for the dropdown container.\n  width: number;\n  top: number;\n  left: number;\n\n\n  itemsBefore: Array<any> = [];\n\n\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  /** Event handlers. **/\n\n  @HostListener('document:click', ['$event']) closeSelect($event: any) {\n    if (!this.isChild($event.target) && this.isOpen) {\n      this.closeDropdown();\n    }\n  }\n\n  // Angular lifecycle hooks.\n  constructor(public el: ElementRef, public renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this.placeholderView = this.placeholder;\n  }\n\n  ngAfterViewInit() {\n    this.updateState();\n    this.setArrowUpIcon();\n    this.setArrowDownIcon();\n    this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'hidden');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('options')) {\n      this.updateOptionsList(changes.options.currentValue);\n      this.updateState();\n      this.changed.emit({ previousValue: changes.options.previousValue, currentValue: changes.options.currentValue });\n    }\n    if (changes.hasOwnProperty('noFilter')) {\n      const numOptions: number = this.optionList.options.length;\n      const minNumOptions: number = changes['noFilter'].currentValue;\n      this.filterEnabled = numOptions >= minNumOptions;\n    }\n\n    if (changes.hasOwnProperty('placeholder')) {\n      this.updateState();\n    }\n  }\n\n  setArrowUpIcon() {\n    const div = this.renderer.createElement('div');\n    this.renderer.appendChild(this.selectionSpan.nativeElement.children[0], div);\n    this.selectionSpan.nativeElement.children[0].lastChild.innerHTML = '&#x25BC;';\n    this.renderer.addClass(this.selectionSpan.nativeElement.children[0].lastChild, 'toggle');\n\n  }\n\n  setArrowDownIcon() {\n    const div = this.renderer.createElement('div');\n    this.renderer.appendChild(this.selectionSpan.nativeElement.children[0], div);\n    this.selectionSpan.nativeElement.children[0].lastChild.innerHTML = '&#x25B2;';\n    this.renderer.addClass(this.selectionSpan.nativeElement.children[0].lastChild, 'toggle');\n  }\n\n\n  isChild(elemnt: any) {\n    let node = elemnt.parentNode;\n    while (node != null) {\n      if (node === this.el.nativeElement) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  // Window.\n\n  onWindowClick() {\n    if (!this.selectContainerClicked && !this.multiple) {\n      this.closeDropdown();\n    }\n    this.clearClicked = false;\n    this.selectContainerClicked = false;\n  }\n\n  onWindowResize() {\n    this.updateWidth();\n  }\n\n  // Select container.\n\n  onSelectContainerClick(event: any) {\n      if (this.clearButton && event.target === this.clearButton.nativeElement) {\n        return;\n      } else {\n        this.selectContainerClicked = true;\n        this.toggleDropdown();\n      }\n  }\n\n  onSelectContainerFocus() {\n    this.openDropdown();\n  }\n\n  onSelectContainerBlur() {\n    if (!this.isOpen && !this.disabled) {\n      this.onTouched();\n    }\n  }\n\n  onSelectContainerKeydown(event: any) {\n    this.handleSelectContainerKeydown(event);\n  }\n\n  // Dropdown container.\n\n  onDropdownOptionClicked(option: Option) {\n    this.multiple ?\n      this.toggleSelectOption(option) : this.selectOption(option);\n  }\n\n  onDropdownClose(focus: any) {\n    this.closeDropdown(focus);\n  }\n\n  // Single filter input.\n  onSingleFilterClick() {\n    this.selectContainerClicked = true;\n  }\n\n  onSingleFilterInput(term: string) {\n    const hasShown: boolean = this.optionList.filter(term);\n    if (!hasShown) {\n      this.noOptionsFound.emit(term);\n    }\n  }\n\n  onSingleFilterKeydown(event: any) {\n    this.handleSingleFilterKeydown(event);\n  }\n\n  // Multiple filter input.\n\n  onMultipleFilterInput(event: any) {\n    if (!this.isOpen) {\n      this.openDropdown();\n    }\n    this.updateFilterWidth();\n    setTimeout(() => {\n      const term: string = event.target.value;\n      const hasShown: boolean = this.optionList.filter(term);\n      if (!hasShown) {\n        this.noOptionsFound.emit(term);\n      }\n    });\n  }\n\n  onMultipleFilterKeydown(event: any) {\n    this.handleMultipleFilterKeydown(event);\n  }\n\n  // Single clear select.\n\n  onClearSelectionClick(event: any) {\n    event.preventDefault();\n    this.clearClicked = true;\n    this.clearSelection();\n    this.placeholderView = this.placeholder;\n  }\n\n  // Multiple deselect option.\n\n  onDeselectOptionClick(option: Option) {\n    this.clearClicked = true;\n    this.deselectOption(option);\n  }\n\n  /** API. **/\n\n  // TODO fix issues with global click/key handler that closes the dropdown.\n  open() {\n    this.openDropdown();\n  }\n\n  close() {\n    this.closeDropdown();\n    this.onTouched();\n  }\n\n\n  get value(): string | string[] {\n    return this.multiple ? this._value : this._value[0];\n  }\n\n  set value(v: string | string[]) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n      v = [];\n    } else if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n      v = [v];\n    } else if (!Array.isArray(v)) {\n      throw new TypeError('Value must be a string or an array.');\n    }\n\n    this.optionList.value = v;\n    this._value = v;\n    this.updateState();\n  }\n\n  clear() {\n    this.clearSelection();\n  }\n\n  select(value: string) {\n    this.optionList.getOptionsByValue(value).forEach((option) => {\n      this.selectOption(option);\n    });\n  }\n\n  /** ControlValueAccessor interface methods. **/\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n\n  valueChanged() {\n    this._value = this.optionList.value;\n    this.updateState();\n    this.onChange(this.value);\n  }\n\n  updateState() {\n    this.placeholderView = this.hasSelected ? '' : this.placeholder;\n    setTimeout(() => {\n      this.updateFilterWidth();\n    });\n  }\n\n  /** Initialization. **/\n\n  updateOptionsList(options: Array<IOption>) {\n    this.optionList = new OptionList(options);\n    this.optionList.value = this._value;\n  }\n\n  /** Dropdown. **/\n  toggleDropdown() {\n    if (!this.isDisabled) {\n      this.isOpen ? this.closeDropdown(true) : this.openDropdown();\n    }\n  }\n\n  openDropdown() {\n    this.renderer.setStyle(this.el.nativeElement, 'z-index', '1000');\n    if (!this.isOpen) {\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'visible');\n      // tslint:disable-next-line:max-line-length\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].children[this.selectionSpan.nativeElement.children[0].children.length - 2], 'visibility', 'hidden');\n      this.updateWidth();\n      this.updatePosition();\n      this.isOpen = true;\n      // if (this.multiple && this.filterEnabled) {\n      //   this.filterInput.nativeElement.focus();\n      // }\n      this.opened.emit(this);\n    }\n  }\n\n  closeDropdown(focus: boolean = false) {\n    const container = this.el.nativeElement.lastElementChild.classList;\n    this.renderer.removeStyle(this.el.nativeElement, 'z-index');\n    container.remove('fadeInSelect');\n    if (this.isOpen) {\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'hidden');\n      // tslint:disable-next-line:max-line-length\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].children[this.selectionSpan.nativeElement.children[0].children.length - 2], 'visibility', 'visible');\n    }\n    setTimeout(() => {\n\n      if (this.isOpen) {\n        this.clearFilterInput();\n        this.isOpen = false;\n        if (focus) {\n          this.focus();\n        }\n        this.closed.emit(this);\n      }\n    }, 200);\n    this.onTouched();\n  }\n\n  /** Select. **/\n\n  selectOption(option: Option) {\n    if (!option.selected) {\n      this.optionList.select(option, this.multiple);\n      this.valueChanged();\n      this.selected.emit(option.wrappedOption);\n      this.hasSelected = true;\n    }\n  }\n\n  deselectOption(option: Option) {\n    if (option.selected) {\n      this.optionList.deselect(option);\n      this.valueChanged();\n      this.placeholderView = this.placeholder;\n      this.deselected.emit(option.wrappedOption);\n    }\n  }\n\n  clearSelection() {\n    const selection: Array<Option> = this.optionList.selection;\n    if (selection.length > 0) {\n      this.optionList.clearSelection();\n      this.valueChanged();\n      setTimeout(() => {\n        this.hasSelected = false;\n      }, 0);\n\n      if (selection.length === 1) {\n        this.deselected.emit(selection[0].wrappedOption);\n      } else {\n        this.deselected.emit(selection.map((option) => {\n          return option.wrappedOption;\n        }));\n      }\n    }\n  }\n\n  toggleSelectOption(option: Option) {\n    option.selected ?\n      this.deselectOption(option) : this.selectOption(option);\n  }\n\n  selectHighlightedOption() {\n    const option: Option = this.optionList.highlightedOption;\n    if (option !== null) {\n      this.selectOption(option);\n      this.closeDropdown(true);\n    }\n  }\n\n  deselectLast() {\n    const sel: Array<Option> = this.optionList.selection;\n\n    if (sel.length > 0) {\n      const option: Option = sel[sel.length - 1];\n      this.deselectOption(option);\n      this.setMultipleFilterInput(option.label + ' ');\n    }\n  }\n\n  /** Filter. **/\n\n  clearFilterInput() {\n    try {\n      if (this.multiple && this.filterEnabled) {\n        this.filterInput.nativeElement.value = '';\n      } else {\n        this.dropdown.clearFilterInput();\n      }\n    } catch (error) { }\n  }\n\n  setMultipleFilterInput(value: string) {\n    if (this.filterEnabled) {\n      this.filterInput.nativeElement.value = value;\n    }\n  }\n\n  handleSelectContainerKeydown(event: any) {\n    const key = event.which;\n\n    if (this.isOpen) {\n      if (key === this.KEYS.ESC ||\n        (key === this.KEYS.UP && event.altKey)) {\n        this.closeDropdown(true);\n      } else if (key === this.KEYS.TAB) {\n        this.closeDropdown();\n      } else if (key === this.KEYS.ENTER) {\n        this.selectHighlightedOption();\n      } else if (key === this.KEYS.UP) {\n        this.optionList.highlightPreviousOption();\n        this.dropdown.moveHighlightedIntoView();\n        if (!this.filterEnabled) {\n          event.preventDefault();\n        }\n      } else if (key === this.KEYS.DOWN) {\n        this.optionList.highlightNextOption();\n        this.dropdown.moveHighlightedIntoView();\n        if (!this.filterEnabled) {\n          event.preventDefault();\n        }\n      }\n    } else {\n      if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\n        (key === this.KEYS.DOWN && event.altKey)) {\n\n        /* FIREFOX HACK:\n         *\n         * The setTimeout is added to prevent the enter keydown event\n         * to be triggered for the filter input field, which causes\n         * the dropdown to be closed again.\n         */\n        setTimeout(() => { this.openDropdown(); });\n      }\n    }\n\n  }\n\n  handleMultipleFilterKeydown(event: any) {\n    const key = event.which;\n\n    if (key === this.KEYS.BACKSPACE) {\n      if (this.hasSelected && this.filterEnabled &&\n        this.filterInput.nativeElement.value === '') {\n        this.deselectLast();\n      }\n    }\n  }\n\n  handleSingleFilterKeydown(event: any) {\n    const key = event.which;\n\n    if (key === this.KEYS.ESC || key === this.KEYS.TAB\n      || key === this.KEYS.UP || key === this.KEYS.DOWN\n      || key === this.KEYS.ENTER) {\n      this.handleSelectContainerKeydown(event);\n    }\n  }\n\n  /** View. **/\n\n  focus() {\n    this.hasFocus = true;\n    try {\n      if (this.filterEnabled) {\n        this.filterInput.nativeElement.focus();\n      } else {\n        this.selectionSpan.nativeElement.focus();\n      }\n    } catch (error) { }\n\n  }\n\n  blur() {\n    this.hasFocus = false;\n    this.selectionSpan.nativeElement.blur();\n  }\n\n  updateWidth() {\n    this.width = this.selectionSpan.nativeElement.offsetWidth;\n  }\n\n  updatePosition() {\n    const e = this.selectionSpan.nativeElement;\n    this.left = e.offsetLeft;\n    this.top = e.offsetTop + e.offsetHeight;\n  }\n\n  updateFilterWidth() {\n    if (typeof this.filterInput !== 'undefined') {\n      const value: string = this.filterInput.nativeElement.value;\n      this.filterInputWidth = value.length === 0 ?\n        1 + this.placeholderView.length * 10 : 1 + value.length * 10;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation, ElementRef, HostListener, Renderer2, ChangeDetectorRef\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Option } from './option';\nimport { OptionList } from './option-list';\n\n@Component({\n  selector: 'mdb-select-dropdown',\n  template: \"<div class=\\\"dropdown-content\\\" #dropdownContent [ngStyle]=\\\"{'top.px': top, 'left.px': left, 'width.px': width}\\\"  [@dropdownAnimation]=\\\"{value: state, params: {startHeight: startHeight, endHeight: endHeight}}\\\"> <div class=\\\"filter\\\" *ngIf=\\\"filterEnabled\\\"> <input #filterInput autocomplete=\\\"on\\\" [placeholder]=\\\"placeholder\\\" (click)=\\\"onSingleFilterClick()\\\" (input)=\\\"onSingleFilterInput($event)\\\" (keydown)=\\\"onSingleFilterKeydown($event)\\\"> </div> <div class=\\\"options\\\" #optionsList> <ul class=\\\"select-dropdown\\\" [ngClass]=\\\"{'multiple-select-dropdown': multiple}\\\" (wheel)=\\\"onOptionsWheel($event)\\\"> <li *ngFor=\\\"let option of optionList.filtered\\\" [ngClass]=\\\"{'active': option.highlighted, 'selected': option.selected, 'disabled': option.disabled, 'optgroup': option.group}\\\" [ngStyle]=\\\"getOptionStyle(option)\\\" (click)=\\\"onOptionClick(option)\\\" (mouseover)=\\\"onOptionMouseover(option)\\\"> <img class=\\\"rounded-circle\\\" [src]=\\\"option.icon\\\" *ngIf=\\\"option.icon !== ''\\\"> <span class=\\\"select-option\\\" *ngIf=\\\"!multiple\\\">{{option.label}}</span> <span class=\\\"filtrable\\\" *ngIf=\\\"multiple\\\"> <input type=\\\"checkbox\\\" [checked]=\\\"option.selected\\\" class=\\\"form-check-input {{customClass}}\\\"> <label></label> {{option.label}} </span> </li> <li *ngIf=\\\"!this.hasOptionsItems\\\" class=\\\"message disabled\\\"> <span>{{notFoundMsg}}</span> </li> </ul> </div> </div>\",\n  encapsulation: ViewEncapsulation.None,\n  animations: [trigger('dropdownAnimation', [\n    state('invisible', style({ height: '{{startHeight}}', }), { params: { startHeight: 0 } }),\n    state('visible', style({ height: '{{endHeight}}', }), { params: { endHeight: 45 + 'px' } }),\n    transition('invisible => visible', animate('200ms ease-in', style({ height: '{{endHeight}}px' }))),\n    transition('visible => invisible', animate('200ms ease-in', style({ height: '{{startHeight}}px' })))\n  ])]\n})\nexport class SelectDropdownComponent\n  implements AfterViewInit, OnChanges, OnInit {\n\n  @Input() filterEnabled: boolean;\n  @Input() highlightColor: string;\n  @Input() highlightTextColor: string;\n  @Input() left: number;\n  @Input() multiple: boolean;\n  @Input() notFoundMsg: string;\n  @Input() optionList: OptionList;\n  @Input() top: number;\n  @Input() width: number;\n  @Input() placeholder: string;\n  @Input() customClass = '';\n  @Output() close = new EventEmitter<boolean>();\n  @Output() optionClicked = new EventEmitter<Option>();\n  @Output() singleFilterClick = new EventEmitter<null>();\n  @Output() singleFilterInput = new EventEmitter<string>();\n  @Output() singleFilterKeydown = new EventEmitter<any>();\n\n  @ViewChild('filterInput') filterInput: any;\n  @ViewChild('optionsList') optionsList: any;\n  @ViewChild('dropdownContent') dropdownContent: ElementRef;\n  disabledColor = '#fff';\n  disabledTextColor = '9e9e9e';\n\n  // Used in sliding-down animation\n  state = 'invisible';\n  startHeight: any = 0;\n  endHeight: any = 45;\n\n  public hasOptionsItems = true;\n\n  constructor(private _elementRef: ElementRef, public _renderer: Renderer2, private cdRef: ChangeDetectorRef) { }\n\n  /** Event handlers. **/\n\n  // Angular life cycle hooks.\n\n  @HostListener('keyup') onkeyup() {\n    this.hasOptionsItems = this._elementRef.nativeElement.childNodes[0].children[1].children[0].children.length >= 1 ? true : false;\n  }\n\n\n  ngOnInit() {\n    this.optionsReset();\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.hasOwnProperty('optionList')) {\n      this.optionsReset();\n    }\n\n    const container = this._elementRef.nativeElement.classList;\n    setTimeout(() => { container.add('fadeInSelect'); }, 200);\n  }\n\n  ngAfterViewInit() {\n    // Sliding-down animation\n    this.endHeight = this.dropdownContent.nativeElement.clientHeight;\n    this.state = (this.state === 'invisible' ? 'visible' : 'invisible');\n    this.cdRef.detectChanges();\n\n    // Dropping up dropdown content of Material Select when near bottom edge of the screen\n    // Need fix to proper work with sliding animation\n\n    // tslint:disable-next-line:max-line-length\n    // if (window.innerHeight - this._elementRef.nativeElement.getBoundingClientRect().bottom < this.dropdownContent.nativeElement.clientHeight) {\n    //   this._renderer.setStyle(this.dropdownContent.nativeElement, 'top', - this.dropdownContent.nativeElement.clientHeight + 'px');\n    // }\n    if (this.multiple) {\n      this._elementRef.nativeElement.querySelectorAll('.disabled.optgroup').forEach((element: any) => {\n        this._renderer.setStyle(element.firstElementChild.lastElementChild, 'display', 'none');\n      });\n    }\n    try {\n      if (!(this._elementRef.nativeElement.parentElement == undefined)) {\n        setTimeout(() => {\n          if (this._elementRef.nativeElement.parentElement.attributes.customClass !== undefined) {\n            this.customClass = this._elementRef.nativeElement.parentElement.attributes.customClass.value;\n          }\n        }, 0);\n      }\n    } catch (error) {\n    }\n\n    this.moveHighlightedIntoView();\n    if (this.filterEnabled) {\n      this.filterInput.nativeElement.focus();\n    }\n  }\n  // Filter input (single select).\n\n  onSingleFilterClick() {\n    this.singleFilterClick.emit(null);\n  }\n\n  onSingleFilterInput(event: any) {\n    this.singleFilterInput.emit(event.target.value);\n  }\n\n  onSingleFilterKeydown(event: any) {\n    this.singleFilterKeydown.emit(event);\n  }\n\n  // Options list.\n\n  onOptionsWheel(event: any) {\n    this.handleOptionsWheel(event);\n  }\n\n  onOptionMouseover(option: Option) {\n    this.optionList.highlightOption(option);\n  }\n\n  onOptionClick(option: Option) {\n    this.optionClicked.emit(option);\n  }\n\n  /** Initialization. **/\n\n  private optionsReset() {\n    this.optionList.filter('');\n    this.optionList.highlight();\n  }\n\n  /** View. **/\n\n  getOptionStyle(option: Option): any {\n    if (option.highlighted) {\n      const optionStyle: any = {};\n\n      if (typeof this.highlightColor !== 'undefined') {\n        optionStyle['background-color'] = this.highlightColor;\n      }\n      if (typeof this.highlightTextColor !== 'undefined') {\n        optionStyle['color'] = this.highlightTextColor;\n      }\n      return optionStyle;\n    } else {\n      return {};\n    }\n  }\n\n  clearFilterInput() {\n    if (this.filterEnabled) {\n      this.filterInput.nativeElement.value = '';\n    }\n  }\n\n  moveHighlightedIntoView() {\n\n    const list = this.optionsList.nativeElement;\n    const listHeight = list.offsetHeight;\n\n    const itemIndex = this.optionList.getHighlightedIndex();\n\n    if (itemIndex > -1) {\n      const item = list.children[0].children[itemIndex];\n      const itemHeight = item.offsetHeight;\n\n      const itemTop = itemIndex * itemHeight;\n      const itemBottom = itemTop + itemHeight;\n\n      const viewTop = list.scrollTop;\n      const viewBottom = viewTop + listHeight;\n\n      if (itemBottom > viewBottom) {\n        list.scrollTop = itemBottom - listHeight;\n      } else if (itemTop < viewTop) {\n        list.scrollTop = itemTop;\n      }\n\n    }\n  }\n\n  private handleOptionsWheel(e: any) {\n    const div = this.optionsList.nativeElement;\n    const atTop = div.scrollTop === 0;\n    const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\n\n    if (atTop && e.deltaY < 0) {\n      e.preventDefault();\n    } else if (atBottom && e.deltaY > 0) {\n      e.preventDefault();\n    }\n\n  }\n\n}\n","import {Option} from './option';\nimport {IOption} from './option-interface';\nimport {Diacritics} from './diacritics';\n\nexport class OptionList {\n\n  private _options: Array<Option>;\n\n  /* Consider using these for performance improvement. */\n  // private _selection: Array<Option>;\n  // private _filtered: Array<Option>;\n  // private _value: Array<string>;\n\n  // private _highlightedOption: Option = null;\n  private _highlightedOption: Option | any = null;\n  private _hasShown: boolean;\n\n  public setToNullValue: any = null;\n  // v0 and v1 are assumed not to be undefined or null.\n  static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n    if (v0.length !== v1.length) {\n      return false;\n    }\n\n    const a: Array<string> = v0.slice().sort();\n    const b: Array<string> = v1.slice().sort();\n\n    return a.every((v, i) => {\n      return v === b[i];\n    });\n  }\n\n  constructor(options: Array<IOption>) {\n\n    if (typeof options === 'undefined' || options === null) {\n      options = [];\n    }\n\n    this._options = options.map((option) => {\n      const o: Option = new Option(option);\n      if (option.disabled) {\n        o.disabled = true;\n      }\n      if (option.group) {\n        o.disabled = true;\n        o.group = true;\n      }\n      return o;\n    });\n\n    this._hasShown = this._options.length > 0;\n    this.highlight();\n  }\n\n  /** Options. **/\n\n  get options(): Array<Option> {\n    return this._options;\n  }\n\n  getOptionsByValue(value: string): Array<Option> {\n    return this.options.filter((option) => {\n      return option.value === value;\n    });\n  }\n\n  /** Value. **/\n\n  get value(): Array<string> {\n    return this.selection.map((selectedOption) => {\n      return selectedOption.value;\n    });\n  }\n\n  set value(v: Array<string>) {\n    v = typeof v === 'undefined' || v === null ? [] : v;\n\n    this.options.forEach((option) => {\n      option.selected = v.indexOf(option.value) > -1;\n    });\n  }\n\n  /** Selection. **/\n\n  get selection(): Array<Option> {\n    return this.options.filter((option) => {\n      return option.selected;\n    });\n  }\n\n  select(option: Option, multiple: boolean) {\n    if (!multiple) {\n      this.clearSelection();\n    }\n    option.selected = true;\n  }\n\n  deselect(option: Option) {\n    option.selected = false;\n  }\n\n  clearSelection() {\n    this.options.forEach((option) => {\n      option.selected = false;\n    });\n  }\n\n  /** Filter. **/\n\n  get filtered(): Array<Option> {\n    return this.options.filter((option) => {\n      return option.shown;\n    });\n  }\n\n  filter(term: string): boolean {\n    let anyShown = false;\n\n    if (term.trim() === '') {\n      this.resetFilter();\n      anyShown = this.options.length > 0;\n    } else {\n      this.options.forEach((option) => {\n        const l: string = Diacritics.strip(option.label).toUpperCase();\n        const t: string = Diacritics.strip(term).toUpperCase();\n        option.shown = l.indexOf(t) === 0;\n      });\n\n    }\n\n    this.highlight();\n    this._hasShown = anyShown;\n\n    return anyShown;\n  }\n\n  private resetFilter() {\n    this.options.forEach((option) => {\n      option.shown = true;\n    });\n  }\n\n  /** Highlight. **/\n\n  get highlightedOption(): Option {\n    return this._highlightedOption;\n  }\n\n  highlight() {\n    const option: Option = this.hasShownSelected() ?\n      this.getFirstShownSelected() : this.getFirstShown();\n    this.highlightOption(option);\n  }\n\n  highlightOption(option: Option) {\n    this.clearHighlightedOption();\n\n    if (option !== null) {\n      option.highlighted = true;\n      this._highlightedOption = option;\n    }\n  }\n\n  highlightNextOption() {\n    const shownOptions = this.filtered;\n    const index = this.getHighlightedIndexFromList(shownOptions);\n\n    if (index > -1 && index < shownOptions.length - 1) {\n      this.highlightOption(shownOptions[index + 1]);\n    }\n  }\n\n  highlightPreviousOption() {\n    const shownOptions = this.filtered;\n    const index = this.getHighlightedIndexFromList(shownOptions);\n\n    if (index > 0) {\n      this.highlightOption(shownOptions[index - 1]);\n    }\n  }\n\n  private clearHighlightedOption() {\n    if (this.highlightedOption !== null) {\n      this.highlightedOption.highlighted = false;\n      this._highlightedOption = null;\n    }\n  }\n\n  private getHighlightedIndexFromList(options: Array<Option>) {\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].highlighted) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  getHighlightedIndex() {\n    return this.getHighlightedIndexFromList(this.filtered);\n  }\n\n  /** Util. **/\n\n  get hasShown(): boolean {\n    return this._hasShown;\n  }\n\n  hasSelected() {\n    return this.options.some((option) => {\n      return option.selected;\n    });\n  }\n\n  hasShownSelected() {\n    return this.options.some((option) => {\n      return option.shown && option.selected;\n    });\n  }\n\n  private getFirstShown(): Option {\n    for (const option of this.options) {\n      if (option.shown) {\n        return option;\n      }\n    }\n    // return null;\n    return this.setToNullValue;\n  }\n\n  private getFirstShownSelected(): Option {\n    for (const option of this.options) {\n      if (option.shown && option.selected) {\n        return option;\n      }\n    }\n    // return null;\n    return this.setToNullValue;\n  }\n\n}\n","import {IOption} from './option-interface';\n\nexport class Option {\n\n  wrappedOption: IOption;\n\n  disabled: boolean;\n  highlighted: boolean;\n  selected: boolean;\n  shown: boolean;\n  group: boolean;\n\n  constructor(option: IOption) {\n    this.wrappedOption = option;\n\n    this.disabled = false;\n    this.highlighted = false;\n    this.selected = false;\n    this.shown = true;\n    this.group = false;\n  }\n\n  get value(): string {\n    return this.wrappedOption.value;\n  }\n\n  get label(): string {\n    return this.wrappedOption.label;\n  }\n\n  get icon(): string {\n    if (this.wrappedOption.icon !== '' && this.wrappedOption.icon !== undefined) {\n      return this.wrappedOption.icon;\n    } else {\n      return '';\n    }\n\n  }\n\n}\n\n","export class Diacritics {\n\n  static DIACRITICS: any = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n  };\n\n  static strip(text: string): string {\n\n    const match = (a: string): string => {\n      return this.DIACRITICS[a] || a;\n    };\n\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ImageModalComponent } from './image-popup';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [ImageModalComponent],\n  exports: [ImageModalComponent]\n})\nexport class LightBoxModule {\n}\n","import { Component, Input, Output, ElementRef, EventEmitter, OnInit, HostListener, PLATFORM_ID, Inject, Renderer2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\ndeclare var screenfull: any;\n\nimport 'hammerjs';\n\n\n@Component({\n  selector: 'mdb-image-modal',\n  template: \"<div class=\\\"ng-gallery mdb-lightbox {{ type }}\\\" *ngIf=\\\"showRepeat\\\">  <figure class=\\\"col-md-4\\\" *ngFor =\\\"let i of modalImages; let index = index\\\"> <img src=\\\"{{ !i.thumb ? i.img : i.thumb }}\\\" class=\\\"ng-thumb\\\" (click)=\\\"openGallery(index)\\\" alt=\\\"Image {{ index + 1 }}\\\" /> </figure> </div> <div  tabindex=\\\"0\\\" class=\\\"ng-overlay\\\" [class.hide_lightbox]=\\\"opened == false\\\"> <div class=\\\"top-bar\\\" style='z-index: 100000'> <span class=\\\"info-text\\\">{{ currentImageIndex + 1 }}/{{ modalImages.length }}</span>     <a class=\\\"close-popup\\\" (click)=\\\"closeGallery()\\\" (click)=\\\"toggleRestart()\\\"></a> <a *ngIf=\\\"!is_iPhone_or_iPod\\\" class=\\\"fullscreen-toogle\\\" [class.toggled]='fullscreen' (click)=\\\"fullScreen()\\\"></a> <a class=\\\"zoom-toogle\\\" [class.zoom]='zoom' (click)=\\\"toggleZoomed()\\\" *ngIf=\\\"!isMobile\\\"></a> </div> <div class=\\\"ng-gallery-content\\\"> <!--<img *ngIf=\\\"!loading\\\" src=\\\"{{imgSrc}}\\\" (mousedown)=\\\"checkEvent($event)\\\" (mouseup)=\\\"setZoom($event)\\\" [class.zoom]='zoom' [class.smooth]='smooth' class=\\\"effect\\\" (swipeleft)=\\\"swipe($event, $event.type)\\\" (swiperight)=\\\"swipe($event, $event.type)\\\"/>--> <img *ngIf=\\\"!loading\\\" src=\\\"{{imgSrc}}\\\" [class.smooth]='smooth' class=\\\"effect\\\" (swipeleft)=\\\"swipe($event.type)\\\" (swiperight)=\\\"swipe($event.type)\\\" (click)=\\\"toggleZoomed()\\\" style=\\\"transform: scale(0.9, 0.9)\\\"/> <div class=\\\"uil-ring-css\\\" *ngIf=\\\"loading\\\"> <div></div> </div>   <a class=\\\"nav-left\\\" *ngIf=\\\"modalImages.length >1 && !isMobile\\\" (click)=\\\"prevImage()\\\" > <span></span> </a> <a class=\\\"nav-right\\\" *ngIf=\\\"modalImages.length >1 && !isMobile\\\" (click)=\\\"nextImage()\\\"> <span></span> </a> </div> </div> <div *ngIf=\\\"openModalWindow\\\"> <!-- <mdb-image-modal [modalImages]=\\\"images\\\" [imagePointer]=\\\"imagePointer\\\" (cancelEvent)=\\\"cancelImageModel()\\\"></mdb-image-modal> --> <mdb-image-modal [imagePointer]=\\\"imagePointer\\\"></mdb-image-modal> </div>\",\n  // host: {\n  //   '(document:keyup)': 'keyboardControl($event)'\n  // },\n})\n\nexport class ImageModalComponent implements OnInit {\n  public _element: any;\n  public opened = false;\n  public imgSrc: string;\n  public currentImageIndex: number;\n  public loading = false;\n  public showRepeat = false;\n  public isMobile = false;\n\n  public openModalWindow: any;\n\n  clicked: any = false;\n  isBrowser: any = false;\n  zoomed = 'inactive';\n\n  SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n\n  @Input('modalImages') public modalImages: any;\n  @Input('imagePointer') public imagePointer: number;\n\n  @Input('fullscreen') public fullscreen: boolean;\n  @Input('zoom') public zoom: boolean;\n  @Input('smooth') public smooth = true;\n  @Input('type') public type: String;\n\n  @Output('cancelEvent') cancelEvent = new EventEmitter<any>();\n\n  constructor( @Inject(PLATFORM_ID) platformId: string, public element: ElementRef, public renderer: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this._element = this.element.nativeElement;\n    try {\n      document.createEvent('TouchEvent');\n      this.isMobile = true;\n    } catch (err) {\n      this.isMobile = false;\n      return;\n    }\n  }\n\n  toggleZoomed() {\n    // this.zoomed = (this.zoomed === 'inactive') ? 'active' : 'inactive';\n    // this.zoom = !this.zoom;\n    const imgRef = this.element.nativeElement.lastElementChild.lastElementChild.firstElementChild;\n\n    if (!this.clicked) {\n      this.renderer.setStyle(imgRef, 'transform', 'scale(1.0, 1.0');\n      this.renderer.setStyle(imgRef, 'animate', '300ms ease-out');\n      this.renderer.setStyle(imgRef, 'cursor', 'zoom-out');\n      this.clicked = true;\n    } else if (this.clicked) {\n      this.renderer.setStyle(imgRef, 'transform', 'scale(0.9, 0.9');\n      this.renderer.setStyle(imgRef, 'animate', '300ms ease-in');\n      this.renderer.setStyle(imgRef, 'cursor', 'zoom-in');\n      this.clicked = false;\n    }\n  }\n\n\n  toggleRestart() {\n    this.zoomed = (this.zoomed === 'inactive') ? 'active' : 'inactive';\n  }\n\n  ngOnInit() {\n\n    this.loading = true;\n    if (this.imagePointer >= 0) {\n      this.showRepeat = false;\n      this.openGallery(this.imagePointer);\n    } else {\n      this.showRepeat = true;\n    }\n  }\n\n  closeGallery() {\n    // this.smooth = false;\n    this.zoom = false;\n    if (screenfull.enabled) {\n      screenfull.exit();\n    }\n    this.opened = false;\n    this.cancelEvent.emit(null);\n  }\n\n  prevImage() {\n    // this.smooth = false;\n    // this.zoom = false;\n    this.loading = true;\n    this.currentImageIndex--;\n    if (this.currentImageIndex < 0) {\n      this.currentImageIndex = this.modalImages.length - 1;\n    }\n    this.openGallery(this.currentImageIndex);\n  }\n\n  nextImage() {\n    // this.smooth = false;\n    // this.zoom = false;\n    this.loading = true;\n    this.currentImageIndex++;\n    if (this.modalImages.length === this.currentImageIndex) {\n      this.currentImageIndex = 0;\n    }\n    this.openGallery(this.currentImageIndex);\n  }\n\n  openGallery(index: any) {\n    if (!index) {\n      this.currentImageIndex = 1;\n    }\n    this.currentImageIndex = index;\n    this.opened = true;\n    for (let i = 0; i < this.modalImages.length; i++) {\n      if (i === this.currentImageIndex) {\n        this.imgSrc = this.modalImages[i].img;\n        this.loading = false;\n        break;\n      }\n    }\n  }\n\n  fullScreen(): any {\n    if (screenfull.enabled) {\n      screenfull.toggle();\n    }\n  }\n\n  get is_iPhone_or_iPod() {\n    if (this.isBrowser) {\n      if (navigator && navigator.userAgent && navigator.userAgent != null) {\n        const strUserAgent = navigator.userAgent.toLowerCase();\n        const arrMatches = strUserAgent.match(/ipad/);\n        if (arrMatches != null) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  keyboardControl(event: KeyboardEvent) {\n    if (this.opened) {\n      if (event.keyCode === 39) {\n        this.nextImage();\n      }\n      if (event.keyCode === 37) {\n        this.prevImage();\n      }\n      if (event.keyCode === 27) {\n        this.closeGallery();\n      }\n    }\n  }\n\n  swipe(action: String = this.SWIPE_ACTION.RIGHT) {\n    // let thisImg = this._element.querySelector('.ng-gallery-content').querySelector('img[src=\"' + this.imgSrc + '\"]');\n\n    if (action === this.SWIPE_ACTION.RIGHT) {\n      this.prevImage();\n      // console.log(event.distance, this.modalImages);\n    }\n\n    // previous\n    if (action === this.SWIPE_ACTION.LEFT) {\n      this.nextImage();\n    }\n\n  }\n\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { CharCounterDirective } from './char-counter.directive';\n\n@NgModule({\n  declarations: [CharCounterDirective],\n  exports: [CharCounterDirective]\n})\n\nexport class CharCounterModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CharCounterModule, providers: []};\n  }\n}\n","import { OnInit, Directive, ElementRef, Renderer2, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[mdbCharCounter]'\n})\n\n\nexport class CharCounterDirective implements OnInit {\n\n  @Input() public length = 20;\n  public textContainer: any;\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2) {}\n\n  ngOnInit() {\n    // Inititalise a new <span> element for the count display and render it below the host component.\n    this.textContainer =  this._renderer.createElement('p');\n    this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.textContainer);\n    this._renderer.addClass(this.textContainer, 'chars');\n    this.textContainer.innerHTML = '0/' + this.length;\n    this._renderer.setStyle(this.textContainer, 'display', 'none');\n  }\n\n\n  @HostListener('input') onKeyUp() {\n     this.textContainer.innerHTML = this._elRef.nativeElement.value.length + '/' + this.length;\n\n     if (this._elRef.nativeElement.value.length > this.length) {\n       this._renderer.addClass(this._elRef.nativeElement, 'invalid');\n     } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'invalid');\n     }\n  }\n\n  @HostListener('blur') hide() {\n    this._renderer.setStyle(this.textContainer, 'display', 'none');\n  }\n\n  @HostListener('focus') show() {\n    this.onKeyUp();\n    this._renderer.setStyle(this.textContainer, 'display', 'block');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MDBFileDropDirective } from '../directives/mdb-file-drop.directive';\nimport { MDBFileSelectDirective } from '../directives/mdb-file-select.directive';\n\n@NgModule({\n  declarations: [\n  MDBFileSelectDirective,\n  MDBFileDropDirective\n  ],\n  exports: [\n  MDBFileSelectDirective,\n  MDBFileDropDirective\n  ]\n})\nexport class FileInputModule {}\n","import { Directive, ElementRef, EventEmitter, Input, Output, OnInit, OnDestroy, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MDBUploaderService, UploadOutput } from '../classes/mdb-uploader.class';\n\n@Directive({\n  selector: '[mdbFileSelect]'\n})\nexport class MDBFileSelectDirective implements OnInit, OnDestroy {\n  @Input() uploadInput: EventEmitter<any>;\n  @Output() uploadOutput: EventEmitter<UploadOutput>;\n\n  upload: MDBUploaderService;\n  isServer: boolean = isPlatformServer(this.platform_id);\n  // el: HTMLInputElement;\n  el: HTMLInputElement | any;\n\n  constructor(@Inject(PLATFORM_ID) private platform_id: any, private elementRef: ElementRef) {\n    this.upload = new MDBUploaderService();\n    this.uploadOutput = new EventEmitter<UploadOutput>();\n  }\n\n  ngOnInit() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el = this.elementRef.nativeElement;\n    this.el.addEventListener('change', this.fileListener, false);\n\n    this.upload.serviceEvents.subscribe((event: UploadOutput) => {\n      this.uploadOutput.emit(event);\n    });\n\n    if (this.uploadInput instanceof EventEmitter) {\n      this.upload.initInputEvents(this.uploadInput);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el.removeEventListener('change', this.fileListener, false);\n    this.uploadInput.unsubscribe();\n  }\n\n  fileListener = () => {\n    this.upload.handleFiles(this.el.files);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, Input, Output, OnInit, OnDestroy, PLATFORM_ID, Inject, HostListener } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MDBUploaderService, UploadOutput, UploadInput } from '../classes/mdb-uploader.class';\n\n@Directive({\n  selector: '[mdbFileDrop]'\n})\nexport class MDBFileDropDirective implements OnInit, OnDestroy {\n  @Input() uploadInput: EventEmitter<UploadInput>;\n  @Output() uploadOutput: EventEmitter<UploadOutput>;\n\n  upload: MDBUploaderService;\n  isServer: boolean = isPlatformServer(this.platform_id);\n  el: HTMLInputElement;\n\n  constructor(@Inject(PLATFORM_ID) private platform_id: any, private elementRef: ElementRef) {\n    this.upload = new MDBUploaderService();\n    this.uploadOutput = new EventEmitter<UploadOutput>();\n  }\n\n  ngOnInit() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el = this.elementRef.nativeElement;\n\n    this.upload.serviceEvents.subscribe((event: UploadOutput) => {\n      this.uploadOutput.emit(event);\n    });\n\n    if (this.uploadInput instanceof EventEmitter) {\n      this.upload.initInputEvents(this.uploadInput);\n    }\n\n    this.el.addEventListener('drop', this.stopEvent, false);\n    this.el.addEventListener('dragenter', this.stopEvent, false);\n    this.el.addEventListener('dragover', this.stopEvent, false);\n    this.el.addEventListener('dragover', this.stopEvent, false);\n  }\n\n  ngOnDestroy() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.uploadInput.unsubscribe();\n  }\n\n  stopEvent = (e: Event) => {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  @HostListener('drop', ['$event'])\n  public onDrop(e: any) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const event: UploadOutput = { type: 'drop' };\n    this.uploadOutput.emit(event);\n    this.upload.handleFiles(e.dataTransfer.files);\n  }\n\n  @HostListener('dragover', ['$event'])\n  public onDragOver(e: Event) {\n    if (!e) {\n      return;\n    }\n\n    const event: UploadOutput = { type: 'dragOver' };\n    this.uploadOutput.emit(event);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public onDragLeave(e: Event) {\n    if (!e) {\n      return;\n    }\n\n    const event: UploadOutput = { type: 'dragOut' };\n    this.uploadOutput.emit(event);\n  }\n}\n","\nimport { EventEmitter } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n// import { Subscriber } from 'rxjs/Subscriber';\n\nexport interface UploaderOptions {\n  concurrency: number;\n  allowedContentTypes?: string[];\n  maxUploads?: number;\n}\n\nexport interface BlobFile extends Blob {\n  name: string;\n}\n\nexport enum UploadStatus {\n  Queue,\n  Uploading,\n  Done,\n  Cancelled\n}\n\nexport interface UploadProgress {\n  status: UploadStatus;\n  data?: {\n    percentage: number;\n    speed: number;\n    speedHuman: string;\n    startTime: number | null;\n    endTime: number | null;\n    eta: number | null;\n    etaHuman: string | null;\n  };\n}\n\nexport interface UploadFile {\n  id: string;\n  fileIndex: number;\n  lastModifiedDate: number;\n  name: string;\n  size: number;\n  type: string;\n  form: FormData;\n  progress: UploadProgress;\n  response?: any;\n  responseStatus?: number;\n  sub?: Subscription | any;\n  nativeFile?: File;\n  responseHeaders?: { [key: string]: string };\n}\n\nexport interface UploadOutput {\n  type: 'addedToQueue' | 'allAddedToQueue' | 'uploading' | 'done' | 'start' | 'cancelled' | 'dragOver'\n      | 'dragOut' | 'drop' | 'removed' | 'removedAll' | 'rejected';\n  file?: UploadFile;\n  nativeFile?: File;\n}\n\nexport interface UploadInput {\n  type: 'uploadAll' | 'uploadFile' | 'cancel' | 'cancelAll' | 'remove' | 'removeAll';\n  url?: string;\n  method?: string;\n  id?: string;\n  fieldName?: string;\n  fileIndex?: number;\n  file?: UploadFile;\n  data?: { [key: string]: string | Blob };\n  headers?: { [key: string]: string };\n  withCredentials?: boolean;\n}\n\nexport function humanizeBytes(bytes: number): string {\n  if (bytes === 0) {\n    return '0 Byte';\n  }\n\n  const k = 1024;\n  const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nexport class MDBUploaderService {\n  queue: UploadFile[];\n  serviceEvents: EventEmitter<UploadOutput>;\n  uploadScheduler: Subject<{ file: UploadFile, event: UploadInput }>;\n  subs: { id: string, sub: Subscription }[];\n  contentTypes: string[];\n  maxUploads: number;\n\n  constructor(\n    concurrency: number = Number.POSITIVE_INFINITY,\n    contentTypes: string[] = ['*'],\n    maxUploads: number = Number.POSITIVE_INFINITY) {\n    this.queue = [];\n    this.serviceEvents = new EventEmitter<UploadOutput>();\n    this.uploadScheduler = new Subject();\n    this.subs = [];\n    this.contentTypes = contentTypes;\n    this.maxUploads = maxUploads;\n\n    this.uploadScheduler\n      .pipe(\n        mergeMap(upload => this.startUpload(upload), concurrency)\n      )\n      .subscribe(uploadOutput => this.serviceEvents.emit(uploadOutput));\n  }\n\n  handleFiles(incomingFiles: FileList): void {\n    const allowedIncomingFiles: File[] = [].reduce.call(incomingFiles, (acc: File[], checkFile: File, i: number) => {\n      const futureQueueLength = acc.length + this.queue.length + 1;\n      if (this.isContentTypeAllowed(checkFile.type) && futureQueueLength <= this.maxUploads) {\n        acc = acc.concat(checkFile);\n      } else {\n        const rejectedFile: UploadFile = this.makeUploadFile(checkFile, i);\n        this.serviceEvents.emit({ type: 'rejected', file: rejectedFile });\n      }\n\n      return acc;\n    }, []);\n\n    this.queue.push(...[].map.call(allowedIncomingFiles, (file: File, i: number) => {\n      const uploadFile: UploadFile = this.makeUploadFile(file, i);\n      this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n      return uploadFile;\n    }));\n\n    this.serviceEvents.emit({ type: 'allAddedToQueue' });\n  }\n\n  initInputEvents(input: EventEmitter<UploadInput>): Subscription {\n    return input.subscribe((event: UploadInput) => {\n      switch (event.type) {\n        case 'uploadFile':\n          const uploadFileIndex = this.queue.findIndex(file => file === event.file);\n          if (uploadFileIndex !== -1 && event.file) {\n            this.uploadScheduler.next({ file: this.queue[uploadFileIndex], event: event });\n          }\n          break;\n        case 'uploadAll':\n          const files = this.queue.filter(file => file.progress.status === UploadStatus.Queue);\n          files.forEach(file => this.uploadScheduler.next({ file: file, event: event }));\n          break;\n        case 'cancel':\n          const id = event.id || null;\n          if (!id) {\n            return;\n          }\n\n          const index = this.subs.findIndex(sub => sub.id === id);\n          if (index !== -1 && this.subs[index].sub) {\n            this.subs[index].sub.unsubscribe();\n\n            const fileIndex = this.queue.findIndex(file => file.id === id);\n            if (fileIndex !== -1) {\n              this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n              this.serviceEvents.emit({ type: 'cancelled', file: this.queue[fileIndex] });\n            }\n          }\n          break;\n        case 'cancelAll':\n          this.subs.forEach(sub => {\n            if (sub.sub) {\n              sub.sub.unsubscribe();\n            }\n\n            const file = this.queue.find(uploadFile => uploadFile.id === sub.id);\n            if (file) {\n              file.progress.status = UploadStatus.Cancelled;\n              this.serviceEvents.emit({ type: 'cancelled', file: file });\n            }\n          });\n          break;\n        case 'remove':\n          if (!event.id) {\n            return;\n          }\n\n          const i = this.queue.findIndex(file => file.id === event.id);\n          if (i !== -1) {\n            const file = this.queue[i];\n            this.queue.splice(i, 1);\n            this.serviceEvents.emit({ type: 'removed', file: file });\n          }\n          break;\n        case 'removeAll':\n          if (this.queue.length) {\n            this.queue = [];\n            this.serviceEvents.emit({ type: 'removedAll' });\n          }\n          break;\n      }\n    });\n  }\n\n  startUpload(upload: { file: UploadFile, event: UploadInput }): Observable<UploadOutput> {\n    return new Observable(observer => {\n      const sub = this.uploadFile(upload.file, upload.event)\n        .subscribe(output => {\n          observer.next(output);\n        }, err => {\n          observer.error(err);\n          observer.complete();\n        }, () => {\n          observer.complete();\n        });\n\n      this.subs.push({ id: upload.file.id, sub: sub });\n    });\n  }\n\n  uploadFile(file: UploadFile, event: UploadInput): Observable<UploadOutput> {\n    return new Observable(observer => {\n      const url = event.url || '';\n      const method = event.method || 'POST';\n      const data = event.data || {};\n      const headers = event.headers || {};\n\n      const xhr = new XMLHttpRequest();\n      const time: number = new Date().getTime();\n      let progressStartTime: number = (file.progress.data && file.progress.data.startTime) || time;\n      let speed = 0;\n      let eta: number | null = null;\n\n      xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\n        if (e.lengthComputable) {\n          const percentage = Math.round((e.loaded * 100) / e.total);\n          const diff = new Date().getTime() - time;\n          speed = Math.round(e.loaded / diff * 1000);\n          progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n          eta = Math.ceil((e.total - e.loaded) / speed);\n\n          file.progress = {\n            status: UploadStatus.Uploading,\n            data: {\n              percentage: percentage,\n              speed: speed,\n              speedHuman: `${humanizeBytes(speed)}/s`,\n              startTime: progressStartTime,\n              endTime: null,\n              eta: eta,\n              etaHuman: this.secondsToHuman(eta)\n            }\n          };\n\n          observer.next({ type: 'uploading', file: file });\n        }\n      }, false);\n\n      xhr.upload.addEventListener('error', (e: Event) => {\n        observer.error(e);\n        observer.complete();\n      });\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          const speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n          file.progress = {\n            status: UploadStatus.Done,\n            data: {\n              percentage: 100,\n              speed: speedAverage,\n              speedHuman: `${humanizeBytes(speedAverage)}/s`,\n              startTime: progressStartTime,\n              endTime: new Date().getTime(),\n              eta: eta,\n              etaHuman: this.secondsToHuman(eta || 0)\n            }\n          };\n\n          file.responseStatus = xhr.status;\n\n          try {\n            file.response = JSON.parse(xhr.response);\n          } catch (e) {\n            file.response = xhr.response;\n          }\n\n          file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n\n          observer.next({ type: 'done', file: file });\n\n          observer.complete();\n        }\n      };\n\n      xhr.open(method, url, true);\n      xhr.withCredentials = event.withCredentials ? true : false;\n\n      try {\n        const uploadFile = <BlobFile>file.nativeFile;\n        const uploadIndex = this.queue.findIndex(outFile => outFile.nativeFile === uploadFile);\n\n        if (this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n          observer.complete();\n        }\n\n        Object.keys(data).forEach(key => file.form.append(key, data[key]));\n        Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));\n\n        file.form.append(event.fieldName || 'file', uploadFile, uploadFile.name);\n\n        this.serviceEvents.emit({ type: 'start', file: file });\n        xhr.send(file.form);\n      } catch (e) {\n        observer.complete();\n      }\n\n      return () => {\n        xhr.abort();\n      };\n    });\n  }\n\n  secondsToHuman(sec: number): string {\n    return new Date(sec * 1000).toISOString().substr(11, 8);\n  }\n\n  generateId(): string {\n    return Math.random().toString(36).substring(7);\n  }\n\n  setContentTypes(contentTypes: string[]): void {\n    if (typeof contentTypes !== 'undefined' && contentTypes instanceof Array) {\n      if (contentTypes.find((type: string) => type === '*') !== undefined) {\n        this.contentTypes = ['*'];\n      } else {\n        this.contentTypes = contentTypes;\n      }\n      return;\n    }\n    this.contentTypes = ['*'];\n  }\n\n  allContentTypesAllowed(): boolean {\n    return this.contentTypes.find((type: string) => type === '*') !== undefined;\n  }\n\n  isContentTypeAllowed(mimetype: string): boolean {\n    if (this.allContentTypesAllowed()) {\n      return true;\n    }\n    return this.contentTypes.find((type: string) => type === mimetype) !== undefined;\n  }\n\n  makeUploadFile(file: File, index: number): UploadFile {\n    return {\n      fileIndex: index,\n      id: this.generateId(),\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      form: new FormData(),\n      progress: {\n        status: UploadStatus.Queue,\n        data: {\n          percentage: 0,\n          speed: 0,\n          speedHuman: `${humanizeBytes(0)}/s`,\n          startTime: null,\n          endTime: null,\n          eta: null,\n          etaHuman: null\n        }\n      },\n      lastModifiedDate: file.lastModified,\n      sub: undefined,\n      nativeFile: file\n    };\n  }\n\n  private parseResponseHeaders(httpHeaders: ByteString) {\n    if (!httpHeaders) {\n      return;\n    }\n    return httpHeaders.split('\\n')\n      .map(x => x.split(/: */, 2))\n      .filter(x => x[0])\n      .reduce((ac: any, x) => {\n        ac[x[0]] = x[1];\n        return ac;\n      }, {});\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SimpleChartComponent } from './chart-simple.component';\nimport { EasyPieChartComponent } from './chart-smallpie.component';\n\n@NgModule({\n  declarations: [\n  SimpleChartComponent, EasyPieChartComponent\n  ],\n  exports: [\n   SimpleChartComponent, EasyPieChartComponent\n  ],\n  imports: [CommonModule]\n})\nexport class ChartSimpleModule {\n}\n","import { Component, ElementRef, OnInit, OnChanges, SimpleChanges, Input, Renderer2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n// import * as EasyPieChart from 'easy-pie-chart/dist/easypiechart.js';\ndeclare var EasyPieChart: any;\n\n@Component({\n  selector: 'mdb-easy-pie-chart',\n  template: '<div>Loading</div>'\n})\nexport class EasyPieChartComponent implements OnInit, OnChanges {\n  @Input('percent') percent: any;\n  @Input('options') options: any;\n  element: any;\n  pieChart: any;\n  isBrowser: any = false;\n\n  constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string, private _r: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.element = el;\n    const options = {\n      barColor: '#ef1e25',\n      trackColor: '#f9f9f9',\n      scaleColor: '#dfe0e0',\n      scaleLength: 5,\n      lineCap: 'round',\n      lineWidth: 3,\n      size: 110,\n      rotate: 0,\n      animate: {\n        duration: 1000,\n        enabled: true\n      }\n    };\n    this.options = Object.assign(options, this.options);\n  }\n\n  ngOnInit() {\n    if (this.isBrowser) {\n      const size = this.options.size;\n      this.element.nativeElement.innerHTML = '';\n      this.pieChart = new EasyPieChart(this.element.nativeElement, this.options);\n      this.pieChart.update(this.percent);\n      // Positioning text in center of chart\n      const percent = document.querySelector('.percent');\n      if (percent) {\n        this._r.setStyle(percent, 'line-height', size + 'px');\n        this._r.setStyle(percent, 'width', size + 'px');\n        this._r.setStyle(percent, 'height', size + 'px');\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['percent'].isFirstChange()) {\n      this.pieChart.update(this.percent);\n    }\n  }\n}\n","\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mdb-simple-chart',\n  template: \"<span class=\\\"min-chart\\\"> <span  *ngIf=\\\"customText\\\"   class=\\\"chart-custom-text\\\" [ngStyle]=\\\"{ 'line-height': size + 'px', 'width': size + 'px', 'height': size + 'px'}\\\">{{ customText }}</span> <span  *ngIf=\\\"!customText\\\"  class=\\\"percent\\\">{{ percent }}</span> <mdb-easy-pie-chart [percent]=\\\"percent\\\" [options]=\\\"options\\\"></mdb-easy-pie-chart> </span>\",\n  styles: []\n})\nexport class SimpleChartComponent implements OnInit {\n  @Input('customText') customText: string;\n  @Input('percent') percent: number;\n  @Input('barColor') barColor: string;\n  @Input('trackColor') trackColor: string;\n  @Input('scaleColor') scaleColor: string;\n  @Input('scaleLength') scaleLength: number;\n  @Input('lineCap') lineCap: string;\n  @Input('lineWidth') lineWidth: number;\n  @Input('trackWidth') trackWidth: number;\n  @Input('size') size: number;\n  @Input('rotate') rotate: number;\n  @Input('animate') animate: { duration: string, enabled: boolean};\n  public options: any = {\n    barColor: null,\n    trackColor: null,\n    scaleColor: null,\n    scaleLength: '',\n    lineCap: null,\n    lineWidth: null,\n    trackWidth: null,\n    size: null,\n    rotate: null,\n    duration: null,\n    enableAnimation: null,\n    animate: {\n       duration: 1000,\n       enabled: true\n     }\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.options.barColor = '#' + this.barColor;\n    this.options.trackColor = '#' + this.trackColor;\n    this.options.scaleColor = '#' + this.scaleColor;\n    this.options.scaleLength = this.scaleLength;\n    this.options.lineCap = this.lineCap;\n    this.options.lineWidth = this.lineWidth;\n    this.options.trackWidth = this.trackWidth;\n    this.options.size = this.size;\n    this.options.rotate = this.rotate;\n    this.options.animate.duration = this.animate.duration;\n    this.options.animate.enabled = this.animate.enabled;\n  }\n\n}\n\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MDBDatePickerComponent } from './datepicker.component';\nimport { FocusDirective } from './directives/datepickerFocus.directive';\nimport { InputAutoFillDirective } from './directives/datepickerAutofill.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MDBDatePickerComponent, FocusDirective, InputAutoFillDirective],\n  exports: [MDBDatePickerComponent, FocusDirective, InputAutoFillDirective]\n})\nexport class DatepickerModule {\n}\n","import { IMyLocales } from './interfaces/locale.interface';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  ViewEncapsulation,\n  // ChangeDetectorRef,\n  Renderer2,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  PLATFORM_ID,\n  Inject,\n  AfterContentChecked\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  IMyDate,\n  IMyDateRange,\n  IMyMonth,\n  IMyCalendarDay,\n  IMyWeek,\n  IMyDayLabels,\n  IMyMonthLabels,\n  IMyInputFieldChanged,\n  IMyCalendarViewChanged,\n  IMyInputFocusBlur,\n  IMyMarkedDates,\n  IMyMarkedDate,\n} from './interfaces/index';\nimport { LocaleService } from './services/datepickerLocale.service';\nimport { UtilService } from './services/datepickerUtil.service';\nimport { isPlatformBrowser } from '@angular/common';\nexport const MYDP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MDBDatePickerComponent),\n  multi: true\n};\n\nenum CalToggle { Open = 1, CloseByDateSel = 2, CloseByCalBtn = 3, CloseByOutClick = 4 }\nenum Year { min = 1000, max = 9999 }\nenum InputFocusBlur { focus = 1, blur = 2 }\nenum KeyCode { enter = 13, space = 32 }\nenum MonthId { prev = 1, curr = 2, next = 3 }\n\n@Component({\n  selector: 'mdb-date-picker',\n  exportAs: 'mdbdatepicker',\n  template: \"<!-- Line 27: Deleted (focus)=\\\"onFocusInput($event)\\\" for better use in Firefox. If other strange problems will occur, please paste it in line 27. --> <div class=\\\"mydp picker\\\" [ngClass]=\\\"{'picker--opened': showSelector}\\\" [ngStyle]=\\\"{'width': opts.width}\\\"> <div class=\\\"md-form\\\"> <label (click)=\\\"openBtnClicked()\\\" *ngIf=\\\"label.length > 0\\\" [ngClass]=\\\"{ 'active': checkActive(), 'disabled': opts.componentDisabled }\\\">{{ label }}</label> <input type=\\\"text\\\" class=\\\"form-control mydp-date\\\" [attr.aria-label]=\\\"opts.ariaLabelInputField\\\" (click)=\\\"openBtnClicked()\\\" [attr.maxlength]=\\\"opts.dateFormat.length\\\" [ngClass]=\\\"{ 'selectiondisabled': opts.componentDisabled, 'disabled': opts.componentDisabled }\\\" placeholder=\\\"{{ placeholder }}\\\" [ngModel]=\\\"selectionDayTxt\\\" (ngModelChange)=\\\"onUserDateInput($event)\\\" [value]=\\\"selectionDayTxt\\\" [ngStyle]=\\\"{ 'height': opts.height,  'font-size': opts.selectionTxtFontSize }\\\" (blur)=\\\"onBlurInput($event)\\\" [disabled]=\\\"opts.componentDisabled\\\" autocomplete=\\\"off\\\"> </div> <div class=\\\"selector picker__holder selectorarrow selectorarrowleft selectorarrowright\\\" #divFocus [ngClass]=\\\"{'alignselectorright': opts.alignSelectorRight}\\\" tabindex=\\\"0\\\"> <div class=\\\"picker__frame picker__box\\\" #pickerFrame> <div class=\\\"picker__header\\\"> <div class=\\\"picker__date-display\\\"> <div class=\\\"picker__weekday-display\\\"> {{ weekText(getWeekday(tmp)) }} </div> <div class=\\\"picker__month-display\\\"> <div>{{ monthText(tmp.month) }}</div> </div> <div class=\\\"picker__day-display\\\"> <div>{{ tmp.day }}</div> </div> <div class=\\\"picker__year-display\\\"> <div>{{ tmp.year }}</div> </div> </div> <select class=\\\"picker__select--year\\\" [(ngModel)]=\\\"visibleMonth.year\\\" (ngModelChange)=\\\"onUserYearInput($event)\\\" role=\\\"menu\\\" aria-label=\\\"Year selector\\\"> <option *ngFor=\\\"let year of years\\\" [value]=\\\"year\\\">{{ year }}</option> </select> <select class=\\\"picker__select--month\\\" [(ngModel)]=\\\"visibleMonth.monthTxt\\\" (ngModelChange)=\\\"onUserMonthInput($event)\\\" role=\\\"menu\\\" aria-label=\\\"Month selector\\\"> <option *ngFor=\\\"let month of months\\\" [value]=\\\"month.short\\\">{{ month.label }}</option> </select> <button class=\\\"picker__nav--prev\\\" data-nav=\\\"-1\\\" type=\\\"button\\\" aria-controls=\\\"date-picker-example_table\\\" title=\\\"Previous month\\\" (click)=\\\"prevMonth()\\\" [disabled]=\\\"prevMonthDisabled\\\" [ngClass]=\\\"{'headerbtnenabled': !prevMonthDisabled, 'headerbtndisabled': prevMonthDisabled}\\\"></button> <button class=\\\"picker__nav--next\\\" data-nav=\\\"1\\\" type=\\\"button\\\" aria-controls=\\\"date-picker-example_table\\\" title=\\\"Next month\\\" (click)=\\\"nextMonth()\\\" [disabled]=\\\"nextMonthDisabled\\\" [ngClass]=\\\"{'headerbtnenabled': !nextMonthDisabled, 'headerbtndisabled': nextMonthDisabled}\\\"></button> </div> <table class=\\\"picker__table\\\"> <thead> <tr> <th class=\\\"picker__weekday weekdaytitleweeknbr\\\" *ngIf=\\\"opts.showWeekNumbers&&opts.firstDayOfWeek==='mo'\\\">#</th> <th class=\\\"picker__weekday\\\" scope=\\\"col\\\" *ngFor=\\\"let d of weekDays\\\">{{d}}</th> </tr> </thead> <tbody> <tr *ngFor=\\\"let w of dates\\\"> <td class=\\\"picker__day daycellweeknbr\\\" *ngIf=\\\"opts.showWeekNumbers&&opts.firstDayOfWeek==='mo'\\\">{{w.weekNbr}}</td> <td class=\\\"picker__day\\\" *ngFor=\\\"let d of w.week\\\" [ngClass]=\\\"{'picker__day--infocus':d.cmo===currMonthId&&!d.disabled, 'disabled': d.disabled, 'tablesingleday': d.cmo===currMonthId&&!d.disabled}\\\"> <div *ngIf=\\\"d.markedDate.marked\\\" class=\\\"markdate\\\" [ngStyle]=\\\"{'background-color': d.markedDate.color}\\\"></div> <div class=\\\"picker__day\\\" [ngClass]=\\\"{'picker__day--infocus':d.cmo===currMonthId,'picker__day--outfocus': (d.cmo===nextMonthId || d.cmo===prevMonthId), 'picker__day--today':d.currDay&&opts.markCurrentDay, 'picker__day--selected picker__day--highlighted':selectedDate.day===d.dateObj.day && selectedDate.month===d.dateObj.month && selectedDate.year===d.dateObj.year && d.cmo===currMonthId}\\\" (click)=\\\"!d.disabled&&cellClicked(d);$event.stopPropagation()\\\" (keydown)=\\\"cellKeyDown($event, d)\\\" tabindex=\\\"0\\\"> {{d.dateObj.day}} </div> </td> </tr> </tbody> </table> <div class=\\\"picker__footer\\\"> <button type=\\\"button\\\" *ngIf=\\\"opts.showTodayBtn\\\" class=\\\"picker__button--today\\\" (click)=\\\"todayClicked()\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.todayBtnTxt\\\"> {{opts.todayBtnTxt}} </button> <button type=\\\"button\\\" *ngIf=\\\"opts.showClearDateBtn\\\" class=\\\"picker__button--clear\\\" (click)=\\\"removeBtnClicked()\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.clearBtnTxt\\\"> {{opts.clearBtnTxt}} </button> <button type=\\\"button\\\" [ngClass]=\\\"{'ml-auto': !opts.showTodayBtn}\\\" class=\\\"picker__button--close\\\" (click)=\\\"showSelector = false; removeInlineStyle();\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.closeBtnTxt\\\"> {{opts.closeBtnTxt}} </button> </div> </div> </div> </div>\",\n  providers: [LocaleService, UtilService, MYDP_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MDBDatePickerComponent implements OnChanges, ControlValueAccessor, AfterViewInit, AfterContentChecked {\n  @Input() options: any;\n  @Input() locale: string;\n  @Input() defaultMonth: string;\n  @Input() selDate: string;\n  @Input() label = '';\n  @Input() placeholder = '';\n  @Input() selector: number;\n  @Input() disabled: boolean;\n  @Output() dateChanged: EventEmitter<any> = new EventEmitter<any>();\n  @Output() inputFieldChanged: EventEmitter<IMyInputFieldChanged> = new EventEmitter<IMyInputFieldChanged>();\n  @Output() calendarViewChanged: EventEmitter<IMyCalendarViewChanged> = new EventEmitter<IMyCalendarViewChanged>();\n  @Output() calendarToggle: EventEmitter<number> = new EventEmitter<number>();\n  @Output() inputFocusBlur: EventEmitter<IMyInputFocusBlur> = new EventEmitter<IMyInputFocusBlur>();\n\n  @ViewChild('divFocus') public divFocus: any;\n  @ViewChild('pickerFrame') pickerFrame: ElementRef;\n  public isDateSelected = false;\n  public labelActive = false;\n  public showSelector = false;\n  public visibleMonth: IMyMonth = { monthTxt: '', monthNbr: 0, year: 1 };\n  public selectedMonth: IMyMonth = { monthTxt: '', monthNbr: 0, year: 0 };\n  public selectedDate: IMyDate = { year: 0, month: 0, day: 0 };\n  public weekDays: Array<string> = [];\n  public dates: Array<IMyWeek> = [];\n  public selectionDayTxt = '';\n  public invalidDate = false;\n  public disableTodayBtn = false;\n  public dayIdx = 0;\n  public weekDayOpts: Array<string> = ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'];\n\n  public editMonth = false;\n  public invalidMonth = false;\n  public editYear = false;\n  public invalidYear = false;\n\n  public prevMonthDisabled = false;\n  public nextMonthDisabled = false;\n  public prevYearDisabled = false;\n  public nextYearDisabled = false;\n\n  public prevMonthId: number = MonthId.prev;\n  public currMonthId: number = MonthId.curr;\n  public nextMonthId: number = MonthId.next;\n\n  public tmp: IMyDate = { year: this.getToday().year, month: this.getToday().month, day: this.getToday().day };\n\n  // Default options\n  public opts: any = {\n    startDate: <string>'',\n    closeAfterSelect: <boolean>false,\n    dayLabelsFull: <IMyDayLabels>{},\n    dayLabels: <IMyDayLabels>{},\n    monthLabelsFull: <IMyMonthLabels>{},\n    monthLabels: <IMyMonthLabels>{},\n    dateFormat: <string>'',\n    showTodayBtn: <boolean>true,\n    todayBtnTxt: <string>'',\n    firstDayOfWeek: <string>'',\n    sunHighlight: <boolean>true,\n    markCurrentDay: <boolean>true,\n    disableUntil: <IMyDate>{ year: 0, month: 0, day: 0 },\n    disableSince: <IMyDate>{ year: 0, month: 0, day: 0 },\n    disableDays: <Array<IMyDate>>[],\n    enableDays: <Array<IMyDate>>[],\n    markDates: <Array<IMyMarkedDates>>[],\n    markWeekends: <IMyMarkedDate>{},\n    disableDateRanges: <Array<IMyDateRange>>[],\n    disableWeekends: <boolean>false,\n    showWeekNumbers: <boolean>false,\n    height: <string>'32px',\n    width: <string>'100%',\n    selectionTxtFontSize: <string>'1rem',\n    showClearDateBtn: <boolean>true,\n    alignSelectorRight: <boolean>false,\n    disableHeaderButtons: <boolean>true,\n    minYear: <number>Year.min,\n    maxYear: <number>Year.max,\n    componentDisabled: <boolean>false,\n    showSelectorArrow: <boolean>true,\n    ariaLabelInputField: <string>'Date input field',\n    ariaLabelClearDate: <string>'Clear Date',\n    ariaLabelOpenCalendar: <string>'Open Calendar',\n    ariaLabelPrevMonth: <string>'Previous Month',\n    ariaLabelNextMonth: <string>'Next Month',\n    ariaLabelPrevYear: <string>'Previous Year',\n    ariaLabelNextYear: <string>'Next Year'\n  };\n\n\n  public months: any = [];\n  public years: any = [];\n  public elements = document.getElementsByClassName('mydp picker');\n  public elementNumber: any;\n\n  firstTimeOpenedModal = true;\n  modalHeightBefore: any = null;\n  isMobile: any = null;\n  isBrowser: any = false;\n\n  constructor(public elem: ElementRef,\n    private renderer: Renderer2,\n    // private cdr: ChangeDetectorRef,\n    private localeService: LocaleService,\n    private utilService: UtilService,\n    @Inject(PLATFORM_ID) platformId: string\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    }\n    this.setLocaleOptions();\n    renderer.listen(this.elem.nativeElement, 'click', (event: any) => {\n      if (this.showSelector &&\n        event.target &&\n        this.elem.nativeElement !== event.target &&\n        !this.elem.nativeElement.contains(event.target)\n      ) {\n        this.removeInlineStyle();\n        this.showSelector = false;\n        this.calendarToggle.emit(CalToggle.CloseByOutClick);\n      }\n      if (event.target.classList.contains('picker__holder')) {\n        this.removeInlineStyle();\n        this.showSelector = false;\n      }\n      if (true && event.target && this.elem.nativeElement.contains(event.target)) {\n        this.resetMonthYearEdit();\n      }\n    });\n  }\n\n\n  ngAfterViewInit() {\n\n    if (this.opts.startDate) {\n      setTimeout(() => {\n        this.onUserDateInput(this.opts.startDate);\n      }, 0);\n    }\n  }\n\n\n\n  ngAfterContentChecked() {\n    if (this.isBrowser) {\n      // Fix for visible date / time picker input when picker plate is visible.\n      try {\n        const openedPicker: any = document.querySelector('.picker--opened');\n        const allPickers: any = document.querySelectorAll('.picker');\n        allPickers.forEach((element: any) => {\n          this.renderer.setStyle(element, 'z-index', '0');\n        });\n        this.renderer.setStyle(openedPicker, 'z-index', '1');\n      } catch (error) { }\n    }\n  }\n\n  onChangeCb: (_: any) => void = () => { };\n  onTouchedCb: () => void = () => { };\n\n  removeInlineStyle() {\n    try {\n      if (this.elem.nativeElement.parentElement.parentElement.classList.contains('modal-content')) {\n        this.renderer.setStyle(this.elem.nativeElement.parentElement.parentElement, 'transition', 'height 0.3s');\n        this.elem.nativeElement.parentElement.parentElement.style.height = this.modalHeightBefore + 'px';\n      }\n    } catch (error) { }\n    setTimeout(() => {\n      document.documentElement.style.removeProperty('overflow');\n    }, 155);\n    this.labelActive = false;\n  }\n\n  setLocaleOptions(): void {\n    const opts: any = this.localeService.getLocaleOptions(this.locale);\n    Object.keys(opts).forEach((k) => {\n      this.opts[k] = opts[k];\n    });\n  }\n\n  addLocale(locale: IMyLocales) {\n    this.localeService.locales = Object.assign({}, this.localeService.locales, locale);\n    setTimeout(() => {\n      this.setLocaleOptions();\n    }, 0);\n  }\n\n  setOptions(): void {\n    const thisYear = new Date();\n    const currentYear = thisYear.getFullYear();\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        this.opts[k] = this.options[k];\n      });\n    }\n    if (this.disabled !== undefined) {\n      this.opts.componentDisabled = this.disabled;\n    }\n\n    if (this.opts.minYear === 1000) {\n      this.opts.minYear = currentYear - 7;\n    }\n\n    if (this.opts.maxYear === 9999) {\n      this.opts.maxYear = currentYear + 7;\n    }\n  }\n\n  resetMonthYearEdit(): void {\n    this.editMonth = false;\n    this.editYear = false;\n    this.invalidMonth = false;\n    this.invalidYear = false;\n  }\n\n  onUserDateInput(value: string): void {\n    this.invalidDate = false;\n    if (value.length === 0) {\n      this.clearDate();\n    } else {\n      const date: IMyDate = this.utilService.isDateValid(value,\n        this.opts.dateFormat,\n        this.opts.minYear,\n        this.opts.maxYear,\n        this.opts.disableUntil,\n        this.opts.disableSince,\n        this.opts.disableWeekends,\n        this.opts.disableDays,\n        this.opts.disableDateRanges,\n        this.opts.monthLabels,\n        this.opts.enableDays);\n\n      if (date.day !== 0 && date.month !== 0 && date.year !== 0) {\n        this.selectDate(date);\n      } else {\n        this.invalidDate = true;\n      }\n    }\n    if (this.invalidDate) {\n      this.inputFieldChanged.emit({ value: value, dateFormat: this.opts.dateFormat, valid: !(value.length === 0 || this.invalidDate) });\n      this.onChangeCb('');\n      this.onTouchedCb();\n    }\n  }\n\n  onFocusInput(event: any): void {\n\n    this.openBtnClicked();\n    this.inputFocusBlur.emit({ reason: InputFocusBlur.focus, value: event.target.value });\n    document.documentElement.style.overflow = 'hidden';\n    this.divFocus.nativeElement.focus();\n\n  }\n\n  onBlurInput(event: any): void {\n    this.selectionDayTxt = event.target.value;\n    this.onTouchedCb();\n    this.inputFocusBlur.emit({ reason: InputFocusBlur.blur, value: event.target.value });\n  }\n\n  onUserMonthInput(value: string): void {\n    this.invalidMonth = false;\n    const m: number = this.utilService.isMonthLabelValid(value, this.opts.monthLabels);\n    if (m !== -1) {\n      this.editMonth = false;\n      if (m !== this.visibleMonth.monthNbr) {\n        this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: this.visibleMonth.year };\n        this.generateCalendar(m, this.visibleMonth.year, true);\n      }\n    } else {\n      this.invalidMonth = true;\n    }\n  }\n\n  onUserYearInput(value: string): void {\n    this.invalidYear = false;\n    const y: number = this.utilService.isYearLabelValid(Number(value), this.opts.minYear, this.opts.maxYear);\n    if (y !== -1) {\n      this.editYear = false;\n      if (y !== this.visibleMonth.year) {\n        this.visibleMonth = { monthTxt: this.visibleMonth.monthTxt, monthNbr: this.visibleMonth.monthNbr, year: y };\n        this.generateCalendar(this.visibleMonth.monthNbr, y, true);\n      }\n    } else {\n      this.invalidYear = true;\n    }\n  }\n\n  isTodayDisabled(): void {\n    this.disableTodayBtn = this.utilService.isDisabledDay(this.getToday(),\n      this.opts.disableUntil,\n      this.opts.disableSince,\n      this.opts.disableWeekends,\n      this.opts.disableDays,\n      this.opts.disableDateRanges,\n      this.opts.enableDays);\n  }\n\n  parseOptions(): void {\n    if (this.locale) {\n      this.setLocaleOptions();\n    }\n    this.setOptions();\n    this.isTodayDisabled();\n    this.dayIdx = this.weekDayOpts.indexOf(this.opts.firstDayOfWeek);\n    if (this.dayIdx !== -1) {\n      let idx: number = this.dayIdx;\n      for (let i = 0; i < this.weekDayOpts.length; i++) {\n        this.weekDays.push(this.opts.dayLabels[this.weekDayOpts[idx]]);\n        idx = this.weekDayOpts[idx] === 'sa' ? 0 : idx + 1;\n      }\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && typeof value === 'string') {\n      this.updateDateValue(this.parseSelectedDate(value), false);\n    } else if (value && value['date']) {\n      this.updateDateValue(this.parseSelectedDate(value['date']), false);\n    } else if (value === '' || value === null) {\n      this.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCb = fn;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('selector') && changes['selector'].currentValue > 0) {\n      this.openBtnClicked();\n    }\n\n    if (changes.hasOwnProperty('placeholder')) {\n      this.placeholder = changes['placeholder'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('locale')) {\n      this.locale = changes['locale'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this.disabled = changes['disabled'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('options')) {\n      this.options = changes['options'].currentValue;\n      if (changes.options.currentValue.startDate) {\n        this.onUserDateInput(changes.options.currentValue.startDate);\n      }\n    }\n\n    this.weekDays.length = 0;\n    this.parseOptions();\n\n    if (changes.hasOwnProperty('defaultMonth')) {\n      const dm: string = changes['defaultMonth'].currentValue;\n      if (dm !== null && dm !== undefined && dm !== '') {\n        this.selectedMonth = this.parseSelectedMonth(dm);\n      } else {\n        this.selectedMonth = { monthTxt: '', monthNbr: 0, year: 0 };\n      }\n    }\n\n    if (changes.hasOwnProperty('selDate')) {\n      const sd: any = changes['selDate'];\n      if (sd.currentValue !== null &&\n        sd.currentValue !== undefined &&\n        sd.currentValue !== '' &&\n        Object.keys(sd.currentValue).length !== 0\n      ) {\n        this.selectedDate = this.parseSelectedDate(sd.currentValue);\n        setTimeout(() => {\n          this.onChangeCb(this.getDateModel(this.selectedDate));\n        });\n        this.isDateSelected = true;\n      } else {\n        // Do not clear on init\n        if (!sd.isFirstChange()) {\n          this.clearDate();\n        }\n      }\n    }\n\n    if (this.showSelector) {\n      this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, false);\n    }\n  }\n\n  // Fix for situation, when on mobile devices keyboard was released when datepicker modal was active\n  hideKeyboard() {\n    // this set timeout needed for case when hideKeyborad\n    // is called inside of 'onfocus' event handler\n    try {\n      setTimeout(() => {\n        // creating temp field\n        // const field = document.createElement('input');\n        const field = this.renderer.createElement('input');\n        this.renderer.appendChild(this.elem.nativeElement, field);\n        const inputReference = this.elem.nativeElement.lastElementChild;\n        this.renderer.setAttribute(inputReference, 'type', 'text');\n        this.renderer.setAttribute(inputReference, 'type', 'text');\n        this.renderer.setStyle(inputReference, 'opacity', '0');\n        this.renderer.setStyle(inputReference, '-webkit-user-modify', 'read-write-plaintext-only');\n        // // hiding temp field from peoples eyes\n        // // -webkit-user-modify is nessesary for Android 4.x\n        // adding onfocus event handler for out temp field\n        field.onfocus = () => {\n          // this timeout of 200ms is nessasary for Android 2.3.x\n          setTimeout(() => {\n\n            this.renderer.setStyle(field, 'display', 'none');\n            setTimeout(() => {\n              this.renderer.removeChild(this.elem.nativeElement, field);\n              document.body.focus();\n            }, 0);\n\n          }, 0);\n        };\n        // focusing it\n        field.focus();\n\n      }, 0);\n    } catch (error) {\n\n    }\n  }\n\n  removeBtnClicked(): void {\n    // Remove date button clicked\n    this.clearDate();\n    if (this.showSelector) {\n      this.calendarToggle.emit(CalToggle.CloseByCalBtn);\n    }\n    this.isDateSelected = false;\n    // this.showSelector = false;\n  }\n\n  openBtnClicked(): void {\n    try {\n      if (this.elem.nativeElement.parentElement.parentElement.classList.contains('modal-content')) {\n        if (this.firstTimeOpenedModal) {\n          this.modalHeightBefore = this.elem.nativeElement.parentElement.parentElement.offsetHeight;\n        }\n        this.firstTimeOpenedModal = false;\n        this.renderer.setStyle(this.elem.nativeElement.parentElement.parentElement, 'transition', 'height 0.3s');\n        // tslint:disable-next-line:max-line-length\n        this.elem.nativeElement.parentElement.parentElement.style.height = this.modalHeightBefore + this.pickerFrame.nativeElement.offsetHeight + 'px';\n      }\n    } catch (error) { }\n    // Open selector button clicked\n    this.showSelector = !this.showSelector;\n    if (this.showSelector) {\n      this.setVisibleMonth();\n      this.calendarToggle.emit(CalToggle.Open);\n\n    } else {\n      this.calendarToggle.emit(CalToggle.CloseByCalBtn);\n    }\n    if (this.isMobile) {\n      this.hideKeyboard();\n    }\n    this.labelActive = true;\n  }\n\n  setVisibleMonth(): void {\n    // Sets visible month of calendar\n    let y = 0, m = 0;\n    if (!this.utilService.isInitializedDate(this.selectedDate)) {\n      if (this.selectedMonth.year === 0 && this.selectedMonth.monthNbr === 0) {\n        const today: IMyDate = this.getToday();\n        y = today.year;\n        m = today.month;\n      } else {\n        y = this.selectedMonth.year;\n        m = this.selectedMonth.monthNbr;\n      }\n    } else {\n      y = this.selectedDate.year;\n      m = this.selectedDate.month;\n    }\n    this.visibleMonth = { monthTxt: this.opts.monthLabels[m], monthNbr: m, year: y };\n\n    // Create current month\n    this.generateCalendar(m, y, true);\n  }\n\n  monthList(): void {\n    this.months = [];\n    for (let i = 1; i <= 12; i++) {\n      this.months.push({ index: i, short: this.opts.monthLabels[i], label: this.opts.monthLabelsFull[i] });\n    }\n  }\n\n  yearsList(): void {\n    this.years = [];\n\n    const firstYear = this.opts.minYear;\n    const lastYear = this.opts.maxYear;\n\n    for (let i = firstYear; i <= lastYear; i++) {\n      this.years.push(i);\n    }\n  }\n\n  prevMonth(): void {\n    // Previous month from calendar\n    const d: Date = this.getDate(this.visibleMonth.year, this.visibleMonth.monthNbr, 1);\n    d.setMonth(d.getMonth() - 1);\n\n    const y: number = d.getFullYear();\n    const m: number = d.getMonth() + 1;\n\n    this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: y };\n    this.generateCalendar(m, y, true);\n  }\n\n  nextMonth(): void {\n    // Next month from calendar\n    const d: Date = this.getDate(this.visibleMonth.year, this.visibleMonth.monthNbr, 1);\n    d.setMonth(d.getMonth() + 1);\n\n    const y: number = d.getFullYear();\n    const m: number = d.getMonth() + 1;\n\n    this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: y };\n    this.generateCalendar(m, y, true);\n  }\n\n  prevYear(): void {\n    // Previous year from calendar\n    this.visibleMonth.year--;\n    this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, true);\n  }\n\n  nextYear(): void {\n    // Next year from calendar\n    this.visibleMonth.year++;\n    this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, true);\n  }\n\n  todayClicked(): void {\n    // Today button clicked\n    const today: IMyDate = this.getToday();\n    if (!this.utilService.isDisabledDay(today,\n      this.opts.disableUntil,\n      this.opts.disableSince,\n      this.opts.disableWeekends,\n      this.opts.disableDays,\n      this.opts.disableDateRanges,\n      this.opts.enableDays)\n    ) {\n      this.selectDate(today);\n    }\n    if (today.year !== this.visibleMonth.year || today.month !== this.visibleMonth.monthNbr) {\n      this.visibleMonth = { monthTxt: this.opts.monthLabels[today.month], monthNbr: today.month, year: today.year };\n      this.generateCalendar(today.month, today.year, true);\n    }\n  }\n\n  cellClicked(cell: any): void {\n    // Cell clicked on the calendar\n    if (cell.cmo === this.prevMonthId) {\n      // Previous month day\n      this.prevMonth();\n    } else if (cell.cmo === this.currMonthId) {\n      // Current month day - if date is already selected clear it\n      if (cell.dateObj.year === this.selectedDate.year &&\n        cell.dateObj.month === this.selectedDate.month &&\n        cell.dateObj.day === this.selectedDate.day\n      ) {\n        this.clearDate();\n      } else {\n        this.selectDate(cell.dateObj);\n      }\n    } else if (cell.cmo === this.nextMonthId) {\n      // Next month day\n      this.nextMonth();\n    }\n    this.resetMonthYearEdit();\n  }\n\n  cellKeyDown(event: any, cell: any) {\n    // Cell keyboard handling\n    if ((event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) && !cell.disabled) {\n      event.preventDefault();\n      this.cellClicked(cell);\n    }\n  }\n\n  clearDate(): void {\n    // Clears the date and notifies parent using callbacks and value accessor\n    const date: IMyDate = { year: 0, month: 0, day: 0 };\n    this.dateChanged.emit({ date: date, jsdate: null, formatted: '', epoc: 0 });\n    this.onChangeCb('');\n    this.onTouchedCb();\n    this.updateDateValue(date, true);\n    this.tmp = { year: this.getToday().year, month: this.getToday().month, day: this.getToday().day };\n    this.setVisibleMonth();\n    this.labelActive = false;\n  }\n\n  selectDate(date: IMyDate): void {\n    // Date selected, notifies parent using callbacks and value accessor\n    this.tmp = date;\n    const dateModel: any = this.getDateModel(date);\n    // this.dateChanged.emit({ previousDate: this.selectionDayTxt, actualDate: dateModel });\n    this.dateChanged.emit({\n      date: date,\n      jsdate: null,\n      previousDateFormatted: this.selectionDayTxt,\n      actualDateFormatted: dateModel,\n      epoc: 0\n    });\n    this.onChangeCb(dateModel);\n    this.onTouchedCb();\n    this.updateDateValue(date, false);\n    if (this.showSelector) {\n      this.calendarToggle.emit(CalToggle.CloseByDateSel);\n\n    }\n    if (this.opts.closeAfterSelect) {\n      this.showSelector = false;\n      this.removeInlineStyle();\n    }\n    this.labelActive = true;\n    // hide calendar when date was clicked\n    // this.showSelector = false;\n  }\n\n  updateDateValue(date: IMyDate, clear: boolean): void {\n    // Updates date values\n    this.selectedDate = date;\n    this.tmp = date;\n    this.isDateSelected = true;\n    this.selectionDayTxt = clear ? '' : this.formatDate(date);\n    this.inputFieldChanged.emit({ value: this.selectionDayTxt, dateFormat: this.opts.dateFormat, valid: !clear });\n    this.invalidDate = false;\n  }\n\n  getDateModel(date: IMyDate): any {\n    // Creates a date model object from the given parameter\n    return this.formatDate(date);\n  }\n\n  preZero(val: string): string {\n    // Prepend zero if smaller than 10\n    return parseInt(val, 0) < 10 ? '0' + val : val;\n  }\n\n  formatDate(val: any): string {\n    // Returns formatted date string, if mmm is part of dateFormat returns month as a string\n    // days\n    const d = val.day; // 1 - 31\n    const dd = this.preZero(val.day); // 01 - 31\n    const ddd = this.opts.dayLabels[this.getWeekday(val)]; // Sun-Sat\n    const dddd = this.opts.dayLabelsFull[this.getWeekday(val)]; // Sunday – Saturday\n    const m = val.month; // 1 - 12\n    const mm = this.preZero(val.month); // 01 - 12\n    const mmm = this.getMonthShort(val.month); // Jan - Dec\n    const mmmm = this.getMonthFull(val.month); // January – December\n    const yy = val.year.toString().length === 2 ? val.year : val.year.toString().slice(2, 4); // 00 - 99\n    const yyyy = val.year;\n\n    const toReplace = this.opts.dateFormat.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g);\n    let formatted = '';\n    toReplace.forEach((el: any) => {\n      switch (el) {\n        case 'dddd':\n          el = el.replace(el, dddd);\n          break;\n        case 'ddd':\n          el = el.replace(el, ddd);\n          break;\n        case 'dd':\n          el = el.replace(el, dd);\n          break;\n        case 'd':\n          el = el.replace(el, d);\n          break;\n        case 'mmmm':\n          el = el.replace(el, mmmm);\n          break;\n        case 'mmm':\n          el = el.replace(el, mmm);\n          break;\n        case 'mm':\n          el = el.replace(el, mm);\n          break;\n        case 'm':\n          el = el.replace(el, m);\n          break;\n        case 'yyyy':\n          el = el.replace(el, yyyy);\n          break;\n        case 'yy':\n          el = el.replace(el, yy);\n          break;\n      }\n      formatted += el;\n    });\n\n    return formatted;\n  }\n\n  monthText(m: number): string {\n    // Returns month as a text\n    return this.opts.monthLabels[m];\n  }\n\n  weekText(m: string): string {\n    // Returns month as a text\n    return this.opts.dayLabelsFull[m];\n  }\n\n  getMonthShort(m: number): string {\n    return this.opts.monthLabels[m];\n  }\n\n  getMonthFull(m: number): string {\n    return this.opts.monthLabelsFull[m];\n  }\n\n  monthStartIdx(y: number, m: number): number {\n    // Month start index\n    const d = new Date();\n    d.setDate(1);\n    d.setMonth(m - 1);\n    d.setFullYear(y);\n    const idx = d.getDay() + this.sundayIdx();\n    return idx >= 7 ? idx - 7 : idx;\n  }\n\n  daysInMonth(m: number, y: number): number {\n    // Return number of days of current month\n    return new Date(y, m, 0).getDate();\n  }\n\n  daysInPrevMonth(m: number, y: number): number {\n    // Return number of days of the previous month\n    const d: Date = this.getDate(y, m, 1);\n    d.setMonth(d.getMonth() - 1);\n    return this.daysInMonth(d.getMonth() + 1, d.getFullYear());\n  }\n\n  isCurrDay(d: number, m: number, y: number, cmo: number, today: IMyDate): boolean {\n    // Check is a given date the today\n    return d === today.day && m === today.month && y === today.year && cmo === this.currMonthId;\n  }\n\n  getToday(): IMyDate {\n    const date: Date = new Date();\n    return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n  }\n\n  getTimeInMilliseconds(date: IMyDate): number {\n    return this.getDate(date.year, date.month, date.day).getTime();\n  }\n\n  getWeekday(date: IMyDate): string {\n    // Get weekday: su, mo, tu, we ...\n    return this.weekDayOpts[this.utilService.getDayNumber(date)];\n  }\n\n  getDate(year: number, month: number, day: number): Date {\n    // Creates a date object from given year, month and day\n    return new Date(year, month - 1, day, 0, 0, 0, 0);\n  }\n\n  sundayIdx(): number {\n    // Index of Sunday day\n    return this.dayIdx > 0 ? 7 - this.dayIdx : 0;\n  }\n\n  generateCalendar(m: number, y: number, notifyChange: boolean): void {\n    this.dates.length = 0;\n    const today: IMyDate = this.getToday();\n    const monthStart: number = this.monthStartIdx(y, m);\n    const dInThisM: number = this.daysInMonth(m, y);\n    const dInPrevM: number = this.daysInPrevMonth(m, y);\n\n    let dayNbr = 1;\n    let cmo: number = this.prevMonthId;\n    for (let i = 1; i < 7; i++) {\n      const week: Array<IMyCalendarDay> = [];\n      if (i === 1) {\n        // First week\n        const pm = dInPrevM - monthStart + 1;\n        // Previous month\n        for (let j = pm; j <= dInPrevM; j++) {\n          const date: IMyDate = { year: y, month: m - 1, day: j };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(j, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n        }\n\n        cmo = this.currMonthId;\n        // Current month\n        const daysLeft: number = 7 - week.length;\n        for (let j = 0; j < daysLeft; j++) {\n          const date: IMyDate = { year: y, month: m, day: dayNbr };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(dayNbr, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n          dayNbr++;\n        }\n      } else {\n        // Rest of the weeks\n        for (let j = 1; j < 8; j++) {\n          if (dayNbr > dInThisM) {\n            // Next month\n            dayNbr = 1;\n            cmo = this.nextMonthId;\n          }\n          const date: IMyDate = { year: y, month: cmo === this.currMonthId ? m : m + 1, day: dayNbr };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(dayNbr, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n          dayNbr++;\n        }\n      }\n      const weekNbr: number = this.opts.showWeekNumbers &&\n        this.opts.firstDayOfWeek === 'mo' ?\n        this.utilService.getWeekNumber(week[0].dateObj) : 0;\n      this.dates.push({ week: week, weekNbr: weekNbr });\n    }\n\n    this.setHeaderBtnDisabledState(m, y);\n\n    if (notifyChange) {\n      // Notify parent\n      this.calendarViewChanged.emit({\n        year: y,\n        month: m,\n        first: {\n          number: 1,\n          weekday: this.getWeekday({\n            year: y,\n            month: m,\n            day: 1\n          })\n        },\n        last: {\n          number: dInThisM,\n          weekday: this.getWeekday({\n            year: y,\n            month: m,\n            day: dInThisM\n          })\n        }\n      });\n    }\n\n    this.monthList();\n    this.yearsList();\n  }\n\n  parseSelectedDate(selDate: any): IMyDate {\n    // Parse selDate value - it can be string or IMyDate object\n    let date: IMyDate = { day: 0, month: 0, year: 0 };\n    if (typeof selDate === 'string') {\n      const sd: string = <string>selDate;\n      date.day = this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'dd');\n\n      date.month = this.opts.dateFormat.indexOf('mmm') !== -1\n        ? this.utilService.parseDatePartMonthName(this.opts.dateFormat, sd, 'mmm', this.opts.monthLabels)\n        : this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'mm');\n\n      date.year = this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'yyyy');\n    } else if (typeof selDate === 'object') {\n      date = selDate;\n    }\n    this.selectionDayTxt = this.formatDate(date);\n    return date;\n  }\n\n  parseSelectedMonth(ms: string): IMyMonth {\n    return this.utilService.parseDefaultMonth(ms);\n  }\n\n  setHeaderBtnDisabledState(m: number, y: number): void {\n    let dpm = false;\n    let dpy = false;\n    let dnm = false;\n    let dny = false;\n    if (this.opts.disableHeaderButtons) {\n      dpm = this.utilService.isMonthDisabledByDisableUntil({\n        year: m === 1 ? y - 1 : y,\n        month: m === 1 ? 12 : m - 1,\n        day: this.daysInMonth(m === 1 ? 12 : m - 1, m === 1 ? y - 1 : y)\n      },\n        this.opts.disableUntil);\n      dpy = this.utilService.isMonthDisabledByDisableUntil({\n        year: y - 1,\n        month: m,\n        day: this.daysInMonth(m, y - 1)\n      },\n        this.opts.disableUntil);\n      dnm = this.utilService.isMonthDisabledByDisableSince({\n        year: m === 12 ? y + 1 : y,\n        month: m === 12 ? 1 : m + 1,\n        day: 1\n      },\n        this.opts.disableSince);\n      dny = this.utilService.isMonthDisabledByDisableSince({ year: y + 1, month: m, day: 1 }, this.opts.disableSince);\n    }\n    this.prevMonthDisabled = m === 1 && y === this.opts.minYear || dpm;\n    this.prevYearDisabled = y - 1 < this.opts.minYear || dpy;\n    this.nextMonthDisabled = m === 12 && y === this.opts.maxYear || dnm;\n    this.nextYearDisabled = y + 1 > this.opts.maxYear || dny;\n  }\n\n  checkActive() {\n    if (this.placeholder.length > 0) {\n      return true;\n    }\n    if (this.labelActive) {\n      return true;\n    }\n    if (this.isDateSelected) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IMyDate } from '../interfaces/date.interface';\nimport { IMyDateRange } from '../interfaces/dateRange.interface';\nimport { IMyMonth } from '../interfaces/month.interface';\nimport { IMyMonthLabels } from '../interfaces/monthLabels.interface';\nimport { IMyMarkedDates } from '../interfaces/markedDates.interface';\nimport { IMyMarkedDate } from '../interfaces/markedDate.interface';\nimport { IMyDateFormat } from '../interfaces/my-date-format.interface';\n\nconst M = 'm';\n/* const MM = 'mm'; */\n/* const MMM = 'mmm'; */\nconst D = 'd';\n/* const DD = 'dd'; */\n/* const YYYY = 'yyyy'; */\n\n@Injectable()\nexport class UtilService {\n  isDateValid(dateStr: string,\n    dateFormat: string,\n    minYear: number,\n    maxYear: number,\n    disableUntil: IMyDate,\n    disableSince: IMyDate,\n    disableWeekends: boolean,\n    disableDays: Array<IMyDate>,\n    disableDateRanges: Array<IMyDateRange>,\n    monthLabels: IMyMonthLabels,\n    enableDays: Array<IMyDate>\n    ): IMyDate {\n    const returnDate: IMyDate = {day: 0, month: 0, year: 0};\n    const daysInMonth: Array<number> = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    /* const isMonthStr: boolean = dateFormat.indexOf(MMM) !== -1; */\n    if (monthLabels === undefined) {}\n\n    const delimeters: Array<string> = this.getDateFormatDelimeters(dateFormat);\n\n    const dateValue: Array<IMyDateFormat> = this.getDateValue(dateStr, dateFormat, delimeters);\n    const year: number = +dateValue[0].value;\n    const month: number = this.getNumberByValue(dateValue[1]);\n    const day: number = this.getNumberByValue(dateValue[2]);\n\n    if (day !== -1 && month !== -1 && year !== -1) {\n      if (year < minYear || year > maxYear || month < 1 || month > 12) {\n        return returnDate;\n      }\n\n      const date: IMyDate = {year: year, month: month, day: day};\n\n      if (this.isDisabledDay(date, disableUntil, disableSince, disableWeekends, disableDays, disableDateRanges, enableDays)) {\n        return returnDate;\n      }\n\n      if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\n        daysInMonth[1] = 29;\n      }\n\n      if (day < 1 || day > daysInMonth[month - 1]) {\n        return returnDate;\n      }\n\n      // Valid date\n      return date;\n    }\n    return returnDate;\n  }\n\n  getDateValue(dateStr: string, dateFormat: string, delimeters: Array<string>): Array<IMyDateFormat> {\n    let del: string = delimeters[0];\n    if (delimeters[0] !== delimeters[1]) {\n        del = delimeters[0] + delimeters[1];\n    }\n    const re: any = new RegExp('[' + del + ']');\n    const ds: Array<string> = dateStr.split(re);\n    const df: Array<string> = dateFormat.split(re);\n    const da: Array<IMyDateFormat> = [];\n\n    for (let i = 0; i < df.length; i++) {\n        if (df[i].indexOf('yy') !== -1) {\n            da[0] = {value: ds[i], format: df[i]};\n        }\n        if (df[i].indexOf(M) !== -1) {\n            da[1] = {value: ds[i], format: df[i]};\n        }\n        if (df[i].indexOf(D) !== -1) {\n            da[2] = {value: ds[i], format: df[i]};\n        }\n    }\n    return da;\n}\n\ngetMonthNumberByMonthName(df: IMyDateFormat, monthLabels: IMyMonthLabels): number {\n  if (df.value) {\n      for (let key = 1; key <= 12; key++) {\n          if (df.value.toLowerCase() === monthLabels[key].toLowerCase()) {\n              return key;\n          }\n      }\n  }\n  return -1;\n}\n\ngetNumberByValue(df: IMyDateFormat): number {\n  if (!/^\\d+$/.test(df.value)) {\n      return -1;\n  }\n\n  let nbr: number = Number(df.value);\n  if (df.format.length === 1 && df.value.length !== 1 && nbr < 10 || df.format.length === 1 && df.value.length !== 2 && nbr >= 10) {\n      nbr = -1;\n  } else if (df.format.length === 2 && df.value.length > 2) {\n      nbr = -1;\n  }\n  return nbr;\n}\n\n  getDateFormatSeparator(dateFormat: string): string {\n    return dateFormat.replace(/[dmy]/g, '')[0];\n  }\n\n  getDateFormatDelimeters(dateFormat: string): Array<string> | any {\n    return dateFormat.match(/[^(dmy)]{1,}/g);\n  }\n\n  isMonthLabelValid(monthLabel: string, monthLabels: IMyMonthLabels): number {\n    for (let key = 1; key <= 12; key++) {\n      if (monthLabel.toLowerCase() === monthLabels[key].toLowerCase()) {\n        return key;\n      }\n    }\n    return -1;\n  }\n\n  isYearLabelValid(yearLabel: number, minYear: number, maxYear: number): number {\n    if (yearLabel >= minYear && yearLabel <= maxYear) {\n      return yearLabel;\n    }\n    return -1;\n  }\n\n  parseDatePartNumber(dateFormat: string, dateString: string, datePart: string): number {\n    const pos: number = this.getDatePartIndex(dateFormat, datePart);\n    if (pos !== -1) {\n      const value: string = dateString.substring(pos, pos + datePart.length);\n      if (!/^\\d+$/.test(value)) {\n        return -1;\n      }\n      return parseInt(value, 0);\n    }\n    return -1;\n  }\n\n  parseDatePartMonthName(dateFormat: string, dateString: string, datePart: string, monthLabels: IMyMonthLabels): number {\n    const pos: number = this.getDatePartIndex(dateFormat, datePart);\n    if (pos !== -1) {\n      return this.isMonthLabelValid(dateString.substring(pos, pos + datePart.length), monthLabels);\n    }\n    return -1;\n  }\n\n  getDatePartIndex(dateFormat: string, datePart: string): number {\n    return dateFormat.indexOf(datePart);\n  }\n\n  // parseDefaultMonth(monthString: string): IMyMonth {\n    parseDefaultMonth(monthString: string | any): IMyMonth {\n    const month: IMyMonth = {monthTxt: '', monthNbr: 0, year: 0};\n    if (monthString !== '') {\n      const split = monthString.split(monthString.match(/[^0-9]/)[0]);\n      month.monthNbr = split[0].length === 2 ? parseInt(split[0], 0) : parseInt(split[1], 0);\n      month.year = split[0].length === 2 ? parseInt(split[1], 0) : parseInt(split[0], 0);\n    }\n    return month;\n  }\n\n  isDisabledDay(  date: IMyDate,\n    disableUntil: IMyDate,\n    disableSince: IMyDate,\n    disableWeekends: boolean,\n    disableDays: Array<IMyDate>,\n    disableDateRanges: Array<IMyDateRange>,\n    enableDays: Array<IMyDate>\n    ): boolean {\n    for (const e of enableDays) {\n      if (e.year === date.year && e.month === date.month && e.day === date.day) {\n        return false;\n      }\n    }\n\n    const dateMs: number = this.getTimeInMilliseconds(date);\n    if (this.isInitializedDate(disableUntil) && dateMs <= this.getTimeInMilliseconds(disableUntil)) {\n      return true;\n    }\n\n    if (this.isInitializedDate(disableSince) && dateMs >= this.getTimeInMilliseconds(disableSince)) {\n      return true;\n    }\n\n    if (disableWeekends) {\n      const dn = this.getDayNumber(date);\n      if (dn === 0 || dn === 6) {\n        return true;\n      }\n    }\n\n    for (const d of disableDays) {\n      if (d.year === date.year && d.month === date.month && d.day === date.day) {\n        return true;\n      }\n    }\n\n    for (const d of disableDateRanges) {\n      if (this.isInitializedDate(d.begin) &&\n        this.isInitializedDate(d.end) &&\n        dateMs >= this.getTimeInMilliseconds(d.begin) &&\n        dateMs <= this.getTimeInMilliseconds(d.end)\n        )  {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate {\n    for (const md of markedDates) {\n      for (const d of md.dates) {\n        if (d.year === date.year && d.month === date.month && d.day === date.day) {\n          return {marked: true, color: md.color};\n        }\n      }\n    }\n    if (markWeekends && markWeekends.marked) {\n      const dayNbr = this.getDayNumber(date);\n      if (dayNbr === 0 || dayNbr === 6) {\n        return {marked: true, color: markWeekends.color};\n      }\n    }\n    return {marked: false, color: ''};\n  }\n\n  getWeekNumber(date: IMyDate): number {\n    const d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\n    d.setDate(d.getDate() + (d.getDay() === 0 ? -3 : 4 - d.getDay()));\n    return Math.round(((d.getTime() - new Date(d.getFullYear(), 0, 4).getTime()) / 86400000) / 7) + 1;\n  }\n\n  isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean {\n    return this.isInitializedDate(disableUntil) && this.getTimeInMilliseconds(date) <= this.getTimeInMilliseconds(disableUntil);\n  }\n\n  isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean {\n    return this.isInitializedDate(disableSince) && this.getTimeInMilliseconds(date) >= this.getTimeInMilliseconds(disableSince);\n  }\n\n  isInitializedDate(date: IMyDate): boolean {\n    return date.year !== 0 && date.month !== 0 && date.day !== 0;\n  }\n\n  getTimeInMilliseconds(date: IMyDate): number {\n    return new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0).getTime();\n  }\n\n  getDayNumber(date: IMyDate): number {\n    const d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\n    return d.getDay();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IMyLocales, IMyOptions } from '../interfaces/index';\n\n@Injectable()\nexport class LocaleService {\n  public locales: IMyLocales = {\n    'en': {\n      dayLabelsFull: { su: 'Sunday', mo: 'Monday', tu: 'Tuesday', we: 'Wednesday', th: 'Thursday', fr: 'Friday', sa: 'Saturday' },\n      dayLabels: { su: 'Sun', mo: 'Mon', tu: 'Tue', we: 'Wed', th: 'Thu', fr: 'Fri', sa: 'Sat' },\n      monthLabelsFull: {\n        1: 'January',\n        2: 'February',\n        3: 'March',\n        4: 'April',\n        5: 'May',\n        6: 'June',\n        7: 'July',\n        8: 'August',\n        9: 'September',\n        10: 'October',\n        11: 'November',\n        12: 'December' },\n      monthLabels: {\n        1: 'Jan',\n        2: 'Feb',\n        3: 'Mar',\n        4: 'Apr',\n        5: 'May',\n        6: 'Jun',\n        7: 'Jul',\n        8: 'Aug',\n        9: 'Sep',\n        10: 'Oct',\n        11: 'Nov',\n        12: 'Dec' },\n      dateFormat: 'yyyy-mm-dd',\n      todayBtnTxt: 'Today',\n      clearBtnTxt: 'Clear',\n      closeBtnTxt: 'Close',\n      firstDayOfWeek: 'mo',\n      sunHighlight: false,\n    }\n  };\n\n  getLocaleOptions(locale: string): IMyOptions {\n    if (locale && this.locales.hasOwnProperty(locale)) {\n      // User given locale\n      return this.locales[locale];\n    }\n    // Default: en\n    return this.locales['en'];\n  }\n}\n","import { Directive, ElementRef,  AfterViewInit, Input } from '@angular/core';\n\n@Directive({\n  selector: '[mdbDpFocus]'\n})\n\nexport class FocusDirective implements AfterViewInit {\n  @Input() value: string;\n\n  constructor(private el: ElementRef) {}\n\n  // Focus to element: if value 0 = don't set focus, 1 = set only focus, 2 = set focus and set cursor position\n  ngAfterViewInit() {\n    // if (this.value === \"0\") {\n      //     return;\n      // }\n\n    // this.renderer.invokeElementMethod(this.el.nativeElement, 'focus', []);\n    this.el.nativeElement.focus();\n\n      // // Set cursor position at the end of text if input element\n      // if (this.value === \"2\") {\n        //     let len = this.el.nativeElement.value.length;\n        //     this.el.nativeElement.setSelectionRange(len, len);\n        // }\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, HostListener } from '@angular/core';\nimport { IMyInputAutoFill } from '../interfaces/inputAutofill.interface';\n\nenum KeyCode {backspace = 8, delete = 46}\n\n@Directive({\n  selector: '[mdbInputAutoFill]'\n})\n\nexport class InputAutoFillDirective {\n  @Input() opts: IMyInputAutoFill;\n\n  constructor(private el: ElementRef, private rndr: Renderer2) {}\n\n  @HostListener('keyup', ['$event']) onKeyUp(evt: KeyboardEvent) {\n    if (!this.opts.enabled || evt.keyCode === KeyCode.backspace || evt.keyCode === KeyCode.delete) {\n      return;\n    }\n\n    const val: string = this.getInputValue();\n    const ews: boolean = this.endsWith(val, this.opts.separator);\n    const parts: Array<string> = val.split(this.opts.separator);\n    const idx: number = parts.length - 1;\n\n    if (val.indexOf(this.opts.separator + this.opts.separator) !== -1 || idx > 2) {\n      return;\n    }\n\n    if (!ews &&\n      (val.length === this.getPartLength(0) ||\n        val.length === this.getPartLength(0) + this.getPartLength(1) + this.opts.separator.length)) {\n      this.setInputValue(val + this.opts.separator);\n  } else if (ews &&\n    parts[idx - 1].length < this.getPartLength(idx - 1) &&\n    this.isNumber(parts[idx - 1]) && (this.isDay(idx - 1) || this.isMonth(idx - 1))) {\n    this.setInputValue(this.insertPos(val, val.length - 2, '0'));\n  } else if (parts[idx].length < this.getPartLength(idx) &&\n    this.isNumber(parts[idx]) &&\n    (Number(parts[idx]) > 3 &&\n      this.isDay(idx) ||\n      Number(parts[idx]) > 1 &&\n      this.isMonth(idx))) {\n    this.setInputValue(this.insertPos(val, val.length - 1, '0') + (idx < 2 ? this.opts.separator : ''));\n  }\n}\n\n  private endsWith(val: string, suffix: string): boolean {\n    return val.indexOf(suffix, val.length - suffix.length) !== -1;\n  }\n\n  private insertPos(str: string, idx: number, val: string): string {\n    return str.substr(0, idx) + val + str.substr(idx);\n  }\n\n  private getPartLength(idx: number): number {\n    return this.opts.formatParts[idx].length;\n  }\n\n  private isNumber(val: string): boolean {\n    return val.match(/[1-9]/) !== null;\n  }\n\n  private isDay(idx: number): boolean {\n    return this.opts.formatParts[idx].indexOf('d') !== -1;\n  }\n\n  private isMonth(idx: number): boolean {\n    return this.opts.formatParts[idx].indexOf('m') !== -1 && this.opts.formatParts[idx].length === 2;\n  }\n\n  private getInputValue(): string {\n    return this.el.nativeElement.value;\n  }\n\n  private setInputValue(val: string): void {\n    this.rndr.setProperty(this.el.nativeElement, 'value', val);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule  } from '@angular/common';\n\nimport { CardRevealComponent } from './card-reveal.component';\nimport { CardRotatingComponent } from './card-rotating.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ CardRevealComponent, CardRotatingComponent],\n  exports: [CardRevealComponent, CardRotatingComponent]\n})\nexport class CardsModule {\n  public static forRoot(): ModuleWithProviders {\n  return {ngModule: CardsModule, providers: []};\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mdb-card-rotating, mdb-flipping-card',\n  template: \"<div class=\\\"flip-container card-wrapper\\\" [ngClass]=\\\"{'rotate': rotate}\\\"> <div class=\\\"flipper card-rotating effect__click tp-box\\\"> <ng-content></ng-content> </div> </div> \"\n})\n\nexport class CardRotatingComponent {\n  public rotate = false;\n\n  toggle() {\n    this.rotate = !this.rotate;\n  }\n}\n","import { Component, ElementRef, ViewChild, Renderer2 } from '@angular/core';\nimport { socialsState } from '../animations/animations.component';\n\n@Component({\n  selector: 'mdb-card-reveal',\n  template: \"<div class=\\\"card-overflow col-12\\\" > <div #cardFront class=\\\"card-front\\\"> <ng-content select=\\\".card-front\\\" ></ng-content> </div> <div #cardReveal class=\\\"card-reveal\\\" *ngIf=\\\"show\\\"  [@socialsState]=\\\"socials\\\" > <ng-content select=\\\".card-reveal\\\"></ng-content> </div> </div> \",\n  animations: [socialsState]\n})\n\nexport class CardRevealComponent {\n  @ViewChild('cardReveal') cardReveal: ElementRef;\n  @ViewChild('cardFront') cardFront: ElementRef;\n  public socials: any;\n  public show: boolean;\n\n  constructor(private _r: Renderer2) { }\n  toggle() {\n    this.show = !this.show;\n    this.socials = (this.socials === 'active') ? 'inactive' : 'active';\n    setTimeout(() => {\n      try {\n        const height = this.cardFront.nativeElement.offsetHeight;\n        this._r.setStyle(this.cardReveal.nativeElement.firstElementChild, 'height', height + 'px');\n      } catch (error) { }\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CompleterComponent } from './components/completer.component';\nimport { CompleterListItemComponent } from './components/completer-list-item.component';\nimport { CompleterService } from './services/completer.service';\nimport { LocalDataFactoryProvider, RemoteDataFactoryProvider } from './services/data-factory.service';\nimport { MdbCompleterDirective } from './directives/completer.directive';\nimport { MdbDropdownDirective } from './directives/dropdown.directive';\nimport { MdbInputCompleteDirective } from './directives/input.directive';\nimport { MdbListDirective } from './directives/list-context.directive';\nimport { MdbRowDirective } from './directives/row.directive';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule\n  ],\n  declarations: [\n    CompleterListItemComponent,\n    MdbCompleterDirective,\n    MdbDropdownDirective,\n    MdbInputCompleteDirective,\n    MdbListDirective,\n    MdbRowDirective,\n    CompleterComponent\n  ],\n  exports: [\n    CompleterComponent,\n    CompleterListItemComponent,\n    MdbCompleterDirective,\n    MdbDropdownDirective,\n    MdbInputCompleteDirective,\n    MdbListDirective,\n    MdbRowDirective\n  ],\n  providers: [\n    CompleterService,\n    LocalDataFactoryProvider,\n    RemoteDataFactoryProvider\n  ]\n})\nexport class AutocompleteModule { }\n","import { Http } from '@angular/http';\n\nimport { LocalData } from './local-data.service';\nimport { RemoteData } from './remote-data.service';\n\n\nexport function localDataFactory() {\n  return () => {\n    return new LocalData();\n  };\n}\n\nexport function remoteDataFactory(http: Http) {\n  return () => {\n    return new RemoteData(http);\n  };\n}\n\nexport let LocalDataFactoryProvider = { provide: LocalData, useFactory: localDataFactory };\nexport let RemoteDataFactoryProvider = { provide: RemoteData, useFactory: remoteDataFactory, deps: [Http] };\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnInit } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbDropdownDirective, CtrRowElement, CtrRowItem } from './dropdown.directive';\n\n@Directive({\n  selector: '[mdbRow]',\n})\nexport class MdbRowDirective implements CtrRowElement, OnInit {\n\n  private selected = false;\n  private _rowIndex: number;\n  private _item: CompleterItem;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: MdbDropdownDirective) { }\n\n  public ngOnInit() {\n    this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n  }\n\n  @Input()\n  set mdbRow(index: number) {\n    this._rowIndex = index;\n  }\n\n  @Input()\n  set dataItem(item: CompleterItem) {\n    this._item = item;\n  }\n\n  @HostListener('click') public onClick() {\n    this.dropdown.onSelected(this._item);\n  }\n\n  @HostListener('mouseenter') public onMouseEnter() {\n    this.dropdown.highlightRow(this._rowIndex);\n  }\n\n  public setHighlighted(selected: boolean) {\n    this.selected = selected;\n    if (this.selected) {\n      this.renderer.addClass(this.el.nativeElement, 'completer-selected-row');\n    } else if (!this.selected) {\n      this.renderer.removeClass(this.el.nativeElement, 'completer-selected-row');\n    }\n  }\n\n  public getNativeElement() {\n    return this.el.nativeElement;\n  }\n\n  public getDataItem() {\n    return this._item;\n  }\n}\n","// import { catchError } from 'rxjs/operators';\n\nimport {  timer as observableTimer, Subscription } from 'rxjs';\nimport { ChangeDetectorRef, Directive, Host, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { MdbCompleterDirective, CompleterList } from './completer.directive';\nimport { CompleterData } from '../services/completer-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MIN_SEARCH_LENGTH, PAUSE, CLEAR_TIMEOUT, isNil } from '../globals';\n\nexport class CtrListContext {\n  constructor(\n    public results: CompleterItem[],\n    public searching: boolean,\n    public searchInitialized: boolean,\n    public isOpen: boolean\n  ) { }\n}\n\n@Directive({\n  selector: '[mdbList]',\n})\nexport class MdbListDirective implements OnInit, CompleterList {\n  @Input() public mdbListMinSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public mdbListPause = PAUSE;\n  @Input() public mdbListAutoMatch = false;\n  @Input() public mdbListAutoHighlight: any = false;\n\n  // private _dataService: CompleterData ;\n  private _dataService: CompleterData | any;\n  // private results: CompleterItem[] = [];\n  public setToNullValue: any = null;\n  // private term: string = null;\n  private term: string | any = null;\n  // private searching = false;\n  // private searchTimer: Subscription = null;\n  private searchTimer: Subscription | any = null;\n  // private clearTimer: Subscription = null;\n  private clearTimer: Subscription | any = null;\n  private ctx = new CtrListContext([], false, false, false);\n  private _initialValue: any = null;\n  private completer: MdbCompleterDirective | any;\n  constructor(\n    // @Host() private completer: MdbCompleterDirective,\n    @Host() private tmpCompleter: MdbCompleterDirective,\n    private templateRef: TemplateRef<CtrListContext>,\n    private viewContainer: ViewContainerRef,\n    private cd: ChangeDetectorRef) {\n    this.completer = this.tmpCompleter;\n  }\n\n  public ngOnInit() {\n    this.completer.registerList(this);\n    this.viewContainer.createEmbeddedView(\n      this.templateRef,\n      new CtrListContext([], false, false, false)\n    );\n  }\n\n  @Input('mdbList')\n  public set dataService(newService: CompleterData) {\n    this._dataService = newService;\n    if (this._dataService) {\n      this._dataService\n        // .catch(err => this.handleError(err))\n        // .catch((err: any) => this.handleError(err))\n        // .subscribe(results => {\n        .subscribe((results: any) => {\n          try {\n            this.ctx.searchInitialized = true;\n            this.ctx.searching = false;\n            this.ctx.results = results;\n            if (this.mdbListAutoMatch && results.length === 1 && results[0].title && !isNil(this.term) &&\n              results[0].title.toLocaleLowerCase() === this.term.toLocaleLowerCase()) {\n              // Do automatch\n              this.completer.onSelected(results[0]);\n            }\n            if (this._initialValue) {\n              this.initialValue = this._initialValue;\n              // this._initialValue = null;\n              this._initialValue = this.setToNullValue;\n            }\n            if (this.mdbListAutoHighlight) {\n              this.completer.autoHighlightIndex = this.getBestMatchIndex();\n            }\n            this.refreshTemplate();\n          } catch (err) {\n\n          }\n\n        });\n    }\n  }\n\n  @Input('mdbListInitialValue')\n  public set initialValue(value: any) {\n    if (this._dataService && typeof this._dataService.convertToItem === 'function') {\n      setTimeout(() => {\n        const initialItem = this._dataService.convertToItem(value);\n        if (initialItem) {\n          this.completer.onSelected(initialItem, false);\n        }\n      });\n    } else if (!this._dataService) {\n      this._initialValue = value;\n    }\n  }\n\n  public search(term: string) {\n    if (!isNil(term) && term.length >= this.mdbListMinSearchLength && this.term !== term) {\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n        this.searchTimer = null;\n      }\n      if (!this.ctx.searching) {\n        this.ctx.results = [];\n        this.ctx.searching = true;\n        this.ctx.searchInitialized = true;\n        this.refreshTemplate();\n      }\n      if (this.clearTimer) {\n        this.clearTimer.unsubscribe();\n      }\n      this.searchTimer = observableTimer(this.mdbListPause).subscribe(() => {\n        try {\n          this.searchTimerComplete(term);\n        } catch (err) {\n        }\n\n      });\n    } else if (!isNil(term) && term.length < this.mdbListMinSearchLength) {\n      this.clear();\n    }\n  }\n\n  public clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n    }\n    this.clearTimer = observableTimer(CLEAR_TIMEOUT).subscribe(() => {\n      this._clear();\n    });\n  }\n\n  public open() {\n    if (!this.ctx.searchInitialized) {\n      this.search('');\n    }\n    this.refreshTemplate();\n  }\n\n  public isOpen(open: boolean) {\n    this.ctx.isOpen = open;\n  }\n\n  private _clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n      this.searchTimer = null;\n    }\n    if (this.dataService) {\n      this.dataService.cancel();\n    }\n\n    this.viewContainer.clear();\n  }\n\n  private searchTimerComplete(term: string): any {\n    // Begin the search\n    if (isNil(term) || term.length < this.mdbListMinSearchLength) {\n      this.ctx.searching = false;\n      return;\n    }\n    this.term = term;\n    this._dataService.search(term);\n  }\n\n  // private handleError(error: any) {\n  //   this.ctx.searching = false;\n  //   let errMsg = 'search error';\n  //   if (error) {\n  //     errMsg = (error.message) ? error.message :\n  //       error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n  //   }\n\n  //   if (console && console.error) {\n  //     console.error(errMsg); // log to console\n  //   }\n  //   this.refreshTemplate();\n\n  //   return observableThrowError(errMsg);\n  // }\n\n  private refreshTemplate() {\n    // Recreate the template\n    this.viewContainer.clear();\n    if (this.ctx.results && this.ctx.isOpen) {\n      this.viewContainer.createEmbeddedView(\n        this.templateRef,\n        this.ctx\n      );\n    }\n    this.cd.markForCheck();\n  }\n\n  private getBestMatchIndex() {\n    if (!this.ctx.results) {\n      return null;\n    }\n\n    // First try to find the exact term\n    let bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase() === this.term.toLocaleLowerCase());\n    // If not try to find the first item that starts with the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().startsWith(this.term.toLocaleLowerCase()));\n    }\n    // If not try to find the first item that includes the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().includes(this.term.toLocaleLowerCase()));\n    }\n\n    return bestMatch < 0 ? null : bestMatch;\n  }\n\n}\n","\nimport {timer as observableTimer,  Subscription } from 'rxjs';\nimport { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbCompleterDirective } from './completer.directive';\nimport { isNil } from '../globals';\n\n\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\n\n@Directive({\n  selector: '[mdbInput]',\n})\nexport class MdbInputCompleteDirective {\n  @Input('clearSelected') public clearSelected = false;\n  @Input('clearUnselected') public clearUnselected = false;\n  @Input('overrideSuggested') public overrideSuggested = false;\n  @Input('fillHighlighted') public fillHighlighted = true;\n  @Input('openOnFocus') public openOnFocus = false;\n\n  @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\n  private _searchStr = '';\n  private _displayStr = '';\n  private ngModel: NgModel | any;\n  // private blurTimer: Subscription = null;\n  private blurTimer: Subscription | any = null;\n  // constructor( @Host() private completer: MdbCompleterDirective, private ngModel: NgModel, private el: ElementRef) {\n  constructor( @Host() private completer: MdbCompleterDirective, private tempngModel: NgModel, private el: ElementRef) {\n    this.ngModel = this.tempngModel;\n\n    this.completer.selected.subscribe((item: CompleterItem) => {\n      if (!item) {\n        return;\n      }\n      if (this.clearSelected) {\n        this.searchStr = '';\n      } else {\n        this.searchStr = item.title;\n      }\n      this.ngModelChange.emit(this.searchStr);\n    });\n    this.completer.highlighted.subscribe((item: CompleterItem) => {\n      if (this.fillHighlighted) {\n        if (item) {\n          this._displayStr = item.title;\n          this.ngModelChange.emit(item.title);\n        } else {\n          this._displayStr = this.searchStr;\n          this.ngModelChange.emit(this.searchStr);\n        }\n      }\n    });\n    // this.ngModel.valueChanges.subscribe(value => {\n    this.ngModel.valueChanges.subscribe((value: any) => {\n      if (!isNil(value) && this._displayStr !== value) {\n        if (this.searchStr !== value) {\n          this.completer.search(value);\n        }\n        this.searchStr = value;\n      }\n    });\n  }\n\n  @HostListener('keyup', ['$event'])\n  public keyupHandler(event: any): any {\n    if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n      // do nothing\n      return;\n    }\n\n    if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n      event.preventDefault();\n    } else if (event.keyCode === KEY_DW) {\n      event.preventDefault();\n\n      this.completer.search(this.searchStr);\n    } else if (event.keyCode === KEY_ES) {\n      this.restoreSearchValue();\n      this.completer.clear();\n    } else {\n      if (this.searchStr) {\n        this.completer.open();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public keydownHandler(event: any) {\n    if (event.keyCode === KEY_EN) {\n      if (this.completer.hasHighlighted()) {\n        event.preventDefault();\n      }\n      this.handleSelection();\n    } else if (event.keyCode === KEY_DW) {\n      event.preventDefault();\n      this.completer.open();\n      this.completer.nextRow();\n    } else if (event.keyCode === KEY_UP) {\n      event.preventDefault();\n      this.completer.prevRow();\n    } else if (event.keyCode === KEY_TAB) {\n      this.handleSelection();\n    } else if (event.keyCode === KEY_ES) {\n      // This is very specific to IE10/11 #272\n      // without this, IE clears the input text\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('blur')\n  public onBlur(): any {\n    // Check if we need to cancel Blur for IE\n    if (this.completer.isCancelBlur()) {\n      setTimeout(\n        () => {\n          // get the focus back\n          this.el.nativeElement.focus();\n        },\n        0\n      );\n      return;\n    }\n    this.blurTimer = observableTimer(200).subscribe(\n      () => {\n        this.blurTimer.unsubscribe();\n        this.blurTimer = null;\n        if (this.overrideSuggested) {\n          this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n          if (this.clearUnselected && !this.completer.hasSelected) {\n            this.searchStr = '';\n            this.el.nativeElement.value = '';\n          } else {\n            this.restoreSearchValue();\n          }\n        }\n        this.completer.clear();\n      }\n    );\n  }\n\n  @HostListener('focus')\n  public onfocus() {\n    if (this.blurTimer) {\n      this.blurTimer.unsubscribe();\n      this.blurTimer = null;\n    }\n    if (this.openOnFocus) {\n      this.completer.open();\n    }\n  }\n\n  public get searchStr() {\n    return this._searchStr;\n  }\n\n  public set searchStr(term: string) {\n    this._searchStr = term;\n    this._displayStr = term;\n  }\n\n  private handleSelection() {\n    if (this.completer.hasHighlighted()) {\n      this._searchStr = '';\n      this.completer.selectCurrent();\n    } else if (this.overrideSuggested) {\n      this.completer.onSelected({ title: this.searchStr, originalObject: null });\n    } else {\n      this.completer.clear();\n    }\n  }\n\n  private restoreSearchValue() {\n    if (this.fillHighlighted) {\n      if (this._displayStr !== this.searchStr) {\n        this._displayStr = this.searchStr;\n        this.ngModelChange.emit(this.searchStr);\n      }\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, OnInit } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbCompleterDirective, CompleterDropdown } from './completer.directive';\n\n\nexport interface CtrRowElement {\n  setHighlighted(selected: boolean): void;\n  getNativeElement(): any;\n  getDataItem(): CompleterItem;\n}\n\nexport class CtrRowItem {\n  constructor(public row: CtrRowElement, public index: number) { }\n}\n\n@Directive({\n  selector: '[mdbAutocompleteDropdown]',\n})\nexport class MdbDropdownDirective implements CompleterDropdown, OnDestroy, OnInit, AfterViewInit {\n\n  public setToNullValue: any = null;\n  private rows: CtrRowItem[] = [];\n  // private currHighlighted: CtrRowItem;\n  private currHighlighted: CtrRowItem | any;\n  // private isScrollOn: boolean;\n  private isScrollOn: boolean | any;\n\n  constructor( @Host() private completer: MdbCompleterDirective, private el: ElementRef) {\n    this.completer.registerDropdown(this);\n  }\n\n  public ngOnInit() {\n    const css = getComputedStyle(this.el.nativeElement);\n    this.isScrollOn = css.maxHeight && css.overflowY === 'auto';\n  }\n\n  public ngOnDestroy() {\n    // this.completer.registerDropdown(null);\n    this.completer.registerDropdown(this.setToNullValue);\n  }\n\n  public ngAfterViewInit() {\n    const autoHighlightIndex = this.completer.autoHighlightIndex;\n    if (autoHighlightIndex) {\n      setTimeout(\n        () => {\n          this.highlightRow(autoHighlightIndex);\n        },\n        0\n      );\n    }\n  }\n\n  @HostListener('mousedown') public onMouseDown() {\n    // Support for canceling blur on IE (issue #158)\n    this.completer.cancelBlur(true);\n    setTimeout(\n      () => {\n        this.completer.cancelBlur(false);\n      },\n      0\n    );\n  }\n\n  public registerRow(row: CtrRowItem) {\n    this.rows.push(row);\n  }\n\n  public highlightRow(index: number): any {\n\n    const highlighted = this.rows.find(row => row.index === index);\n\n    if (index < 0) {\n      if (this.currHighlighted) {\n        this.currHighlighted.row.setHighlighted(false);\n      }\n      this.currHighlighted = undefined;\n      this.completer.onHighlighted(this.setToNullValue);\n      return;\n    }\n\n    if (!highlighted) {\n      return;\n    }\n\n    if (this.currHighlighted) {\n      this.currHighlighted.row.setHighlighted(false);\n    }\n\n    this.currHighlighted = highlighted;\n    this.currHighlighted.row.setHighlighted(true);\n    this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n\n    if (this.isScrollOn && this.currHighlighted) {\n      const rowTop = this.dropdownRowTop();\n      if (rowTop < 0) {\n        this.dropdownScrollTopTo(rowTop - 1);\n      } else {\n        const row = this.currHighlighted.row.getNativeElement();\n        if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n          this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n          if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row)\n            < row.getBoundingClientRect().top) {\n            this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top\n            // + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10)));\n            + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as any, 10)));\n          }\n        }\n      }\n    }\n  }\n\n  public clear() {\n    this.rows = [];\n  }\n\n  public onSelected(item: CompleterItem) {\n    this.completer.onSelected(item);\n  }\n\n  public selectCurrent() {\n    if (this.currHighlighted) {\n      this.onSelected(this.currHighlighted.row.getDataItem());\n    } else if (this.rows.length > 0) {\n      this.onSelected(this.rows[0].row.getDataItem());\n    }\n\n  }\n\n  public nextRow() {\n    let nextRowIndex = 0;\n    if (this.currHighlighted) {\n      nextRowIndex = this.currHighlighted.index + 1;\n    }\n    this.highlightRow(nextRowIndex);\n  }\n\n  public prevRow() {\n    let nextRowIndex = -1;\n    if (this.currHighlighted) {\n      nextRowIndex = this.currHighlighted.index - 1;\n    }\n    this.highlightRow(nextRowIndex);\n  }\n\n  private dropdownScrollTopTo(offset: any) {\n    this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n  }\n\n  private dropdownRowTop() {\n    return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n      (this.el.nativeElement.getBoundingClientRect().top +\n        // parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10));\n        parseInt(getComputedStyle(this.el.nativeElement).paddingTop as any, 10));\n  }\n\n  private dropdownHeight() {\n    return this.el.nativeElement.getBoundingClientRect().top +\n      // parseInt(getComputedStyle(this.el.nativeElement).maxHeight, 10);\n      parseInt(getComputedStyle(this.el.nativeElement).maxHeight as any, 10);\n  }\n\n  private dropdownRowOffsetHeight(row: any) {\n    const css = getComputedStyle(row);\n    return row.offsetHeight +\n      // parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n      parseInt(css.marginTop as any, 10) + parseInt(css.marginBottom as any, 10);\n  }\n}\n","'use strict';\nimport {\n  AfterViewChecked, Component, Input, Output, EventEmitter, OnInit, ViewChild,\n  forwardRef, AfterViewInit, ElementRef, HostListener, Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { MdbCompleterDirective } from '../directives/completer.directive';\nimport { CompleterData } from '../services/completer-data.service';\nimport { CompleterService } from '../services/completer.service';\nimport { CompleterItem } from './completer-item.component';\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS } from '../globals';\n\nconst noop = () => { };\n\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CompleterComponent),\n  multi: true\n};\n\n\n@Component({\n  selector: 'mdb-autocomplete, mdb-completer',\n  template: \"<div class=\\\"completer-holder md-form\\\" mdbCompleter> <input #mdbInput [attr.id]=\\\"inputId.length > 0 ? inputId : null\\\" type=\\\"search\\\" class=\\\"completer-input form-control mdb-autocomplete\\\" mdbInput [ngClass]=\\\"inputClass\\\" [(ngModel)]=\\\"searchStr\\\" (ngModelChange)=\\\"onChange($event)\\\" [attr.name]=\\\"inputName\\\" [placeholder]=\\\"placeholder\\\" [attr.maxlength]=\\\"maxChars\\\" [tabindex]=\\\"fieldTabindex\\\" [disabled]=\\\"disableInput\\\" [clearSelected]=\\\"clearSelected\\\" [clearUnselected]=\\\"clearUnselected\\\" [overrideSuggested]=\\\"overrideSuggested\\\" [openOnFocus]=\\\"openOnFocus\\\" [fillHighlighted]=\\\"fillHighlighted\\\" (blur)=\\\"onBlur()\\\" (focus)=\\\"onFocus()\\\" (keyup)=\\\"onKeyup($event)\\\" (keydown)=\\\"onKeydown($event)\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" /> <button class=\\\"mdb-autocomplete-clear\\\"> <svg fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"https://www.w3.org/2000/svg\\\"> <path d=\\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\\" /> <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" /> </svg> </button> <label [ngClass]=\\\"{'active': focused || value}\\\">{{ label }}</label> <div class=\\\"completer-dropdown-holder\\\" *mdbList=\\\"dataService; minSearchLength: minSearchLength; pause: pause; autoMatch: autoMatch; initialValue: initialValue; autoHighlight: autoHighlight; let items = results; let searchActive = searching; let isInitialized = searchInitialized; let isOpen = isOpen;\\\"> <div class=\\\"completer-dropdown\\\" mdbAutocompleteDropdown *ngIf=\\\"isInitialized && isOpen && ((items.length > 0 || displayNoResults) || (searchActive && displaySearching))\\\"> <div *ngIf=\\\"searchActive && displaySearching\\\" class=\\\"completer-searching\\\">{{_textSearching}}</div> <div *ngIf=\\\"!searchActive && (!items || items.length === 0)\\\" class=\\\"completer-no-results\\\">{{_textNoResults}}</div> <div class=\\\"completer-row-wrapper\\\" *ngFor=\\\"let item of items; let rowIndex=index\\\"> <div class=\\\"completer-row\\\" [mdbRow]=\\\"rowIndex\\\" [dataItem]=\\\"item\\\"> <div *ngIf=\\\"item.image || item.image === ''\\\" class=\\\"completer-image-holder\\\"> <img *ngIf=\\\"item.image != ''\\\" src=\\\"{{item.image}}\\\" class=\\\"completer-image\\\" /> <div *ngIf=\\\"item.image === ''\\\" class=\\\"completer-image-default\\\"></div> </div> <div class=\\\"completer-item-text\\\" [ngClass]=\\\"{'completer-item-text-image': item.image || item.image === '' }\\\"> <mdb-completer-list-item class=\\\"completer-title\\\" [text]=\\\"item.title\\\" [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'title'\\\"></mdb-completer-list-item> <mdb-completer-list-item *ngIf=\\\"item.description && item.description != ''\\\" class=\\\"completer-description\\\" [text]=\\\"item.description\\\" [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'description'\\\"> </mdb-completer-list-item> </div> </div> </div> </div> </div> </div> \",\n  providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n})\nexport class CompleterComponent implements OnInit, ControlValueAccessor, AfterViewChecked, AfterViewInit {\n  @Input() public dataService: CompleterData;\n  @Input() public inputName = '';\n  @Input() public inputId = '';\n  @Input() public pause = PAUSE;\n  @Input() public minSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public maxChars = MAX_CHARS;\n  @Input() public overrideSuggested = false;\n  @Input() public clearSelected = false;\n  @Input() public clearUnselected = false;\n  @Input() public fillHighlighted = true;\n  @Input() public placeholder = '';\n  @Input() public matchClass: string;\n  @Input() public fieldTabindex: number;\n  @Input() public autoMatch = false;\n  @Input() public disableInput = false;\n  @Input() public inputClass: string;\n  @Input() public autofocus = false;\n  @Input() public openOnFocus = false;\n  @Input() public initialValue: any;\n  @Input() public autoHighlight = false;\n  @Input() public label: string;\n\n  public focused = false;\n  autocompleteLabel: ElementRef;\n\n  @Output() public selected = new EventEmitter<CompleterItem>();\n  @Output() public highlighted = new EventEmitter<CompleterItem>();\n  @Output() public blur = new EventEmitter();\n  @Output() public focusEvent = new EventEmitter();\n  @Output() public opened = new EventEmitter<boolean>();\n  @Output() public keyup: EventEmitter<any> = new EventEmitter();\n  @Output() public keydown: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(MdbCompleterDirective) public completer: MdbCompleterDirective;\n  @ViewChild('mdbInput') public mdbInput: ElementRef;\n\n  public searchStr = '';\n  public control = new FormControl('');\n\n  //  displaySearching = true;\n  displaySearching: any = true;\n  //  displayNoResults = true;\n  displayNoResults: any = true;\n  _onTouchedCallback: () => void = noop;\n  _onChangeCallback: (_: any) => void = noop;\n  _focus = false;\n  _open = false;\n  _textNoResults = TEXT_NO_RESULTS;\n  _textSearching = TEXT_SEARCHING;\n\n  constructor(private completerService: CompleterService, private renderer: Renderer2, private el: ElementRef) { }\n\n  @HostListener('keyup', ['$event']) onkeyup(event: any) {\n    if (event.target.value !== '') {\n      this.renderer.setStyle(event.target.nextElementSibling, 'visibility', 'visible');\n    } else {\n      this.renderer.setStyle(event.target.nextElementSibling, 'visibility', 'hidden');\n    }\n  }\n\n  @HostListener('click', ['$event']) onclick(event: any) {\n    if (event.target.classList.contains('mdb-autocomplete-clear')) {\n      event.target.previousElementSibling.value = '';\n      this.searchStr = '';\n      this.renderer.setStyle(event.target, 'visibility', 'hidden');\n    }\n\n    if (event.target === this.autocompleteLabel) {\n      this.renderer.addClass(this.autocompleteLabel, 'active');\n      this._focus = true;\n    }\n  }\n\n  @HostListener('focusin') onFocusIn() {\n    try {\n      this.renderer.addClass(this.el.nativeElement.firstChild.children[2], 'active');\n    } catch (error) { }\n\n  }\n\n  @HostListener('focusout', ['$event']) onFocusOut(event: any) {\n    try {\n      if (event.target.value === '') {\n        this.renderer.removeClass(this.el.nativeElement.firstChild.children[2], 'active');\n      }\n    } catch (error) { }\n  }\n\n  get value(): any { return this.searchStr; }\n\n  set value(v: any) {\n    if (v !== this.searchStr) {\n      this.searchStr = v;\n    }\n    // Propagate the change in any case\n    this._onChangeCallback(v);\n  }\n\n  public ngAfterViewInit() {\n    this.autocompleteLabel = this.el.nativeElement.children[0].children[2];\n\n    try {\n      this.renderer.removeClass(this.el.nativeElement.firstChild.children[2], 'active');\n    } catch (error) { }\n    if (this.autofocus) {\n      this._focus = true;\n    }\n\n    if (this.initialValue || this.searchStr) {\n      this.renderer.addClass(this.el.nativeElement.firstChild.children[2], 'active');\n    }\n  }\n\n  public ngAfterViewChecked(): void {\n    setTimeout(() => {\n      if (this._focus) {\n        this.mdbInput.nativeElement.focus();\n        this._focus = false;\n      }\n    }, 0);\n\n  }\n\n  public onTouched() {\n    this._onTouchedCallback();\n  }\n\n  public writeValue(value: any) {\n    this.searchStr = value;\n  }\n\n  public registerOnChange(fn: any) {\n    this._onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  @Input()\n  public set datasource(source: CompleterData | string | Array<any>) {\n    if (source) {\n      if (source instanceof Array) {\n        this.dataService = this.completerService.local(source);\n      } else if (typeof (source) === 'string') {\n        this.dataService = this.completerService.remote(source);\n      } else {\n        this.dataService = source;\n      }\n    }\n  }\n\n  @Input()\n  public set textNoResults(text: string) {\n    if (this._textNoResults !== text) {\n      this._textNoResults = text;\n      this.displayNoResults = this._textNoResults && this._textNoResults !== 'false';\n    }\n  }\n\n  @Input()\n  public set textSearching(text: string) {\n    if (this._textSearching !== text) {\n      this._textSearching = text;\n      this.displaySearching = this._textSearching && this._textSearching !== 'false';\n    }\n  }\n\n  public ngOnInit() {\n    this.completer.selected.subscribe((item: CompleterItem) => {\n      this.selected.emit(item);\n    });\n    this.completer.highlighted.subscribe((item: CompleterItem) => {\n      this.highlighted.emit(item);\n    });\n    this.completer.opened.subscribe((isOpen: boolean) => {\n      this._open = isOpen;\n      this.opened.emit(isOpen);\n    });\n    if (this.initialValue) { // <- start workaround\n      this.searchStr = this.initialValue; //\n      this.onFocus(); // fix label\n    }// <- end workaround\n  }\n\n  public onBlur() {\n    this.onTouched();\n    if (this.searchStr === undefined || this.searchStr === '') {\n      this.focused = false;\n    }\n    this.blur.emit(this);\n  }\n\n  public onFocus() {\n    this.onTouched();\n    setTimeout(() => {\n      this.focused = true;\n    }, 0);\n    this.focusEvent.emit({ focused: true, element: this.el });\n  }\n\n  public onKeyup(event: any) {\n    this.keyup.emit(event);\n  }\n\n  public onKeydown(event: any) {\n    this.keydown.emit(event);\n  }\n\n  public onChange(value: string) {\n    this.value = value;\n  }\n\n  public open() {\n    this.completer.open();\n  }\n\n  public close() {\n    this.completer.clear();\n  }\n\n  public focus(): void {\n    if (this.mdbInput) {\n      this.mdbInput.nativeElement.focus();\n    } else {\n      this._focus = true;\n    }\n  }\n\n  public isOpen() {\n    return this._open;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LocalData } from './local-data.service';\nimport { RemoteData } from './remote-data.service';\n\n\n@Injectable()\nexport class CompleterService {\n  constructor(\n    @Inject(LocalData) private localDataFactory: any, // Using any instead of () => LocalData because on AoT errors\n    @Inject(RemoteData) private remoteDataFactory: any // Using any instead of () => LocalData because on AoT errors\n  ) { }\n\n  public local(data: any[] | Observable<any>, searchFields = '', titleField = ''): LocalData {\n\n    const localData = this.localDataFactory();\n    return localData\n      .data(data)\n      .searchFields(searchFields)\n      .titleField(titleField);\n  }\n\n  public remote(url: string, searchFields = '', titleField = ''): RemoteData {\n\n    const remoteData = this.remoteDataFactory();\n    return remoteData\n      .remoteUrl(url)\n      .searchFields(searchFields)\n      .titleField(titleField);\n  }\n}\n","\nimport { catchError, map } from 'rxjs/operators';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Subscription } from 'rxjs';\n\n\n\nimport { CompleterBaseData } from './base-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\n\nexport class RemoteData extends CompleterBaseData {\n  public setToNullValue: any = null;\n  private _remoteUrl: string;\n  private remoteSearch: Subscription;\n  // private _urlFormater: (term: string) => string | any = null;\n  private _urlFormater: (term: string) => string | any = this.setToNullValue;\n  // private _dataField: string = null;\n  private _dataField: string | any = null;\n  private _headers: Headers;\n  private _requestOptions: RequestOptions;\n\n\n  constructor(private http: Http) {\n    super();\n  }\n\n  public remoteUrl(remoteUrl: string) {\n    this._remoteUrl = remoteUrl;\n    return this;\n  }\n\n  public urlFormater(urlFormater: (term: string) => string) {\n    this._urlFormater = urlFormater;\n  }\n\n  public dataField(dataField: string) {\n    this._dataField = dataField;\n  }\n\n  /**\n   * @deprecated Please use the requestOptions to pass headers with the search request\n   */\n  public headers(headers: Headers) {\n    this._headers = headers;\n  }\n\n  public requestOptions(requestOptions: RequestOptions) {\n    this._requestOptions = requestOptions;\n  }\n\n  public search(term: string): void {\n    this.cancel();\n    // let params = {};\n    let url = '';\n    if (this._urlFormater) {\n      url = this._urlFormater(term);\n    } else {\n      url = this._remoteUrl + encodeURIComponent(term);\n    }\n\n    /*\n     * If requestOptions are provided, they will override anything set in headers.\n     *\n     * If no requestOptions are provided, a new RequestOptions object will be instantiated,\n     * and either the provided headers or a new Headers() object will be sent.\n     */\n    if (!this._requestOptions) {\n      this._requestOptions = new RequestOptions();\n      this._requestOptions.headers = this._headers || new Headers();\n    }\n\n    this.remoteSearch = this.http.get(url, this._requestOptions).pipe(\n      map((res: Response) => res.json()),\n      map((data: any) => {\n        const matches = this.extractValue(data, this._dataField);\n        return this.extractMatches(matches, term);\n      }),\n      map(\n        (matches: any[]) => {\n          const results = this.processResults(matches);\n          this.next(results);\n          return results;\n        }),\n      catchError((err) => {\n        this.error(err);\n        // return null;\n        return this.setToNullValue;\n      }), )\n      .subscribe();\n  }\n\n  public cancel() {\n    if (this.remoteSearch) {\n      this.remoteSearch.unsubscribe();\n    }\n  }\n\n  // public convertToItem(data: any): CompleterItem {\n  public convertToItem(data: any): CompleterItem | any {\n    return super.convertToItem(data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CompleterBaseData } from './base-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\n\n@Injectable()\nexport class LocalData extends CompleterBaseData {\n\n  private _data: any[];\n  // private savedTerm: string;\n  private savedTerm: string | any;\n\n  constructor() {\n    super();\n  }\n\n  public data(data: any[] | Observable<any[]>) {\n    if (data instanceof Observable) {\n      (<Observable<any[]>>data).subscribe((res) => {\n        this._data = res;\n        if (this.savedTerm) {\n          this.search(this.savedTerm);\n        }\n      });\n    } else {\n      this._data = <any[]>data;\n    }\n\n    return this;\n  }\n\n  public search(term: string): void {\n    if (!this._data) {\n      this.savedTerm = term;\n    } else {\n      this.savedTerm = null;\n      const matches: any[] = this.extractMatches(this._data, term);\n      this.next(this.processResults(matches));\n    }\n  }\n\n  // public convertToItem(data: any): CompleterItem {\n    public convertToItem(data: any): CompleterItem | any {\n    return super.convertToItem(data);\n  }\n}\n","import { Subject } from 'rxjs';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { CompleterData } from './completer-data.service';\nimport { isNil } from '../globals';\n\nexport abstract class CompleterBaseData extends Subject<CompleterItem[]> implements CompleterData {\n\n\n  protected _searchFields: string;\n  protected _titleField: string;\n  protected _descriptionField: string;\n  protected _imageField: string;\n\n  constructor() {\n    super();\n  }\n\n  public abstract search(term: string): void;\n\n  public cancel() { }\n\n  public searchFields(searchFields: string) {\n    this._searchFields = searchFields;\n    return this;\n  }\n\n  public titleField(titleField: string) {\n    this._titleField = titleField;\n    return this;\n  }\n\n  public descriptionField(descriptionField: string) {\n    this._descriptionField = descriptionField;\n    return this;\n  }\n\n  public imageField(imageField: string) {\n    this._imageField = imageField;\n    return this;\n  }\n\n  public convertToItem(data: any) {\n    // let image: string = null;\n    let image: string | any = null;\n    let formattedText: string;\n    // let formattedDesc: string;\n    let formattedDesc: string | any;\n\n    if (this._titleField) {\n      formattedText = this.extractTitle(data);\n    } else {\n      formattedText = data;\n    }\n\n    if (this._descriptionField) {\n      formattedDesc = this.extractValue(data, this._descriptionField);\n    }\n\n    if (this._imageField) {\n      image = this.extractValue(data, this._imageField);\n    }\n\n    if (isNil(formattedText)) {\n      return null;\n    }\n\n    return {\n      title: formattedText,\n      description: formattedDesc,\n      image: image,\n      originalObject: data\n    } as CompleterItem;\n\n  }\n\n  protected extractMatches(data: any[], term: string) {\n    let matches: any[] = [];\n    const searchFields = this._searchFields ? this._searchFields.split(',') : null;\n    if (this._searchFields !== null && this._searchFields !== undefined && term !== '') {\n      matches = data.filter(item => {\n        const values: any[] = searchFields ?\n        searchFields.map(searchField => this.extractValue(item, searchField)).filter(value => !!value) : [item];\n        return values.some(value => value.toString().toLowerCase().indexOf(term.toString().toLowerCase()) >= 0);\n      });\n    } else {\n      matches = data;\n    }\n\n\n    return matches;\n  }\n\n  protected extractTitle(item: any) {\n    // split title fields and run extractValue for each and join with ' '\n    return this._titleField.split(',')\n      .map((field) => {\n        return this.extractValue(item, field);\n      })\n      .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n  }\n\n  protected extractValue(obj: any, key: string) {\n    let keys: string[];\n    let result: any;\n    if (key) {\n      keys = key.split('.');\n      result = obj;\n      for (let i = 0; i < keys.length; i++) {\n        if (result) {\n          result = result[keys[i]];\n        }\n      }\n    } else {\n      result = obj;\n    }\n    return result;\n  }\n\n  protected processResults(matches: string[]): CompleterItem[] {\n    let i: number;\n    const results: CompleterItem[] = [];\n\n    if (matches && matches.length > 0) {\n      for (i = 0; i < matches.length; i++) {\n        const item = this.convertToItem(matches[i]);\n        if (item) {\n          results.push(item);\n        }\n      }\n    }\n    return results;\n  }\n}\n","export const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\nexport const MIN_SEARCH_LENGTH = 3;\nexport const PAUSE = 100;\nexport const TEXT_SEARCHING = 'Searching...';\nexport const TEXT_NO_RESULTS = 'No results found';\nexport const CLEAR_TIMEOUT = 50;\n\nexport function isNil(value: string) {\n  return typeof value === 'undefined' || value === null;\n}\n","import { Directive, EventEmitter, Output } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\n\nexport interface CompleterList {\n  search(term: string): void;\n  open(): void;\n  isOpen(open: boolean): void;\n  clear(): void;\n}\n\nexport interface CompleterDropdown {\n  clear(): void;\n  selectCurrent(): void;\n  nextRow(): void;\n  prevRow(): void;\n}\n\n@Directive({\n  selector: '[mdbCompleter]',\n})\nexport class MdbCompleterDirective {\n  @Output() public selected = new EventEmitter<CompleterItem>();\n  @Output() public highlighted = new EventEmitter<CompleterItem>();\n  @Output() public opened = new EventEmitter<boolean>();\n\n  private list: CompleterList;\n  private dropdown: CompleterDropdown;\n  private _hasHighlighted = false;\n  private _hasSelected = false;\n  private _cancelBlur = false;\n  private _isOpen = false;\n  private _autoHighlightIndex: number;\n\n  public setToNullValue: any = null;\n  public registerList(list: CompleterList) {\n    this.list = list;\n  }\n\n  public registerDropdown(dropdown: CompleterDropdown) {\n    this.dropdown = dropdown;\n  }\n\n  public onHighlighted(item: CompleterItem) {\n    this.highlighted.emit(item);\n    this._hasHighlighted = !!item;\n  }\n\n  public onSelected(item: CompleterItem, clearList = true) {\n    this.selected.emit(item);\n    if (item) {\n      this._hasSelected = true;\n    }\n    if (clearList) {\n      this.clear();\n    }\n  }\n\n  public search(term: string) {\n    if (this._hasSelected) {\n      // this.selected.emit(null);\n      this.selected.emit(this.setToNullValue);\n      this._hasSelected = false;\n    }\n    if (this.list) {\n      this.list.search(term);\n    }\n  }\n\n  public clear() {\n    if (this.dropdown) {\n      this.dropdown.clear();\n    }\n    if (this.list) {\n      this.list.clear();\n    }\n    this._hasHighlighted = false;\n    this.isOpen = false;\n  }\n\n  public selectCurrent() {\n    if (this.dropdown) {\n      this.dropdown.selectCurrent();\n    }\n  }\n\n  public nextRow() {\n    if (this.dropdown) {\n      this.dropdown.nextRow();\n    }\n  }\n\n  public prevRow() {\n    if (this.dropdown) {\n      this.dropdown.prevRow();\n    }\n  }\n\n  public hasHighlighted() {\n    return this._hasHighlighted;\n  }\n\n  public cancelBlur(cancel: boolean) {\n    this._cancelBlur = cancel;\n  }\n\n  public isCancelBlur() {\n    return this._cancelBlur;\n  }\n\n  public open() {\n    if (!this._isOpen) {\n      this.isOpen = true;\n      this.list.open();\n    }\n  }\n\n  public get isOpen() {\n    return this._isOpen;\n  }\n\n  public set isOpen(open: boolean) {\n    this._isOpen = open;\n    this.opened.emit(this._isOpen);\n    if (this.list) {\n      this.list.isOpen(open);\n    }\n  }\n\n  public get autoHighlightIndex() {\n    return this._autoHighlightIndex;\n  }\n\n  public set autoHighlightIndex(index: number) {\n    this._autoHighlightIndex = index;\n  }\n\n  public get hasSelected() {\n    return this._hasSelected;\n  }\n}\n","'use strict';\nimport {Component, Input, OnInit} from '@angular/core';\n\nexport interface MatchPart {\n  isMatch: boolean;\n  text: string;\n}\n\n@Component({\n  selector: 'mdb-completer-list-item',\n  template: \"<span class=\\\"completer-list-item-holder\\\" [ngClass]=\\\"{'completer-title': type === 'title', 'completer-description': type === 'description'}\\\" > <span class=\\\"completer-list-item\\\" *ngFor=\\\"let part of parts\\\" [ngClass]=\\\"part.isMatch ? matchClass : null\\\">{{part.text}}</span> </span> \"\n})\nexport class CompleterListItemComponent implements OnInit {\n  @Input() public text: string;\n  @Input() public searchStr: string;\n  @Input() public matchClass: string;\n  @Input() public type: string;\n\n  public parts: MatchPart[] = [];\n  public ngOnInit(): any {\n    if (!this.searchStr) {\n      this.parts.push({ isMatch: false, text: this.text });\n      return;\n    }\n    const matchStr = this.text.toLowerCase();\n    let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n    let startIndex = 0;\n    while (matchPos >= 0) {\n      const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n      if (matchPos === 0) {\n        this.parts.push({ isMatch: true, text: matchText });\n        startIndex += this.searchStr.length;\n      } else if (matchPos > 0) {\n        const matchPart = this.text.slice(startIndex, matchPos);\n        this.parts.push({ isMatch: false, text: matchPart });\n        this.parts.push({ isMatch: true, text: matchText });\n        startIndex += this.searchStr.length + matchPart.length;\n      }\n      matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n    }\n    if (startIndex < this.text.length) {\n       this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n    }\n  }\n}\n","\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n// SideNav\nexport const slideIn: any = trigger('slideIn', [\n  state('inactive', style({ opacity: 0, transform: 'translateX(-300%)' })),\n  state('active', style({ opacity: 1, transform: 'translateX(0)' })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const fadeIn: any = trigger('fadeIn', [\n  state('inactive', style({ opacity: 0 })),\n  state('active', style({ opacity: 1 })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const slideOut: any = trigger('slideOut', [\n  state('inactive', style({ opacity: 0, transform: 'translateX(-300%)' })),\n  state('active', style({ opacity: 1, transform: 'translateX(0)' })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const flipState: any = trigger('flipState', [\n\n  state('active', style({ transform: 'rotateY(179.9deg)' })),\n  state('inactive', style({ transform: 'rotateY(0)' })),\n]);\n\n// Rotating animation animation\nexport const turnState: any = trigger('turnState', [\n  state('active', style({ transform: 'rotateY(179.9deg)' })),\n  state('inactive', style({ transform: 'rotateY(0)' })),\n]);\n\n// Social reveal animation\nexport const iconsState: any = trigger('iconsState', [\n  state('isactive', style({ visibility: 'visible', transform: 'translate(-6%)' })),\n  state('isnotactive', style({ visibility: 'hidden', transform: 'translate(27%)' })),\n  transition('isactive => isnotactive', animate('100ms ease-in')),\n  transition('isnotactive => isactive', animate('200ms ease-out')),\n]);\n\n// Reveal animation animation\nexport const socialsState: any = trigger('socialsState', [\n  state('active', style({ visibility: 'visible', transform: 'translateY(-100%)' })),\n  state('inactive', style({ visibility: 'hidden', transform: 'translateY(0)' })),\n  transition('* => void', animate('200ms ease-in')),\n  transition('void => *', animate('200ms ease-out')),\n]);\n\n// image popup\n// export const zoomState: any = trigger('zoomState', [\n//   state('active', style({ transform: 'scale(1, 1)', cursor: 'zoom-out' })),\n//   state('inactive', style({ transform: 'scale(0.9, 0.9)', cursor: 'zoom-in' })),\n//   transition('active => inactive', animate('300ms ease-in')),\n//   transition('inactive => active', animate('300ms ease-out')),\n// ]);\n\n// export const restartState: any = trigger('restartState', [\n//   state('inactive', style({ transform: 'scale(0.9, 0.9)' })),\n// ]);\n\n// alerts\nexport const flyInOut: any = trigger('flyInOut', [\n  state('inactive', style({ display: 'none', opacity: 0.7 })),\n  state('active', style({ opacity: 0.7 })),\n  state('removed', style({ opacity: 0 })),\n  transition('inactive => active', animate('300ms ease-in')),\n  transition('active => removed', animate('300ms ease-in')),\n]);\n","import {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToastComponent } from './toast.component';\nimport { TOAST_CONFIG } from './toast.token';\nimport { ToastService } from './toast.service';\nimport { GlobalConfig } from './toast.config';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { Overlay } from '../overlay/overlay';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ToastComponent],\n  declarations: [ToastComponent],\n  entryComponents: [ToastComponent],\n})\nexport class ToastModule {\n  static forRoot(config?: GlobalConfig): ModuleWithProviders {\n    return {\n      ngModule: ToastModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: config },\n        OverlayContainer,\n        Overlay,\n        ToastService,\n      ]\n    };\n  }\n  constructor(@Optional() @SkipSelf() parentModule: ToastModule) {\n    if (parentModule) {\n      throw new Error('ToastModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n}\n","import { Injectable, Injector, ComponentRef, Inject, SecurityContext } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { GlobalConfig, IndividualConfig, ToastPackage, tsConfig } from './toast.config';\nimport { ToastInjector, ToastRef } from './toast.injector';\nimport { ToastContainerDirective } from './toast.directive';\nimport { TOAST_CONFIG } from './toast.token';\nimport { ToastComponent } from './toast.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface ActiveToast {\n  toastId?: number;\n  message?: string;\n  portal?: ComponentRef<any>;\n  toastRef?: ToastRef<any>;\n  onShown?: Observable<any>;\n  onHidden?: Observable<any>;\n  onTap?: Observable<any>;\n  onAction?: Observable<any>;\n}\n\n@Injectable()\nexport class ToastService {\n  index = 0;\n  previousToastMessage = '';\n  currentlyActive = 0;\n  toasts: ActiveToast[] = [];\n  overlayContainer: ToastContainerDirective;\n\n  constructor(\n    // @Inject(TOAST_CONFIG) public toastConfig: GlobalConfig,\n    @Inject(TOAST_CONFIG) public toastConfig: GlobalConfig | any,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n  ) {\n    tsConfig.serviceInstance = this;\n\n\n    function use<T>(source: T, defaultValue: T): T {\n      return toastConfig && source !== undefined ? source : defaultValue;\n    }\n    this.toastConfig = this.applyConfig(toastConfig);\n    // Global\n    this.toastConfig.maxOpened = use(this.toastConfig.maxOpened, 0);\n    this.toastConfig.autoDismiss = use(this.toastConfig.autoDismiss, false);\n    this.toastConfig.newestOnTop = use(this.toastConfig.newestOnTop, true);\n    this.toastConfig.preventDuplicates = use(this.toastConfig.preventDuplicates, false);\n    if (!this.toastConfig.iconClasses) {\n      this.toastConfig.iconClasses = {};\n    }\n    this.toastConfig.iconClasses.error = this.toastConfig.iconClasses.error || 'toast-error';\n    this.toastConfig.iconClasses.info = this.toastConfig.iconClasses.info || 'toast-info';\n    this.toastConfig.iconClasses.success = this.toastConfig.iconClasses.success || 'toast-success';\n    this.toastConfig.iconClasses.warning = this.toastConfig.iconClasses.warning || 'toast-warning';\n\n    // Individual\n    this.toastConfig.timeOut = use(this.toastConfig.timeOut, 5000);\n    this.toastConfig.closeButton = use(this.toastConfig.closeButton, false);\n    this.toastConfig.extendedTimeOut = use(this.toastConfig.extendedTimeOut, 1000);\n    this.toastConfig.progressBar = use(this.toastConfig.progressBar, false);\n    this.toastConfig.enableHtml = use(this.toastConfig.enableHtml, false);\n    this.toastConfig.toastClass = use(this.toastConfig.toastClass, 'toast');\n    this.toastConfig.positionClass = use(this.toastConfig.positionClass, 'toast-top-right');\n    this.toastConfig.titleClass = use(this.toastConfig.titleClass, 'toast-title');\n    this.toastConfig.messageClass = use(this.toastConfig.messageClass, 'toast-message');\n    this.toastConfig.tapToDismiss = use(this.toastConfig.tapToDismiss, true);\n    this.toastConfig.toastComponent = use(this.toastConfig.toastComponent, ToastComponent);\n    this.toastConfig.onActivateTick = use(this.toastConfig.onActivateTick, false);\n    this.toastConfig.actionButton = use(this.toastConfig.actionButton, '');\n  }\n  /** show successful toast */\n  // show(message: string, title?: string, override?: IndividualConfig, type = '') {\n    show(message: string, title?: string | any, override?: IndividualConfig, type = '') {\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  // success(message: string, title?: string, override?: IndividualConfig) {\n    success(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.success;\n    const type: any = this.toastConfig.iconClasses.success;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  // error(message: string, title?: string, override?: IndividualConfig) {\n    error(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.error;\n    const type: any = this.toastConfig.iconClasses.error;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  // info(message: string, title?: string, override?: IndividualConfig) {\n    info(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.info;\n    const type: any = this.toastConfig.iconClasses.info;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  // warning(message: string, title?: string, override?: IndividualConfig) {\n    warning(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.warning;\n    const type: any = this.toastConfig.iconClasses.warning;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    let toast: any;\n    for (toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    // const found = this._findToast(toastId);\n    const found: any = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= +this.toastConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      // const p = this.toasts[this.currentlyActive].toastRef;\n      const p: any = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: IndividualConfig = {}): GlobalConfig {\n    function use<T>(source: T, defaultValue: T): T {\n      return override && source !== undefined ? source : defaultValue;\n    }\n    const current: GlobalConfig = { ...this.toastConfig };\n    current.closeButton = use(override.closeButton, current.closeButton);\n    current.extendedTimeOut = use(override.extendedTimeOut, current.extendedTimeOut);\n    current.progressBar = use(override.progressBar, current.progressBar);\n    current.timeOut = use(override.timeOut, current.timeOut);\n    current.enableHtml = use(override.enableHtml, current.enableHtml);\n    current.toastClass = use(override.toastClass, current.toastClass);\n    current.positionClass = use(override.positionClass, current.positionClass);\n    current.titleClass = use(override.titleClass, current.titleClass);\n    current.messageClass = use(override.messageClass, current.messageClass);\n    current.tapToDismiss = use(override.tapToDismiss, current.tapToDismiss);\n    current.toastComponent = use(override.toastComponent, current.toastComponent);\n    current.onActivateTick = use(override.onActivateTick, current.onActivateTick);\n    current.actionButton = use(override.actionButton, current.actionButton);\n    return current;\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string,\n    title: string,\n    config: GlobalConfig,\n  ): ActiveToast | null | any {\n    // max opened and auto dismiss = true\n    if (this.toastConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastConfig.maxOpened && this.currentlyActive >= this.toastConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    // let sanitizedMessage = message;\n    let sanitizedMessage: any = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    // const ins: ActiveToast = {\n      const ins: ActiveToast | any = {\n      toastId: this.index,\n      message,\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n    };\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    ins.portal = overlayRef.attach(component, this.toastConfig.newestOnTop);\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { GlobalConfig } from './toast.config';\n\nexport const TOAST_CONFIG = new InjectionToken<GlobalConfig>('ToastConfig');\n","import { Injector } from '@angular/core';\nimport { Observable ,  Subject } from 'rxjs';\n\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toast.config';\n\n/**\n * Reference to a toast opened via the Toast service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed: Subject<any> = new Subject();\n  private _activate: Subject<any> = new Subject();\n  private _manualClose: Subject<any> = new Subject();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastPackage && this._toastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n","import { NgModule, ModuleWithProviders, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[mdbToastContainer]',\n  exportAs: 'mdb-toast-container',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) {}\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  exports: [ToastContainerDirective],\n  declarations: [ToastContainerDirective],\n})\nexport class ToastContainerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ToastContainerModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  ApplicationRef,\n} from '@angular/core';\n\nimport {\n  trigger,\n  state,\n  transition,\n  animate,\n  style\n} from '@angular/animations';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\n\nimport { GlobalConfig, ToastPackage, tsConfig } from './toast.config';\n\n@Component({\n  selector: 'mdb-toast-component',\n  template: \"<button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" class=\\\"toast-close-button\\\"> &times; </button> <div *ngIf=\\\"title\\\" class=\\\"{{options.titleClass}}\\\" [attr.aria-label]=\\\"title\\\"> {{title}} </div> <div *ngIf=\\\"message && options.enableHtml\\\" class=\\\"{{options.messageClass}}\\\" [innerHTML]=\\\"message\\\"> </div> <div *ngIf=\\\"message && !options.enableHtml\\\" class=\\\"{{options.messageClass}}\\\" [attr.aria-label]=\\\"message\\\"> {{message}} </div> <button *ngIf=\\\"options.actionButton\\\" class=\\\"btn btn-block toast-action mt-2\\\" (click)=\\\"onActionClick()\\\">{{ options.actionButton }}</button> <div *ngIf=\\\"options.progressBar\\\"> <div class=\\\"toast-progress\\\" [style.width.%]=\\\"width\\\"></div> </div>\",\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0\n      })),\n      state('active', style({ opacity: .5 })),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active', animate('300ms ease-in')),\n      transition('active => removed', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class ToastComponent implements OnDestroy {\n  message: string | SafeHtml;\n  title: string;\n  options: GlobalConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = 'inactive';\n   timeout: any;\n   intervalId: any;\n   hideTime: number;\n   sub: Subscription;\n   sub1: Subscription;\n\n   protected toastService: any;\n\n  constructor(\n    public toastPackage: ToastPackage,\n    protected appRef: ApplicationRef\n  ) {\n    this.toastService = tsConfig.serviceInstance;\n\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (this.options.timeOut !== 0) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() =>\n      this.toastService.remove(this.toastPackage.toastId),\n      300\n    );\n  }\n\n  onActionClick() {\n    this.toastPackage.triggerAction();\n    this.remove();\n  }\n\n  @HostListener('click')\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (+this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = +this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + this.options.timeOut;\n    this.width = 100;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n","/* tslint:disable:no-inferrable-types */\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subject ,  Observable } from 'rxjs';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast.injector';\n\n/**\n * Configuration for an individual toast.\n */\n export interface IndividualConfig {\n  /**\n  * toast time to live in milliseconds\n  * default: 5000\n  */\n  // timeOut?: number;\n  timeOut?: number | any;\n  /**\n  * toast show close button\n  * default: false\n  */\n  closeButton?: boolean;\n  /** time to close after a user hovers over toast */\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  // extendedTimeOut?: number;\n  extendedTimeOut?: number | any;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar?: boolean;\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml?: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass?: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass?: string | any;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  titleClass?: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  messageClass?: string;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss?: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent?: ComponentType<any> | any;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick?: boolean;\n\n  actionButton?: string;\n}\n\nexport interface ToastIconClasses {\n  error?: string;\n  info?: string;\n  success?: string;\n  warning?: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened?: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss?: boolean;\n  iconClasses?: ToastIconClasses;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop?: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates?: boolean;\n}\n/**\n * Remove warning message from angular-cli\n */\nexport class GlobalConfig {}\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap: Subject<any> = new Subject();\n  private _onAction: Subject<any> = new Subject();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml,\n    public title: string,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) { }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    this._onTap.complete();\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n    this._onAction.complete();\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n\n}\n\n\nexport const tsConfig = {\n  serviceInstance: new Object()\n};\n","import { ComponentFactoryResolver, Injectable, ApplicationRef } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { OverlayContainer } from './overlay-container';\nimport { ToastContainerDirective } from '../toast/toast.directive';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: any = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n      private _hostDomElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import {\n  ViewContainerRef,\n  ComponentRef,\n  Injector\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  // private _attachedHost: BasePortalHost;\n  private _attachedHost: BasePortalHost | any;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    const host = this._attachedHost;\n    this._attachedHost = null;\n    return host.detach();\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  // setAttachedHost(host: BasePortalHost) {\n    setAttachedHost(host: BasePortalHost): any {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  public setToNullValue: any = null;\n  /** The portal currently attached to the host. */\n  // private _attachedPortal: ComponentPortal<any>;\n  private _attachedPortal: ComponentPortal<any> | any;\n\n  /** A function that will permanently dispose this host. */\n  // private _disposeFn: () => void;\n  private _disposeFn: () => void | any;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) { this._attachedPortal.setAttachedHost(null); }\n\n    this._attachedPortal = null;\n    if (this._disposeFn != null) {\n      this._disposeFn();\n      // this._disposeFn = null;\n      this._disposeFn = this.setToNullValue;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {ComponentRef} from '@angular/core';\nimport {BasePortalHost, ComponentPortal} from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(\n      private _portalHost: BasePortalHost) { }\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SqueezeBoxComponent } from './components/squeezebox';\nimport { SBItemComponent } from './components/sb-item';\nimport { SBItemHeadComponent } from './components/sb-item.head';\nimport { SBItemBodyComponent } from './components/sb-item.body';\n\nexport const SQUEEZEBOX_COMPONENTS = [SqueezeBoxComponent, SBItemComponent, SBItemHeadComponent, SBItemBodyComponent];\nexport { SBItemComponent } from './components/sb-item';\nexport { SBItemHeadComponent } from './components/sb-item.head';\nexport { SBItemBodyComponent } from './components/sb-item.body';\nexport { SqueezeBoxComponent } from './components/squeezebox';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SQUEEZEBOX_COMPONENTS],\n  exports: [SQUEEZEBOX_COMPONENTS]\n})\nexport class AccordionModule { }\n","import {Component, Input, ContentChildren, QueryList, forwardRef} from '@angular/core';\nimport {SBItemComponent} from './sb-item';\nimport {sbConfig} from './sb.config';\n\n@Component({\n  exportAs: 'squeezebox',\n  selector: 'mdb-squeezebox, mdb-accordion',\n  template: \"<div class=\\\"accordion md-accordion\\\"> <ng-content></ng-content> </div>\"\n})\nexport class SqueezeBoxComponent {\n\n  @Input() multiple = true;\n\n  @ContentChildren(forwardRef(() => SBItemComponent)) items: QueryList<SBItemComponent>;\n\n  constructor() {\n    sbConfig.serviceInstance = this;\n  }\n\n  didItemToggled(item: SBItemComponent) {\n    // on not multiple, it will collpase the rest of items\n    if (!this.multiple) {\n      this.items.toArray().forEach(function(i) {\n        if (i !== item) {\n          i.applyToggle(true);\n        }\n      });\n    }\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {SBItemComponent} from './sb-item';\n\n@Component({\n  exportAs: 'sbItemHead',\n  selector: 'mdb-item-head, mdb-accordion-item-head',\n  template: \"<div class=\\\"card-header {{ customClass }}\\\" [ngClass]=\\\"{ 'item-disabled': isDisabled }\\\" (click)=\\\"toggleClick($event)\\\"> <a role=\\\"button\\\"> <h5 class=\\\"mb-0\\\"> <ng-content></ng-content> <i *ngIf=\\\"indicator\\\" class=\\\"fa fa-angle-down rotate-icon\\\"></i> </h5> </a> </div>\"\n})\nexport class SBItemHeadComponent {\n  @Input() isDisabled = false;\n  @Input() customClass: string;\n  @Input() indicator = true;\n\n  constructor(private sbItem: SBItemComponent) {}\n\n  toggleClick(event: any) {\n    event.preventDefault();\n    if (!this.isDisabled) {\n      this.sbItem.collapsed = !this.sbItem.collapsed;\n      this.sbItem.toggle(this.sbItem.collapsed);\n    }\n  }\n}\n","import { Component, ContentChild, Input, AfterViewInit } from '@angular/core';\nimport { SBItemBodyComponent } from './sb-item.body';\nimport { sbConfig } from './sb.config';\n\n@Component({\n  exportAs: 'sbItem',\n  selector: 'mdb-item, mdb-accordion-item',\n  template: \"<div class=\\\"card test z-depth1 {{ customClass }}\\\" [ngClass]=\\\"{'is-collapsed': collapsed, 'active': !collapsed}\\\"> <ng-content></ng-content> </div>\"\n})\nexport class SBItemComponent implements AfterViewInit {\n\n  private squeezebox: any;\n\n  @Input() public collapsed = true;\n  @Input() customClass: string;\n\n  @ContentChild(SBItemBodyComponent) body: SBItemBodyComponent;\n\n  constructor() {\n    this.squeezebox = sbConfig.serviceInstance;\n  }\n\n  ngAfterViewInit() {\n    if (this.body !== undefined) {\n      setTimeout(() => {\n        this.collapsed ? this.body.expandAnimationState = 'collapsed' : this.body.expandAnimationState = 'expanded';\n      }, 0);\n      this.body.toggle(this.collapsed);\n    }\n\n  }\n  toggle(collapsed: boolean) {\n    this.squeezebox.didItemToggled(this);\n    this.applyToggle(collapsed);\n  }\n\n  applyToggle(collapsed: boolean) {\n    if (this.body !== undefined) {\n      this.collapsed = collapsed;\n      this.body.toggle(collapsed);\n    }\n  }\n}\n","export const sbConfig = {\n    serviceInstance: new Object()\n};\n","import {Component, ElementRef, ViewChild, Input } from '@angular/core';\nimport { state, style, trigger, transition, animate } from '@angular/animations';\n\n@Component({\n  exportAs: 'sbItemBody',\n  selector: 'mdb-item-body, mdb-accordion-item-body',\n  template: \"<div #body class=\\\"sb-item-body\\\" [style.height]=\\\"height\\\" [@expandBody]=\\\"expandAnimationState\\\"> <div class=\\\"card-body {{ customClass }}\\\"> <ng-content></ng-content> </div> </div>\",\n  animations: [\n    trigger('expandBody', [\n      state('collapsed', style({height: '0px', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate('500ms ease')),\n    ])\n  ]\n})\nexport class SBItemBodyComponent {\n  @Input() customClass: string;\n\n  public height = '0';\n  expandAnimationState = 'collapsed';\n\n  @ViewChild('body') bodyEl: ElementRef;\n\n  constructor() {}\n\n  toggle(collapsed: boolean) {\n    setTimeout(() => {\n      collapsed ? this.expandAnimationState = 'collapsed' : this.expandAnimationState = 'expanded';\n    }, 0);\n  }\n}\n"],"names":["MODULES","NgModule","CommonModule","Output","Input","ViewContainerRef","Renderer2","ElementRef","Directive","HostBinding","ChangeDetectionStrategy","Component","Injectable","ContentChildren","RouterLinkWithHref","HostListener","ViewChild","NO_ERRORS_SCHEMA","EventEmitter","document","Attribute","NG_VALIDATORS","forwardRef","Inject","PLATFORM_ID","isPlatformBrowser","ApplicationRef","Injector","NgZone","ReflectiveInjector","TemplateRef","transition","animate","state","style","trigger","NG_VALUE_ACCESSOR","ViewEncapsulation","FormsModule","ViewChildren","DOCUMENT","NavigationError","NavigationCancel","NavigationEnd","Util","isDevMode","Host","ChangeDetectorRef","isPlatformServer","Observable","mergeMap","timer","FormControl","catchError","map","Subject","Optional","SkipSelf","DomSanitizer","SecurityContext","InjectionToken","tslib_1.__extends"],"mappings":"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E,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAA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}